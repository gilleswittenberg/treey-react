{"version":3,"sources":["contexts/TreeyContext.ts","hooks/useTreey.ts","components/TreeyProvider.tsx","contexts/UIContext.ts","hooks/useEscListener.ts","components/UIProvider.tsx","components/Header.tsx","components/Spinner.tsx","components/Button.tsx","utils/last.ts","components/Item.tsx","components/FormAdd.tsx","components/Items.tsx","components/Tree.tsx","pages/Home.tsx","components/ItemOverview.tsx","pages/Item.tsx","pages/404.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["TreeyContext","createContext","tree","treey","init","read","createAndAdd","update","remove","move","useTreey","_useState","useState","_useState2","Object","slicedToArray","setTree","useEffect","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","sent","stop","actions","_read2","_callee2","id","_context2","abrupt","_x","apply","this","arguments","_createAndAdd2","_callee3","data","parentId","_context3","_x2","_x3","_update2","_callee4","_context4","_x4","_x5","_remove2","_callee5","index","_context5","_x6","_x7","_x8","_move2","_callee6","oldParentId","oldIndex","_context6","_x9","_x10","_x11","_x12","_x13","TreeyProvider","_ref","children","_useTreey","_useTreey2","value","react_default","createElement","contexts_TreeyContext","Provider","UIContext","shownForm","setShownForm","useEscListener","action","handler","event","keyCode","preventDefault","window","addEventListener","removeEventListener","UIProvider","closeForms","contexts_UIContext","Header","className","es","to","src","process","width","height","alt","Spinner","Button","type","onClick","style","backgroundImage","concat","typeToImageMap","title","last","arr","length","Item","parents","item","state","ids","getId","path","undefined","pathString","map","i","name","join","setValue","_useState3","_useState4","isOpened","setIsOpened","useContext","_useContext2","isEditing","showItem","showForm","showItems","linkTo","onClickDelete","_ref2","onSubmit","_ref3","stopPropagation","components_Button","onChange","target","autoFocus","components_Items","items","relations","FormAdd","showButton","Items","key","components_Item","components_FormAdd","Tree","PageHome","_useContext","showSpinner","showTree","components_Spinner","Fragment","components_Tree","parseFullName","utils","ItemOverview","fullName","setItem","notFound","setNotFound","_useState5","_useState6","invalidFullName","setInvalidFullName","isLoading","itemName","JSON","stringify","events","payload","showPayload","datetime","String","PageItem","components_ItemOverview","Page404","App","components_Header","components_TreeyProvider","components_UIProvider","pages_Home","pages_Item","_404","default","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c5e5fd86.chunk.js","sourcesContent":["import { createContext } from \"react\"\n\ntype Value = {\n  tree: TreeItem | null\n  treey: Treey | null\n}\n\nconst value = {\n  tree: null,\n  treey: null\n} as Value\n\nconst TreeyContext = createContext(value)\n\nexport default TreeyContext\n","import { useState, useEffect } from \"react\"\nimport treey from \"treey\"\nconst { treey: { init, read, createAndAdd, update, remove, move } } = treey\n\nconst useTreey = () => {\n  const [tree, setTree] = useState()\n  useEffect(() => {\n    (async () => {\n      const tree = await init()\n      setTree(tree)\n    })()\n  }, [])\n  const actions: Treey = {\n    read: async (id: Id) => {\n      return await read(id)\n    },\n    createAndAdd: async (data: Data, parentId: Id) => {\n      const tree = await createAndAdd(data, parentId)\n      setTree(tree)\n    },\n    update: async (id: Id, data: Data) => {\n      const tree = await update(id, data)\n      setTree(tree)\n    },\n    remove: async (id: Id, parentId: Id, index: Index) => {\n      const tree = await remove(id, parentId, index)\n      setTree(tree)\n    },\n    move: async (id: Id, oldParentId: Id, oldIndex: Index, parentId: Id, index: Index) => {\n      const tree = await move(id, oldParentId, oldIndex, parentId, index)\n      setTree(tree)\n    }\n  }\n  return [tree, actions]\n}\n\nexport default useTreey\n","import React, { ReactNode } from \"react\"\nimport TreeyContext from '../contexts/TreeyContext'\nimport useTreey from \"../hooks/useTreey\"\n\ntype Props = {\n  children: ReactNode\n}\n\nconst TreeyProvider: React.FC<Props> = ({ children }) => {\n\n  const [tree, treey] = useTreey()\n  const value = { tree, treey }\n\n  return (\n    <TreeyContext.Provider value={ value }>\n      { children }\n    </TreeyContext.Provider>\n  )\n}\n\nexport default TreeyProvider\n","import { createContext } from \"react\"\n\ntype Value = {\n  shownForm: string | null\n  setShownForm: any\n}\n\nconst value = {\n  shownForm: null,\n  setShownForm: null\n} as Value\n\nconst UIContext = createContext(value)\n\nexport default UIContext\n","import { useEffect } from \"react\"\n\nconst useEscListener = (action: () => void) => {\n\n  useEffect(() => {\n    const handler = (event: KeyboardEvent) => {\n      if (event.keyCode === 27) {\n        event.preventDefault()\n        action()\n      }\n    }\n    window.addEventListener(\"keydown\", handler)\n    return () => window.removeEventListener(\"keydown\", handler)\n  }, [action])\n}\n\nexport default useEscListener\n","import React, { ReactNode, useState, useEffect } from \"react\"\nimport UIContext from '../contexts/UIContext'\nimport useEscListener from \"../hooks/useEscListener\"\n\ntype Props = {\n  children: ReactNode\n}\n\nconst UIProvider: React.FC<Props> = ({ children }) => {\n\n  const [shownForm, setShownForm] = useState()\n  const closeForms = () => setShownForm(null)\n\n  useEscListener(closeForms)\n\n  useEffect(() => {\n    window.addEventListener(\"click\", closeForms)\n    return () => window.removeEventListener(\"click\", closeForms)\n  }, [])\n\n  const value = { shownForm, setShownForm }\n\n  return (\n    <UIContext.Provider value={ value }>\n      { children }\n    </UIContext.Provider>\n  )\n}\n\nexport default UIProvider\n","import React from \"react\"\nimport { Link } from \"@reach/router\"\n\nimport \"../styles/Header.sass\"\n\nconst Header: React.SFC = () => {\n  const src = process.env.PUBLIC_URL + \"/images/logo_64x64.png\"\n  return (\n    <header className=\"Header\">\n      <Link to=\"/\">\n        <h1><img src={ src } width=\"32px\" height=\"32px\" alt=\"木\" /></h1>\n        <h2>treey</h2>\n      </Link>\n    </header>\n  )\n}\n\nexport default Header\n","import React from \"react\"\n\nimport \"../styles/Spinner.sass\"\n\nconst Spinner: React.SFC = () => {\n  return (<p className=\"spinner\">is loading&hellip;</p>)\n}\n\nexport default Spinner\n","import React from \"react\"\n\nimport \"../styles/Button.sass\"\n\ntype ButtonType = \"ADD\" | \"EDIT\" | \"DELETE\"\n\ntype Props = {\n  type: ButtonType\n  onClick?: () => void\n}\n\nconst typeToImageMap = (type: ButtonType) : string => {\n  switch (type) {\n  case \"ADD\": return \"add_64x64.png\"\n  case \"EDIT\": return \"submit_64x64.png\"\n  case \"DELETE\": return \"remove_64x64.png\"\n  }\n}\n\nconst Button: React.FC<Props> = ({ type, onClick }) => {\n  const className = \"Button \" + type\n  const backgroundImage = `url(\"${ process.env.PUBLIC_URL }/images/${ typeToImageMap(type) }\")`\n  const style = { backgroundImage }\n  return (\n    <button className={ className } style={ style } onClick={ onClick } title={ type }>{ type }</button>\n  )\n}\n\nexport default Button\n","const last = <T>(arr: T[]) => arr[arr.length - 1]\nexport default last\n","import React, { useState, useContext, FormEvent } from \"react\"\nimport { Link } from \"@reach/router\"\nimport TreeyContext from \"../contexts/TreeyContext\"\nimport UIContext from \"../contexts/UIContext\"\nimport Items from \"./Items\"\nimport Button from \"./Button\"\nimport last from \"../utils/last\"\n\nimport \"../styles/Item.sass\"\n\ntype Props = {\n  parents: Ids\n  index: Index\n  item: TreeItem\n}\n\nconst getId = (item: TreeItem) : Id | undefined => item.state.ids && item.state.ids[0]\n\nconst Item: React.FC<Props> = ({ parents, index, item }) => {\n\n  const id = getId(item)\n  const parentId = last(parents)\n  const path = id ? parents.concat(id) : undefined\n  const pathString = path ? path.map(i => i.name).join(\"/\") : undefined\n  const data = item.state && item.state.data as Data\n\n  const [value, setValue] = useState(data)\n  const [isOpened, setIsOpened] = useState(false)\n  const { treey } = useContext(TreeyContext)\n  const { shownForm, setShownForm } = useContext(UIContext)\n\n  const isEditing = shownForm === pathString\n  const showItem = !isEditing\n  const showForm = isEditing\n  const showItems = id && isOpened\n\n  const linkTo = `/item/${ item.name }`\n\n  const onClick = () => setIsOpened(!isOpened)\n  const onClickEdit = () => setShownForm(pathString)\n  const onClickDelete = async () => {\n    if (treey == null) return\n    if (id == null) return\n    await treey.remove(id, parentId, index)\n  }\n  const onSubmit = async (event: FormEvent) => {\n    event.preventDefault()\n    if (treey == null) return\n    if (id == null) return\n    await treey.update(id, value)\n    setShownForm(null)\n  }\n  const onChange = (event: FormEvent) => {\n    const value = (event.target as HTMLInputElement).value\n    setValue(value)\n  }\n\n  return (\n    <div className=\"Item\" onClick={ event => event.stopPropagation() }>\n      { showItem &&\n        <div className=\"ItemBody\">\n          <span onClick={ onClick }>\n            { data }\n            <Link to={ linkTo } className=\"info\">ⓘ</Link>\n          </span>\n          <Button type=\"EDIT\" onClick={ onClickEdit } />\n          <Button type=\"DELETE\" onClick={ onClickDelete } />\n        </div>\n      }\n      { showForm &&\n        <form onSubmit={ onSubmit }>\n          <input type=\"text\" onChange={ onChange } value={ value } autoFocus />\n          <Button type=\"EDIT\" />\n        </form>\n      }\n      { id && path && showItems &&\n        <Items parents={ path } items={ item.relations } />\n      }\n    </div>\n  )\n}\n\nexport default Item\n","import React, { useState, useContext, FormEvent } from \"react\"\nimport TreeyContext from \"../contexts/TreeyContext\"\nimport UIContext from \"../contexts/UIContext\"\nimport Button from \"./Button\"\nimport last from \"../utils/last\"\n\nimport \"../styles/FormAdd.sass\"\n\ntype Props = {\n  parents: Ids\n}\n\nconst FormAdd: React.FC<Props> = ({ parents }) => {\n\n  const parentId = last(parents)\n  const pathString = parents.map(i => i.name).join(\"/\") + \"/add\"\n  const [value, setValue] = useState(\"\")\n  const { treey } = useContext(TreeyContext)\n  const { shownForm, setShownForm } = useContext(UIContext)\n\n  const showForm = shownForm === pathString\n  const showButton = !showForm\n\n  const onClick = () => setShownForm(pathString)\n  const onSubmit = async (event: FormEvent) => {\n    event.preventDefault()\n    if (treey == null) return\n    await treey.createAndAdd(value, parentId)\n    setShownForm(null)\n    setValue(\"\")\n  }\n  const onChange = (event: FormEvent) => {\n    const value = (event.target as HTMLInputElement).value\n    setValue(value)\n  }\n\n  return (\n    <div className=\"FormAdd\">\n      { showButton &&\n        <Button onClick={ onClick } type=\"ADD\" />\n      }\n      { showForm &&\n        <form onSubmit={ onSubmit }>\n          <input type=\"text\" onChange={ onChange } value={ value } autoFocus />\n          <Button type=\"ADD\" />\n        </form>\n      }\n    </div>\n  )\n}\n\nexport default FormAdd\n","import React from \"react\"\nimport Item from \"./Item\"\nimport FormAdd from \"./FormAdd\"\n\nimport \"../styles/Items.sass\"\n\ntype Props = {\n  parents: Ids\n  items: TreeItems\n}\n\nconst Items: React.FC<Props> = ({ parents, items }) => {\n\n  const showItems = items.length > 0\n\n  return (\n    <div className=\"Items\">\n      { showItems &&\n        <ul>\n          { items.map((item, index) => {\n              return (\n                <li key={ item.name }>\n                  <Item parents={ parents } index={ index } item={ item } />\n                </li>\n              )\n            })\n          }\n        </ul>\n      }\n      <FormAdd parents={ parents } />\n    </div>\n  )\n}\n\nexport default Items\n","import React from \"react\"\nimport Items from \"./Items\"\n\nimport \"../styles/Tree.sass\"\n\ntype Props = {\n  tree: TreeItem\n  treey: Treey\n}\n\nconst Tree: React.FC<Props> = ({ tree, treey }) => {\n\n  const items = tree && tree.relations\n  const id = tree && tree.state.ids && tree.state.ids[0]\n  const parents = [id]\n\n  return (\n    <div className=\"Tree\">\n      { id &&\n        <Items parents={ parents } items={ items } />\n      }\n    </div>\n  )\n}\n\nexport default Tree\n","import React, { useContext } from \"react\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport TreeyContext from \"../contexts/TreeyContext\"\nimport Spinner from \"../components/Spinner\"\nimport Tree from \"../components/Tree\"\n\nimport \"../styles/Home.sass\"\n\ntype Props = RouteComponentProps\n\nconst PageHome: React.FC<Props> = () => {\n\n  const { tree, treey } = useContext(TreeyContext)\n  const showSpinner = tree == null\n  const showTree = tree != null && treey != null\n  const name = tree != null ? tree.name : \"\"\n\n  return (\n    <div className=\"Page PageHome\">\n      { showSpinner &&\n        <Spinner/>\n      }\n      { showTree &&\n        <>\n          <h1 className=\"RootItem\">{ name }</h1>\n          <Tree tree={ tree! } treey={ treey! } />\n        </>\n      }\n    </div>\n  )\n}\n\nexport default PageHome\n","import React, { useState, useContext, useEffect } from \"react\"\nimport TreeyContext from \"../contexts/TreeyContext\"\nimport treey from \"treey\"\n\nimport \"../styles/ItemOverview.sass\"\n\nconst { utils: { parseFullName } } = treey\n\n\ntype Props = {\n  fullName: string\n}\n\nconst ItemOverview: React.FC<Props> = ({ fullName }) => {\n\n  const [item, setItem] = useState<TreeItem>()\n  const [notFound, setNotFound] = useState(false)\n  const [invalidFullName, setInvalidFullName] = useState(false)\n  const { treey } = useContext(TreeyContext)\n\n  useEffect(() => {\n    if (treey == null) return\n    const id = parseFullName(fullName)\n    if (id == null) {\n      setInvalidFullName(true)\n      return\n    }\n    (async () => {\n      const item = await treey.read(id)\n      item !== undefined ? setItem(item) : setNotFound(true)\n    })()\n  }, [treey, fullName])\n\n  const isLoading = notFound === false && invalidFullName === false && item == null\n  const showItem = item != null\n  const itemName = item && item.name\n  const state = item && JSON.stringify(item.state)\n\n  return (\n    <div className=\"ItemOverview\">\n      { isLoading &&\n        <p>is loading&hellip;</p>\n      }\n      { invalidFullName &&\n        <p>{ fullName } is not valid</p>\n      }\n      { notFound &&\n        <p>{ fullName } not found</p>\n      }\n      { showItem &&\n        <>\n          <h1>{ itemName }</h1>\n          <h2>state</h2>\n          <p className=\"small\">{ state }</p>\n          <h2>events</h2>\n          <ul>\n            { item && item.events.map((event: ItemEvent, index: number) => {\n                const payload = event.payload ? JSON.stringify(event.payload) : null\n                const showPayload = payload != null\n                const datetime = String(event.datetime)\n                return (\n                  <li key={ index }>\n                    <strong>{ event.type }</strong><br/>\n                    { showPayload && <><span className=\"small\">{ payload }</span><br/></> }\n                    { datetime }\n                  </li>\n                )\n              })\n            }\n          </ul>\n        </>\n      }\n    </div>\n  )\n}\n\nexport default ItemOverview\n","import React from \"react\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport ItemOverview from \"../components/ItemOverview\"\n\ntype Props = RouteComponentProps & {\n  fullName?: string\n}\n\nconst PageItem: React.SFC<Props> = ({ fullName }) => {\n  return (\n    <div className=\"Page PageItem\">\n      <ItemOverview fullName={ fullName || \"\" } />\n    </div>\n  )\n}\n\nexport default PageItem\n","import React from \"react\"\nimport { RouteComponentProps } from \"@reach/router\"\n\nimport \"../styles/Page404.sass\"\n\ntype Props = RouteComponentProps\n\nconst Page404: React.SFC<Props> = () => {\n  return (\n    <div className=\"Page Page404\">\n      <p>404</p>\n    </div>\n  )\n}\n\nexport default Page404\n","import React from \"react\"\nimport TreeyProvider from \"./components/TreeyProvider\"\nimport UIProvider from \"./components/UIProvider\"\nimport { Router } from \"@reach/router\"\nimport Header from \"./components/Header\"\nimport PageHome from \"./pages/Home\"\nimport PageItem from \"./pages/Item\"\nimport Page404 from \"./pages/404\"\n\nconst App: React.FC = () => {\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <main>\n        <TreeyProvider>\n          <UIProvider>\n            <Router>\n              <PageHome path=\"/\" />\n              <PageItem path=\"item/:fullName\" />\n              <Page404 default />\n            </Router>\n          </UIProvider>\n        </TreeyProvider>\n      </main>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nimport \"./styles/screen.sass\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}