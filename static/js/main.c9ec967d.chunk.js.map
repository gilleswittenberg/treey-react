{"version":3,"sources":["contexts/TreeyContext.ts","hooks/useTreey.ts","components/TreeyProvider.tsx","contexts/UIContext.ts","hooks/useEscListener.ts","components/UIProvider.tsx","utils/basepath.ts","components/Header.tsx","components/Spinner.tsx","components/Button.tsx","components/ItemData.tsx","utils/treeItemUtils.ts","utils/last.ts","components/Item.tsx","components/DnDItem.tsx","components/FormAdd.tsx","components/Items.tsx","components/Tree.tsx","pages/Home.tsx","components/ItemOverview.tsx","pages/Item.tsx","pages/404.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["TreeyContext","createContext","tree","treey","init","read","createAndAdd","update","remove","move","useTreey","_useState","useState","_useState2","Object","slicedToArray","setTree","useEffect","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","sent","stop","actions","_read2","_callee2","id","_context2","abrupt","_x","apply","this","arguments","_createAndAdd2","_callee3","data","parentId","_context3","_x2","_x3","_update2","_callee4","_context4","_x4","_x5","_remove2","_callee5","index","_context5","_x6","_x7","_x8","_move2","_callee6","oldParentId","oldIndex","_context6","_x9","_x10","_x11","_x12","_x13","TreeyProvider","_ref","children","_useTreey","_useTreey2","value","react_default","createElement","contexts_TreeyContext","Provider","unimplemented","Error","isShownForm","setShownForm","unsetShownForm","UIContext","useEscListener","action","handler","event","keyCode","preventDefault","window","addEventListener","removeEventListener","createFullName","utils","UIProvider","shownForm","set","createPath","parents","isAdd","length","undefined","arr","map","concat","join","contexts_UIContext","basepath","location","host","Header","className","es","to","src","process","width","height","alt","Spinner","Button","type","onClick","style","backgroundImage","typeToImageMap","title","ItemData","isUrl","test","href","stopPropagation","getId","item","state","ids","getPath","parseData","str","JSON","parse","err","last","Item","isDragging","path","getData","dataString","stringify","stringifyData","hasRelations","relations","setValue","_useState3","_useState4","isOpened","setIsOpened","useContext","_useContext2","isEditing","showItem","showForm","showItems","showAddButton","linkTo","name","onClickDelete","_ref2","onSubmit","_ref3","cs","isHidden","selection","getSelection","toString","components_ItemData","components_Button","onChange","target","autoFocus","components_Items","items","DnDItem","getName","ref","useRef","hoverRegion","setHoverRegion","_useDrag","useDrag","collect","monitor","_useDrag2","drag","_useDrop","useDrop","accept","canDrop","getItem","drop","_drop","draggableData","newIndex","didDrop","hover","clientOffset","getClientOffset","clientRect","current","getBoundingClientRect","y","top","h","isOver","shallow","_useDrop2","_useDrop2$","showPlaceholder","showPrePlaceholder","showPostPlaceholder","components_Item","FormAdd","showButton","Items","key","components_DnDItem","components_FormAdd","Tree","esm","backend","HTML5Backend","PageHome","_useContext","showSpinner","showTree","components_Spinner","Fragment","components_Tree","parseFullName","ItemOverview","fullName","setItem","notFound","setNotFound","_useState5","_useState6","invalidFullName","setInvalidFullName","isLoading","itemName","events","payload","showPayload","datetime","String","PageItem","components_ItemOverview","Page404","App","components_Header","components_TreeyProvider","components_UIProvider","pages_Home","pages_Item","_404","default","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4aAceA,EAFMC,wBALP,CACZC,KAAM,KACNC,MAAO,gDCP6DA,IAA9DA,MAASC,SAAMC,SAAMC,iBAAcC,WAAQC,WAAQC,SAkC5CC,EAhCE,WAAM,IAAAC,EACGC,qBADHC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACdT,EADcW,EAAA,GACRG,EADQH,EAAA,GAErBI,oBAAU,WACRH,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAC,SAAAC,IAAA,IAAApB,EAAA,OAAAiB,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACoBtB,IADpB,OACOF,EADPsB,EAAAG,KAECX,EAAQd,GAFT,wBAAAsB,EAAAI,SAAAN,KAADR,IAIC,IACH,IAAMe,EAAiB,CACrBxB,KAAI,eAAAyB,EAAAhB,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAE,SAAAU,EAAOC,GAAP,OAAAb,EAAAC,EAAAG,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,cAAAO,EAAAP,KAAA,EACSrB,EAAK2B,GADd,cAAAC,EAAAC,OAAA,SAAAD,EAAAN,MAAA,wBAAAM,EAAAL,SAAAG,MAAF,gBAAAI,GAAA,OAAAL,EAAAM,MAAAC,KAAAC,YAAA,GAGJhC,aAAY,eAAAiC,EAAAzB,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAE,SAAAmB,EAAOC,EAAYC,GAAnB,IAAAxC,EAAA,OAAAiB,EAAAC,EAAAG,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAAAiB,EAAAjB,KAAA,EACOpB,EAAamC,EAAMC,GAD1B,OACNxC,EADMyC,EAAAhB,KAEZX,EAAQd,GAFI,wBAAAyC,EAAAf,SAAAY,MAAF,gBAAAI,EAAAC,GAAA,OAAAN,EAAAH,MAAAC,KAAAC,YAAA,GAIZ/B,OAAM,eAAAuC,EAAAhC,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAE,SAAA0B,EAAOf,EAAQS,GAAf,IAAAvC,EAAA,OAAAiB,EAAAC,EAAAG,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAtB,KAAA,EACanB,EAAOyB,EAAIS,GADxB,OACAvC,EADA8C,EAAArB,KAENX,EAAQd,GAFF,wBAAA8C,EAAApB,SAAAmB,MAAF,gBAAAE,EAAAC,GAAA,OAAAJ,EAAAV,MAAAC,KAAAC,YAAA,GAIN9B,OAAM,eAAA2C,EAAArC,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAE,SAAA+B,EAAOpB,EAAQU,EAAcW,GAA7B,IAAAnD,EAAA,OAAAiB,EAAAC,EAAAG,KAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cAAA4B,EAAA5B,KAAA,EACalB,EAAOwB,EAAIU,EAAUW,GADlC,OACAnD,EADAoD,EAAA3B,KAENX,EAAQd,GAFF,wBAAAoD,EAAA1B,SAAAwB,MAAF,gBAAAG,EAAAC,EAAAC,GAAA,OAAAN,EAAAf,MAAAC,KAAAC,YAAA,GAIN7B,KAAI,eAAAiD,EAAA5C,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAE,SAAAsC,EAAO3B,EAAQ4B,EAAiBlB,EAAcmB,EAAiBR,GAA/D,IAAAnD,EAAA,OAAAiB,EAAAC,EAAAG,KAAA,SAAAuC,GAAA,cAAAA,EAAArC,KAAAqC,EAAApC,MAAA,cAAAoC,EAAApC,KAAA,EACejB,EAAKuB,EAAI4B,EAAalB,EAAUmB,EAAUR,GADzD,OACEnD,EADF4D,EAAAnC,KAEJX,EAAQd,GAFJ,wBAAA4D,EAAAlC,SAAA+B,MAAF,gBAAAI,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAT,EAAAtB,MAAAC,KAAAC,YAAA,IAKN,MAAO,CAACpC,EAAM2B,ICbDuC,EAZwB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SAAeC,EAEjC7D,IAFiC8D,EAAA1D,OAAAC,EAAA,EAAAD,CAAAyD,EAAA,GAGjDE,EAAQ,CAAEvE,KAHuCsE,EAAA,GAGjCrE,MAHiCqE,EAAA,IAKvD,OACEE,EAAAtD,EAAAuD,cAACC,EAAaC,SAAd,CAAuBJ,MAAQA,GAC3BH,ICPFQ,EAAgB,WAAQ,MAAM,IAAIC,MAAO,8BAEzCN,EAAQ,CACZO,YAAaF,EACbG,aAAcH,EACdI,eAAgBJ,GAKHK,EAFGlF,wBAAcwE,GCAjBW,EAdQ,SAACC,GAEtBpE,oBAAU,WACR,IAAMqE,EAAU,SAACC,GACO,KAAlBA,EAAMC,UACRD,EAAME,iBACNJ,MAIJ,OADAK,OAAOC,iBAAiB,UAAWL,GAC5B,kBAAMI,OAAOE,oBAAoB,UAAWN,KAClD,CAACD,KCRWQ,EAAqB1F,IAA9B2F,MAASD,eAiCFE,EA3BqB,SAAA1B,GAAkB,IAAfC,EAAeD,EAAfC,SAAe3D,EAE3BC,qBAF2BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAE7CqF,EAF6CnF,EAAA,GAElCoF,EAFkCpF,EAAA,GAG9CqF,EAAa,SAACC,GAAgC,IAAlBC,EAAkB9D,UAAA+D,OAAA,QAAAC,IAAAhE,UAAA,IAAAA,UAAA,GAC5CiE,EAAMJ,EAAQK,IAAI,SAAAxE,GAAE,OAAI6D,EAAe7D,KAC7C,OAAQoE,EAAQG,EAAIE,OAAO,OAASF,GAAKG,KAAK,MAI1CxB,EAAiB,kBAAMe,OAAIK,IAEjClB,EAAeF,GAEfjE,oBAAU,WAER,OADAyE,OAAOC,iBAAiB,QAAST,GAC1B,kBAAMQ,OAAOE,oBAAoB,QAASV,KAChD,IAEH,IAAMT,EAAQ,CAAEO,YAXI,SAACmB,GAAD,IAAeC,EAAf9D,UAAA+D,OAAA,QAAAC,IAAAhE,UAAA,IAAAA,UAAA,UAAiC0D,IAAcE,EAAWC,EAASC,IAW1DnB,aAVR,SAACkB,GAAD,IAAeC,EAAf9D,UAAA+D,OAAA,QAAAC,IAAAhE,UAAA,IAAAA,UAAA,UAAiC2D,EAAIC,EAAWC,EAASC,KAUnClB,kBAE3C,OACER,EAAAtD,EAAAuD,cAACgC,EAAU9B,SAAX,CAAoBJ,MAAQA,GACxBH,WChCOsC,EAD2B,+BAAzBlB,OAAOmB,SAASC,KAAwC,gBAAkB,ICkB5EC,SAZW,WAExB,OACErC,EAAAtD,EAAAuD,cAAA,UAAQqC,UAAU,UAChBtC,EAAAtD,EAAAuD,cAACsC,EAAA,EAAD,CAAMC,GAAKN,GACTlC,EAAAtD,EAAAuD,cAAA,UAAID,EAAAtD,EAAAuD,cAAA,OAAKwC,IAJHC,qCAIeC,MAAM,OAAOC,OAAO,OAAOC,IAAI,YACpD7C,EAAAtD,EAAAuD,cAAA,uBCNO6C,SAFW,kBAAO9C,EAAAtD,EAAAuD,cAAA,KAAGqC,UAAU,WAAb,8BCwBlBS,SATiB,SAAApD,GAAuB,IAApBqD,EAAoBrD,EAApBqD,KAAMC,EAActD,EAAdsD,QACjCX,EAAY,UAAYU,EAExBE,EAAQ,CAAEC,gBADK,QAAApB,OAAYW,eAAZ,YAAAX,OAVA,SAACiB,GACtB,OAAQA,GACR,IAAK,MAAO,MAAO,gBACnB,IAAK,OAAQ,MAAO,mBACpB,IAAK,SAAU,MAAO,oBAM8CI,CAAeJ,GAA9D,OAErB,OACEhD,EAAAtD,EAAAuD,cAAA,UAAQqC,UAAYA,EAAYY,MAAQA,EAAQD,QAAUA,EAAUI,MAAQL,GAASA,KCT1EM,EATmB,SAAA3D,GAAc,IAAX5B,EAAW4B,EAAX5B,KAC7BwF,EAAQ,eAAeC,KAAKzF,GAClC,OACEiC,EAAAtD,EAAAuD,cAAA,QAAMqC,UAAU,YACZiB,EAAQvD,EAAAtD,EAAAuD,cAAA,KAAGwD,KAAO1F,EAAOkF,QAAU,SAAApC,GAAK,OAAIA,EAAM6C,oBAAsB3F,GAAaA,ICT5EoD,EAAqB1F,IAA9B2F,MAASD,eAEJwC,EAAQ,SAACC,GAAD,OAAqCA,EAAKC,MAAMC,KAAOF,EAAKC,MAAMC,IAAI,IAE9EC,EAAU,SAACzG,EAAoBmE,GAArB,OAA4CnE,EAAKmE,EAAQM,OAAOzE,GAAMmE,GAMhFuC,EAAY,SAACC,GACxB,IACE,OAAOC,KAAKC,MAAMF,GAClB,MAAOG,GACP,OAAOH,ICdII,EADF,SAAIxC,GAAJ,OAAiBA,EAAIA,EAAIF,OAAS,oBCiGhC2C,SA5Ee,SAAA3E,GAA0C,IAAvC8B,EAAuC9B,EAAvC8B,QAAS9C,EAA8BgB,EAA9BhB,MAAOiF,EAAuBjE,EAAvBiE,KAAMW,EAAiB5E,EAAjB4E,WAE/CjH,EAAKqG,EAAMC,GACX5F,EAAWqG,EAAK5C,GAChB+C,EAAOT,EAAQzG,EAAImE,GACnB1D,EFtBe,SAAC6F,GAAD,OAA2BA,EAAKC,OAASD,EAAKC,MAAM9F,KEsB5D0G,CAAQb,GACfc,EFpBqB,SAAC3G,GAC5B,MAAoB,kBAATA,EAA0BA,EAC9BmG,KAAKS,UAAU5G,OAAM6D,EAAW,GEkBpBgD,CAAc7G,GAC3B8G,EAAejB,EAAKkB,UAAUnD,OAAS,EAPyB1F,EAS5CC,mBAAS6B,GATmC5B,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAS/D8D,EAT+D5D,EAAA,GASxD4I,EATwD5I,EAAA,GAAA6I,EAUtC9I,oBAAS,GAV6B+I,EAAA7I,OAAAC,EAAA,EAAAD,CAAA4I,EAAA,GAU/DE,EAV+DD,EAAA,GAUrDE,EAVqDF,EAAA,GAW9DxJ,EAAU2J,qBAAW9J,GAArBG,MAX8D4J,EAYhBD,qBAAW3E,GAAzDH,EAZ8D+E,EAY9D/E,YAAaC,EAZiD8E,EAYjD9E,aAAcC,EAZmC6E,EAYnC7E,eAE7B8E,EAAYhF,EAAYkE,GACxBe,EAAWhB,IAAee,EAC1BE,GAAYjB,GAAce,EAC1BG,GAAalB,IAAgBW,GAAYL,GAAiBvE,EAAYkE,GAAM,IAC5EkB,GAAiBb,EAEjBc,EAAM,GAAA5D,OAAOG,EAAP,SAAAH,OAAyB6B,EAAKgC,MAcpCC,EAAa,eAAAC,EAAA1J,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAG,SAAAC,IAAA,OAAAH,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACP,MAATvB,EADgB,CAAAqB,EAAAE,KAAA,eAAAF,EAAAU,OAAA,oBAEV,MAANF,EAFgB,CAAAR,EAAAE,KAAA,eAAAF,EAAAU,OAAA,wBAAAV,EAAAE,KAAA,EAGdvB,EAAMK,OAAOwB,EAAIU,EAAUW,GAHb,wBAAA7B,EAAAI,SAAAN,MAAH,yBAAAkJ,EAAApI,MAAAC,KAAAC,YAAA,GAKbmI,EAAQ,eAAAC,EAAA5J,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAG,SAAAU,EAAOwD,GAAP,IAAA9C,EAAA,OAAAtB,EAAAC,EAAAG,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,UACf6D,EAAME,iBACO,MAATtF,EAFW,CAAA8B,EAAAP,KAAA,eAAAO,EAAAC,OAAA,oBAGL,MAANF,EAHW,CAAAC,EAAAP,KAAA,eAAAO,EAAAC,OAAA,wBAITO,EAAOiG,EAAUjE,GAJRxC,EAAAP,KAAA,EAKTvB,EAAMI,OAAOyB,EAAIS,GALR,OAMfyC,IANe,wBAAAjD,EAAAL,SAAAG,MAAH,gBAAAI,GAAA,OAAAuI,EAAAtI,MAAAC,KAAAC,YAAA,GAad,OACEoC,EAAAtD,EAAAuD,cAAA,OAAKqC,UAAU,OAAOW,QAAU,SAAApC,GAAK,OAAIA,EAAM6C,oBAC7C1D,EAAAtD,EAAAuD,cAAA,OAAKqC,UAAY2D,IAAG,WAAY,CAAEC,UAAWX,EAAUG,mBACrD1F,EAAAtD,EAAAuD,cAAA,QAAMgD,QAjCI,WACV3C,EAAYkE,GAAM,IAAOhE,IAC7B,IAAM2F,EAAYnF,OAAOoF,eACrBD,GAAsC,KAAzBA,EAAUE,YACtBxB,GACLM,GAAaD,KA6BPlF,EAAAtD,EAAAuD,cAACqG,EAAD,CAAUvI,KAAO2G,IACjB1E,EAAAtD,EAAAuD,cAACsC,EAAA,EAAD,CAAMC,GAAKmD,EAASrD,UAAU,QAA9B,WAEAoD,GACA1F,EAAAtD,EAAAuD,cAACsG,EAAD,CAAQvD,KAAK,MAAMC,QA/BR,WACjB1C,EAAaiE,GAAM,GACnBW,GAAY,MA+BRnF,EAAAtD,EAAAuD,cAACsG,EAAD,CAAQvD,KAAK,OAAOC,QA7BN,kBAAM1C,EAAaiE,MA8BjCxE,EAAAtD,EAAAuD,cAACsG,EAAD,CAAQvD,KAAK,SAASC,QAAU4C,KAElC7F,EAAAtD,EAAAuD,cAAA,QAAM8F,SAAWA,EAAWzD,UAAY2D,IAAG,CAAEC,UAAWV,KACtDxF,EAAAtD,EAAAuD,cAAA,SAAO+C,KAAK,OAAOwD,SAnBR,SAAC3F,GAChB,IAAMd,EAASc,EAAM4F,OAA4B1G,MACjDgF,EAAShF,IAiBoCA,MAAQA,EAAQ2G,WAAS,IAClE1G,EAAAtD,EAAAuD,cAACsG,EAAD,CAAQvD,KAAK,UAEfhD,EAAAtD,EAAAuD,cAAA,OAAKqC,UAAY2D,IAAG,CAAEC,UAAWT,KAC/BzF,EAAAtD,EAAAuD,cAAC0G,EAAD,CAAOlF,QAAU+C,EAAOoC,MAAQhD,EAAKkB,gBCU9B+B,SA5EkB,SAAAlH,GAA8B,IAA3B8B,EAA2B9B,EAA3B8B,QAAS9C,EAAkBgB,EAAlBhB,MAAOiF,EAAWjE,EAAXiE,KAE5CtG,EAAKqG,EAAMC,GACXgC,EHtBe,SAACtI,EAAoBmE,GAArB,OAA6CsC,EAAQzG,EAAImE,GAASK,IAAI,SAAAxE,GAAE,OAAI6D,EAAe7D,KAAK0E,KAAK,KGsB7G8E,CAAQxJ,EAAImE,GAEjBhG,EAAU2J,qBAAW9J,GAArBG,MACFsL,EAAMC,iBAAuB,MAN0B/K,EAOvBC,qBAPuBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAOtDgL,EAPsD9K,EAAA,GAOzC+K,EAPyC/K,EAAA,GAAAgL,EAS9BC,YAAQ,CACrCxD,KAAM,CAAEZ,KAAM,OAAQvB,UAAS9C,QAAOrB,MACtC+J,QAAS,SAAAC,GAAO,MAAK,CACnB/C,WAAY+C,EAAQ/C,iBAZqCgD,EAAAnL,OAAAC,EAAA,EAAAD,CAAA+K,EAAA,GASpD5C,EAToDgD,EAAA,GASpDhD,WAAciD,EATsCD,EAAA,GAAAE,EAgBzBC,YAAQ,CAC1CC,OAAQ,OACRC,QAAS,SAAChE,EAAM0D,GAAP,OAAmBA,EAAQO,UAAUjC,OAASA,GACvDkC,KAAI,eAAAC,EAAA3L,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAE,SAAAC,EAAOgH,EAAM0D,GAAb,IAAAU,EAAA1K,EAAA4B,EAAAC,EAAAnB,EAAAiK,EAAA,OAAAxL,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAGAsK,EAAQY,UAHR,CAAApL,EAAAE,KAAA,eAAAF,EAAAU,OAAA,oBAMEF,GADA0K,EAAgBpE,GACGtG,GACnB4B,EAAcmF,EAAK2D,EAAcvG,SACjCtC,EAAW6I,EAAcrJ,MACzBX,EAAWqG,EAAK5C,GAGhBwG,EAAWtJ,GAAyB,WAAhBsI,EAA2B,EAAI,IAAM/H,IAAgBlB,GAAYmB,EAAWR,EAAQ,EAAI,GAE9GO,IAAgBlB,GAAYmB,IAAa8I,EAdzC,CAAAnL,EAAAE,KAAA,gBAAAF,EAAAU,OAAA,qBAiBS,MAAT/B,EAjBA,CAAAqB,EAAAE,KAAA,gBAAAF,EAAAU,OAAA,yBAAAV,EAAAE,KAAA,GAkBEvB,EAAMM,KAAKuB,EAAI4B,EAAalB,EAAUmB,EAAU8I,GAlBlD,yBAAAnL,EAAAI,SAAAN,MAAF,gBAAAa,EAAAS,GAAA,OAAA6J,EAAArK,MAAAC,KAAAC,YAAA,GAoBJuK,MAAO,SAACvE,EAAM0D,GACZ,IAAMc,EAAed,EAAQe,kBACvBC,EAAavB,GAAOA,EAAIwB,SAAWxB,EAAIwB,QAAQC,wBACrD,GAAIF,GAAcF,EAAc,CAC9B,IACMK,EAAIL,EAAaK,EAAIH,EAAWI,IAEtCxB,EADoBuB,GAAKE,GAAQ,MAAQ,YAI7CtB,QAAS,SAAAC,GAAO,MAAK,CACnBsB,OAAQtB,EAAQsB,OAAO,CAAEC,SAAS,IAClCjB,QAASN,EAAQM,cAnDwCkB,EAAA1M,OAAAC,EAAA,EAAAD,CAAAqL,EAAA,GAAAsB,EAAAD,EAAA,GAgBpDlB,EAhBoDmB,EAgBpDnB,QAASgB,EAhB2CG,EAgB3CH,OAAUd,EAhBiCgB,EAAA,GAuDvDE,EAAkBJ,GAAUhB,EAC5BqB,EAAqBD,GAAmC,QAAhB/B,EACxCiC,EAAsBF,GAAmC,WAAhB/B,EAE/C,OACEjH,EAAAtD,EAAAuD,cAAA,OAAK8G,IAAMA,GACT/G,EAAAtD,EAAAuD,cAAA,OAAK8G,IAAMe,GACPmB,GACAjJ,EAAAtD,EAAAuD,cAAA,OAAKqC,UAAU,oBAEjBtC,EAAAtD,EAAAuD,cAAA,OAAK8G,IAAMS,EAAOlF,UAAY2D,IAAG,CAAEC,SAAU3B,KAC3CvE,EAAAtD,EAAAuD,cAACkJ,EAAD,CAAM1H,QAAUA,EAAU9C,MAAQA,EAAQiF,KAAOA,EAAOW,WAAaA,KAErE2E,GACAlJ,EAAAtD,EAAAuD,cAAA,OAAKqC,UAAU,wBC3CV8G,SAvCkB,SAAAzJ,GAAiB,IAAd8B,EAAc9B,EAAd8B,QAAcxF,EAEtBC,mBAAS,IAFaC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEzC8D,EAFyC5D,EAAA,GAElC4I,EAFkC5I,EAAA,GAGxCV,EAAU2J,qBAAW9J,GAArBG,MAHwC4J,EAIMD,qBAAW3E,GAAzDH,EAJwC+E,EAIxC/E,YAAaC,EAJ2B8E,EAI3B9E,aAAcC,EAJa6E,EAIb7E,eAE7BgF,EAAWlF,EAAYmB,GAAS,GAChC4H,GAAc7D,EAGdO,EAAQ,eAAAD,EAAA1J,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAG,SAAAC,EAAOiE,GAAP,IAAA7C,EAAA,OAAAvB,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACf6D,EAAME,iBACO,MAATtF,EAFW,CAAAqB,EAAAE,KAAA,eAAAF,EAAAU,OAAA,yBAIEoE,KADX5D,EAAWqG,EAAK5C,IAHP,CAAA3E,EAAAE,KAAA,eAAAF,EAAAU,OAAA,wBAAAV,EAAAE,KAAA,EAKTvB,EAAMG,aAAamE,EAAO/B,GALjB,OAMfwC,IACAuE,EAAS,IAPM,yBAAAjI,EAAAI,SAAAN,MAAH,gBAAAa,GAAA,OAAAqI,EAAApI,MAAAC,KAAAC,YAAA,GAcd,OACEoC,EAAAtD,EAAAuD,cAAA,OAAKqC,UAAU,UAAUW,QAAU,SAAApC,GAAK,OAAIA,EAAM6C,oBAC9C2F,GACArJ,EAAAtD,EAAAuD,cAACsG,EAAD,CAAQtD,QAlBE,kBAAM1C,EAAakB,GAAS,IAkBVuB,KAAK,QAEjCwC,GACAxF,EAAAtD,EAAAuD,cAAA,QAAM8F,SAAWA,GACf/F,EAAAtD,EAAAuD,cAAA,SAAO+C,KAAK,OAAOwD,SAZV,SAAC3F,GAChB,IAAMd,EAASc,EAAM4F,OAA4B1G,MACjDgF,EAAShF,IAUsCA,MAAQA,EAAQ2G,WAAS,IAClE1G,EAAAtD,EAAAuD,cAACsG,EAAD,CAAQvD,KAAK,YCZRsG,SArBgB,SAAA3J,GAAwB,IAArB8B,EAAqB9B,EAArB8B,QAASmF,EAAYjH,EAAZiH,MAEnCnB,EAAYmB,EAAMjF,OAAS,EAEjC,OACE3B,EAAAtD,EAAAuD,cAAA,OAAKqC,UAAU,SACXmD,GACAzF,EAAAtD,EAAAuD,cAAA,UACI2G,EAAM9E,IAAI,SAAC8B,EAAMjF,GAAP,OACRqB,EAAAtD,EAAAuD,cAAA,MAAIsJ,IAAM3F,EAAKgC,MACb5F,EAAAtD,EAAAuD,cAACuJ,EAAD,CAAS/H,QAAUA,EAAU9C,MAAQA,EAAQiF,KAAOA,QAM9D5D,EAAAtD,EAAAuD,cAACwJ,EAAD,CAAShI,QAAUA,eCEViI,SAjBe,SAAA/J,GAAqB,IAAlBnE,EAAkBmE,EAAlBnE,KAEzBoL,GAF2CjH,EAAZlE,MAEvBD,GAAQA,EAAKsJ,WACrBxH,EAAK9B,GAAQA,EAAKqI,MAAMC,KAAOtI,EAAKqI,MAAMC,IAAI,GAC9CrC,EAAU,CAACnE,GAEjB,OACE0C,EAAAtD,EAAAuD,cAAA,OAAKqC,UAAU,QACXhF,GACA0C,EAAAtD,EAAAuD,cAAC0J,EAAA,EAAD,CAAaC,QAAUC,KACrB7J,EAAAtD,EAAAuD,cAAC0G,EAAD,CAAOlF,QAAUA,EAAUmF,MAAQA,QCU9BkD,SAtBmB,WAAM,IAAAC,EAEd3E,qBAAW9J,GAA3BE,EAF8BuO,EAE9BvO,KAAMC,EAFwBsO,EAExBtO,MACRuO,EAAsB,MAARxO,EACdyO,EAAmB,MAARzO,GAAyB,MAATC,EAC3BmK,EAAe,MAARpK,EAAeA,EAAKoK,KAAO,GAExC,OACE5F,EAAAtD,EAAAuD,cAAA,OAAKqC,UAAU,iBACX0H,GACAhK,EAAAtD,EAAAuD,cAACiK,EAAD,MAEAD,GACAjK,EAAAtD,EAAAuD,cAAAD,EAAAtD,EAAAyN,SAAA,KACEnK,EAAAtD,EAAAuD,cAAA,MAAIqC,UAAU,YAAasD,GAC3B5F,EAAAtD,EAAAuD,cAACmK,EAAD,CAAM5O,KAAOA,EAAQC,MAAQA,QCnBtB4O,SAAoB5O,IAA7B2F,MAASiJ,eAsEFC,EA/DuB,SAAA3K,GAAkB,IAAf4K,EAAe5K,EAAf4K,SAAetO,EAE9BC,qBAF8BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAE/C2H,EAF+CzH,EAAA,GAEzCqO,EAFyCrO,EAAA,GAAA6I,EAGtB9I,oBAAS,GAHa+I,EAAA7I,OAAAC,EAAA,EAAAD,CAAA4I,EAAA,GAG/CyF,EAH+CxF,EAAA,GAGrCyF,EAHqCzF,EAAA,GAAA0F,EAIRzO,oBAAS,GAJD0O,EAAAxO,OAAAC,EAAA,EAAAD,CAAAuO,EAAA,GAI/CE,EAJ+CD,EAAA,GAI9BE,EAJ8BF,EAAA,GAK9CnP,EAAU2J,qBAAW9J,GAArBG,MAERc,oBAAU,WACR,GAAa,MAATd,EAAJ,CACA,IAAM6B,EAAK+M,EAAcE,GACf,MAANjN,EAIJlB,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAC,SAAAC,IAAA,IAAAgH,EAAA,OAAAnH,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACoBvB,EAAME,KAAK2B,GAD/B,YAEUsE,KADHgC,EADP9G,EAAAG,MAEsBuN,EAAQ5G,GAAQ8G,GAAY,GAFlD,wBAAA5N,EAAAI,SAAAN,KAADR,GAHE0O,GAAmB,KAOpB,CAACrP,EAAO8O,IAEX,IAAMQ,GAAyB,IAAbN,IAA0C,IAApBI,GAAqC,MAARjH,EAC/D2B,EAAmB,MAAR3B,EACXoH,EAAWpH,GAAQA,EAAKgC,KACxB/B,EAAQD,GAAQM,KAAKS,UAAUf,EAAKC,OAE1C,OACE7D,EAAAtD,EAAAuD,cAAA,OAAKqC,UAAU,gBACXyI,GACA/K,EAAAtD,EAAAuD,cAAA,6BAEA4K,GACA7K,EAAAtD,EAAAuD,cAAA,SAAKsK,EAAL,iBAEAE,GACAzK,EAAAtD,EAAAuD,cAAA,SAAKsK,EAAL,cAEAhF,GACAvF,EAAAtD,EAAAuD,cAAAD,EAAAtD,EAAAyN,SAAA,KACEnK,EAAAtD,EAAAuD,cAAA,UAAM+K,GACNhL,EAAAtD,EAAAuD,cAAA,mBACAD,EAAAtD,EAAAuD,cAAA,KAAGqC,UAAU,SAAUuB,GACvB7D,EAAAtD,EAAAuD,cAAA,oBACAD,EAAAtD,EAAAuD,cAAA,UACI2D,GAAQA,EAAKqH,OAAOnJ,IAAI,SAACjB,EAAkBlC,GACzC,IAAMuM,EAAUrK,EAAMqK,QAAUhH,KAAKS,UAAU9D,EAAMqK,SAAW,KAC1DC,EAAyB,MAAXD,EACdE,EAAWC,OAAOxK,EAAMuK,UAC9B,OACEpL,EAAAtD,EAAAuD,cAAA,MAAIsJ,IAAM5K,GACRqB,EAAAtD,EAAAuD,cAAA,cAAUY,EAAMmC,MAAehD,EAAAtD,EAAAuD,cAAA,WAC7BkL,GAAenL,EAAAtD,EAAAuD,cAAAD,EAAAtD,EAAAyN,SAAA,KAAEnK,EAAAtD,EAAAuD,cAAA,QAAMqC,UAAU,SAAU4I,GAAgBlL,EAAAtD,EAAAuD,cAAA,YAC3DmL,SChDPE,EARoB,SAAA3L,GAAkB,IAAf4K,EAAe5K,EAAf4K,SACpC,OACEvK,EAAAtD,EAAAuD,cAAA,OAAKqC,UAAU,iBACbtC,EAAAtD,EAAAuD,cAACsL,EAAD,CAAchB,SAAWA,GAAY,OCI5BiB,SARmB,WAChC,OACExL,EAAAtD,EAAAuD,cAAA,OAAKqC,UAAU,gBACbtC,EAAAtD,EAAAuD,cAAA,mBCqBSwL,GApBO,WAEpB,OACEzL,EAAAtD,EAAAuD,cAAA,OAAKqC,UAAU,OACbtC,EAAAtD,EAAAuD,cAACyL,EAAD,MACA1L,EAAAtD,EAAAuD,cAAA,YACED,EAAAtD,EAAAuD,cAAC0L,EAAD,KACE3L,EAAAtD,EAAAuD,cAAC2L,EAAD,KACE5L,EAAAtD,EAAAuD,cAACsC,EAAA,EAAD,CAAQL,SAAWA,GACjBlC,EAAAtD,EAAAuD,cAAC4L,EAAD,CAAUrH,KAAK,MACfxE,EAAAtD,EAAAuD,cAAC6L,EAAD,CAAUtH,KAAK,oBACfxE,EAAAtD,EAAAuD,cAAC8L,EAAD,CAASC,SAAO,UCVVC,QACW,cAA7BjL,OAAOmB,SAAS+J,UAEe,UAA7BlL,OAAOmB,SAAS+J,UAEhBlL,OAAOmB,SAAS+J,SAASC,MACvB,iECXNC,IAASC,OAAOrM,EAAAtD,EAAAuD,cAACqM,GAAD,MAASC,SAASC,eAAe,SDkI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c9ec967d.chunk.js","sourcesContent":["import { createContext } from \"react\"\n\ntype Value = {\n  tree: TreeItem | null\n  treey: Treey | null\n}\n\nconst value = {\n  tree: null,\n  treey: null\n} as Value\n\nconst TreeyContext = createContext(value)\n\nexport default TreeyContext\n","import { useState, useEffect } from \"react\"\nimport treey from \"treey\"\nconst { treey: { init, read, createAndAdd, update, remove, move } } = treey\n\nconst useTreey = () => {\n  const [tree, setTree] = useState()\n  useEffect(() => {\n    (async () => {\n      const tree = await init()\n      setTree(tree)\n    })()\n  }, [])\n  const actions: Treey = {\n    read: async (id: Id) => {\n      return await read(id)\n    },\n    createAndAdd: async (data: Data, parentId: Id) => {\n      const tree = await createAndAdd(data, parentId)\n      setTree(tree)\n    },\n    update: async (id: Id, data: Data) => {\n      const tree = await update(id, data)\n      setTree(tree)\n    },\n    remove: async (id: Id, parentId: Id, index: Index) => {\n      const tree = await remove(id, parentId, index)\n      setTree(tree)\n    },\n    move: async (id: Id, oldParentId: Id, parentId: Id, oldIndex: Index, index: Index) => {\n      const tree = await move(id, oldParentId, parentId, oldIndex, index)\n      setTree(tree)\n    }\n  }\n  return [tree, actions]\n}\n\nexport default useTreey\n","import React, { ReactNode } from \"react\"\nimport TreeyContext from '../contexts/TreeyContext'\nimport useTreey from \"../hooks/useTreey\"\n\ntype Props = {\n  children: ReactNode\n}\n\nconst TreeyProvider: React.FC<Props> = ({ children }) => {\n\n  const [tree, treey] = useTreey()\n  const value = { tree, treey }\n\n  return (\n    <TreeyContext.Provider value={ value }>\n      { children }\n    </TreeyContext.Provider>\n  )\n}\n\nexport default TreeyProvider\n","import { createContext } from \"react\"\n\ntype Value = {\n  isShownForm (parents: Ids, isAdd?: boolean) : boolean\n  setShownForm (parents: Ids, isAdd?: boolean) : void\n  unsetShownForm () : void\n}\n\nconst unimplemented = () => { throw new Error (\"UIContext not implemented\") }\n\nconst value = {\n  isShownForm: unimplemented,\n  setShownForm: unimplemented,\n  unsetShownForm: unimplemented\n} as Value\n\nconst UIContext = createContext(value)\n\nexport default UIContext\n","import { useEffect } from \"react\"\n\nconst useEscListener = (action: () => void) => {\n\n  useEffect(() => {\n    const handler = (event: KeyboardEvent) => {\n      if (event.keyCode === 27) {\n        event.preventDefault()\n        action()\n      }\n    }\n    window.addEventListener(\"keydown\", handler)\n    return () => window.removeEventListener(\"keydown\", handler)\n  }, [action])\n}\n\nexport default useEscListener\n","import React, { ReactNode, useState, useEffect } from \"react\"\nimport UIContext from '../contexts/UIContext'\nimport useEscListener from \"../hooks/useEscListener\"\nimport treey from \"treey\"\n\nconst { utils: { createFullName } } = treey\n\ntype Props = {\n  children: ReactNode\n}\n\nconst UIProvider: React.FC<Props> = ({ children }) => {\n\n  const [shownForm, set] = useState()\n  const createPath = (parents: Ids, isAdd = false) => {\n    const arr = parents.map(id => createFullName(id))\n    return (isAdd ? arr.concat(\"add\") : arr).join(\"/\")\n  }\n  const isShownForm = (parents: Ids, isAdd = false) => shownForm === createPath(parents, isAdd)\n  const setShownForm = (parents: Ids, isAdd = false) => set(createPath(parents, isAdd))\n  const unsetShownForm = () => set(undefined)\n\n  useEscListener(unsetShownForm)\n\n  useEffect(() => {\n    window.addEventListener(\"click\", unsetShownForm)\n    return () => window.removeEventListener(\"click\", unsetShownForm)\n  }, [])\n\n  const value = { isShownForm, setShownForm, unsetShownForm }\n\n  return (\n    <UIContext.Provider value={ value }>\n      { children }\n    </UIContext.Provider>\n  )\n}\n\nexport default UIProvider\n","const basepath = window.location.host === \"gilleswittenberg.github.io\" ? \"/treey-react/\" : \"/\"\nexport default basepath\n","import React from \"react\"\nimport { Link } from \"@reach/router\"\nimport basepath from \"../utils/basepath\"\n\nimport \"../styles/Header.sass\"\n\nconst Header: React.SFC = () => {\n  const src = process.env.PUBLIC_URL + \"/images/logo_64x64.png\"\n  return (\n    <header className=\"Header\">\n      <Link to={ basepath }>\n        <h1><img src={ src } width=\"32px\" height=\"32px\" alt=\"木\" /></h1>\n        <h2>treey</h2>\n      </Link>\n    </header>\n  )\n}\n\nexport default Header\n","import React from \"react\"\n\nimport \"../styles/Spinner.sass\"\n\nconst Spinner: React.FC = () => (<p className=\"Spinner\">is loading&hellip;</p>)\n\nexport default Spinner\n","import React from \"react\"\n\nimport \"../styles/Button.sass\"\n\ntype ButtonType = \"ADD\" | \"EDIT\" | \"DELETE\"\n\ntype Props = {\n  type: ButtonType\n  onClick?: () => void\n}\n\nconst typeToImageMap = (type: ButtonType) : string => {\n  switch (type) {\n  case \"ADD\": return \"add_64x64.png\"\n  case \"EDIT\": return \"submit_64x64.png\"\n  case \"DELETE\": return \"remove_64x64.png\"\n  }\n}\n\nconst Button: React.FC<Props> = ({ type, onClick }) => {\n  const className = \"Button \" + type\n  const backgroundImage = `url(\"${ process.env.PUBLIC_URL }/images/${ typeToImageMap(type) }\")`\n  const style = { backgroundImage }\n  return (\n    <button className={ className } style={ style } onClick={ onClick } title={ type }>{ type }</button>\n  )\n}\n\nexport default Button\n","import React from \"react\"\n\ntype Props = {\n  data: Data\n}\n\nconst ItemData: React.FC<Props> = ({ data }) => {\n  const isUrl = /^https?:\\/\\//.test(data)\n  return (\n    <span className=\"ItemData\">\n      { isUrl ? <a href={ data } onClick={ event => event.stopPropagation() }>{ data }</a> : data }\n    </span>\n  )\n}\n\nexport default ItemData\n","import treey from \"treey\"\nconst { utils: { createFullName } } = treey\n\nexport const getId = (item: TreeItem) : Id | undefined => item.state.ids && item.state.ids[0]\nexport const getData = (item: TreeItem) : Data => item.state && item.state.data\nexport const getPath = (id: Id | undefined, parents: Ids) : Ids => id ? parents.concat(id) : parents\nexport const getName = (id: Id | undefined, parents: Ids) : Name => getPath(id, parents).map(id => createFullName(id)).join(\"/\")\nexport const stringifyData = (data: Data) : string => {\n  if (typeof data === \"string\") return data\n  return JSON.stringify(data, undefined, 1)\n}\nexport const parseData = (str: string) : Data => {\n  try {\n    return JSON.parse(str)\n  } catch (err) {\n    return str\n  }\n}\n","const last = <T>(arr: T[]) => arr[arr.length - 1]\nexport default last\n","import React, { useState, useContext, FormEvent } from \"react\"\nimport { Link } from \"@reach/router\"\nimport TreeyContext from \"../contexts/TreeyContext\"\nimport UIContext from \"../contexts/UIContext\"\nimport Items from \"./Items\"\nimport Button from \"./Button\"\nimport ItemData from \"./ItemData\"\nimport { getId, getPath, getData, stringifyData, parseData } from \"../utils/treeItemUtils\"\nimport last from \"../utils/last\"\nimport basepath from \"../utils/basepath\"\nimport cs from \"classnames\"\n\nimport \"../styles/Item.sass\"\n\ntype Props = {\n  parents: Ids\n  index: Index\n  item: TreeItem\n  isDragging: boolean\n}\n\nconst Item: React.FC<Props> = ({ parents, index, item, isDragging }) => {\n\n  const id = getId(item)\n  const parentId = last(parents)\n  const path = getPath(id, parents)\n  const data = getData(item)\n  const dataString = stringifyData(data)\n  const hasRelations = item.relations.length > 0\n\n  const [value, setValue] = useState(data)\n  const [isOpened, setIsOpened] = useState(false)\n  const { treey } = useContext(TreeyContext)\n  const { isShownForm, setShownForm, unsetShownForm } = useContext(UIContext)\n\n  const isEditing = isShownForm(path)\n  const showItem = isDragging || !isEditing\n  const showForm = !isDragging && isEditing\n  const showItems = !isDragging && ((isOpened && hasRelations) || isShownForm(path, true))\n  const showAddButton = !hasRelations\n\n  const linkTo = `${ basepath }item/${ item.name }`\n\n  const onClick = () => {\n    if (isShownForm(path, true)) unsetShownForm()\n    const selection = window.getSelection()\n    if (selection && selection.toString() !== \"\") return\n    if (!hasRelations) return\n    setIsOpened(!isOpened)\n  }\n  const onClickAdd = () => {\n    setShownForm(path, true)\n    setIsOpened(true)\n  }\n  const onClickEdit = () => setShownForm(path)\n  const onClickDelete = async () => {\n    if (treey == null) return\n    if (id == null) return\n    await treey.remove(id, parentId, index)\n  }\n  const onSubmit = async (event: FormEvent) => {\n    event.preventDefault()\n    if (treey == null) return\n    if (id == null) return\n    const data = parseData(value)\n    await treey.update(id, data)\n    unsetShownForm()\n  }\n  const onChange = (event: FormEvent) => {\n    const value = (event.target as HTMLInputElement).value\n    setValue(value)\n  }\n\n  return (\n    <div className=\"Item\" onClick={ event => event.stopPropagation() }>\n      <div className={ cs(\"ItemBody\", { isHidden: !showItem, showAddButton }) }>\n        <span onClick={ onClick }>\n          <ItemData data={ dataString } />\n          <Link to={ linkTo } className=\"info\">ⓘ</Link>\n        </span>\n        { showAddButton &&\n          <Button type=\"ADD\" onClick={ onClickAdd } />\n        }\n        <Button type=\"EDIT\" onClick={ onClickEdit } />\n        <Button type=\"DELETE\" onClick={ onClickDelete } />\n      </div>\n      <form onSubmit={ onSubmit } className={ cs({ isHidden: !showForm }) }>\n        <input type=\"text\" onChange={ onChange } value={ value } autoFocus />\n        <Button type=\"EDIT\" />\n      </form>\n      <div className={ cs({ isHidden: !showItems }) }>\n        <Items parents={ path } items={ item.relations } />\n      </div>\n    </div>\n  )\n}\n\nexport default Item\n","import React, { useContext, useRef, useState } from \"react\"\nimport { useDrag, useDrop } from 'react-dnd'\nimport TreeyContext from \"../contexts/TreeyContext\"\nimport Item from \"./Item\"\nimport { getId, getName } from \"../utils/treeItemUtils\"\nimport last from \"../utils/last\"\nimport cs from \"classnames\"\n\nimport \"../styles/DnDItem.sass\"\n\ntype Props = {\n  parents: Ids\n  index: Index\n  item: TreeItem\n}\n\ntype HoverRegion = \"top\" | \"bottom\"\n\ntype DraggableData = {\n  type: string,\n  parents: Ids,\n  index: Index,\n  id: Id\n}\n\nconst DnDItem: React.FC<Props> = ({ parents, index, item }) => {\n\n  const id = getId(item)\n  const name = getName(id, parents)\n\n  const { treey } = useContext(TreeyContext)\n  const ref = useRef<HTMLDivElement>(null)\n  const [hoverRegion, setHoverRegion] = useState<HoverRegion>()\n\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: \"item\", parents, index, id },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  })\n\n  const [{ canDrop, isOver }, drop] = useDrop({\n    accept: \"item\",\n    canDrop: (item, monitor) => monitor.getItem().name !== name,\n    drop: async (item, monitor) => {\n\n      // guard for nested drop targets\n      if (monitor.didDrop()) return\n\n      const draggableData = item as DraggableData\n      const id = draggableData.id\n      const oldParentId = last(draggableData.parents)\n      const oldIndex = draggableData.index\n      const parentId = last(parents)\n      // add one if hover over bottom\n      // substract one if draggable came from before droppable\n      const newIndex = index + (hoverRegion === \"bottom\" ? 1 : 0) - (oldParentId === parentId && oldIndex < index ? 1 : 0)\n      // guard for dropped on previous location\n      if (oldParentId === parentId && oldIndex === newIndex) return\n\n      // guard for null treey context\n      if (treey == null) return\n      await treey.move(id, oldParentId, parentId, oldIndex, newIndex)\n    },\n    hover: (item, monitor) => {\n      const clientOffset = monitor.getClientOffset()\n      const clientRect = ref && ref.current && ref.current.getBoundingClientRect()\n      if (clientRect && clientOffset) {\n        const h = 44 + 6 // height + bottom margin\n        const y = clientOffset.y - clientRect.top\n        const hoverRegion = y <= h / 2 ? \"top\" : \"bottom\"\n        setHoverRegion(hoverRegion)\n      }\n    },\n    collect: monitor => ({\n      isOver: monitor.isOver({ shallow: true }),\n      canDrop: monitor.canDrop()\n    })\n  })\n\n  const showPlaceholder = isOver && canDrop\n  const showPrePlaceholder = showPlaceholder && hoverRegion === \"top\"\n  const showPostPlaceholder = showPlaceholder && hoverRegion === \"bottom\"\n\n  return (\n    <div ref={ ref }>\n      <div ref={ drop }>\n        { showPrePlaceholder &&\n          <div className=\"dnd-placeholder\"></div>\n        }\n        <div ref={ drag } className={ cs({ isHidden: isDragging }) }>\n          <Item parents={ parents } index={ index } item={ item } isDragging={ isDragging } />\n        </div>\n        { showPostPlaceholder &&\n          <div className=\"dnd-placeholder\"></div>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default DnDItem\n","import React, { useState, useContext, FormEvent } from \"react\"\nimport TreeyContext from \"../contexts/TreeyContext\"\nimport UIContext from \"../contexts/UIContext\"\nimport Button from \"./Button\"\nimport last from \"../utils/last\"\n\nimport \"../styles/FormAdd.sass\"\n\ntype Props = {\n  parents: Ids\n}\n\nconst FormAdd: React.FC<Props> = ({ parents }) => {\n\n  const [value, setValue] = useState(\"\")\n  const { treey } = useContext(TreeyContext)\n  const { isShownForm, setShownForm, unsetShownForm } = useContext(UIContext)\n\n  const showForm = isShownForm(parents, true)\n  const showButton = !showForm\n\n  const onClick = () => setShownForm(parents, true)\n  const onSubmit = async (event: FormEvent) => {\n    event.preventDefault()\n    if (treey == null) return\n    const parentId = last(parents)\n    if (parentId === undefined) return\n    await treey.createAndAdd(value, parentId)\n    unsetShownForm()\n    setValue(\"\")\n  }\n  const onChange = (event: FormEvent) => {\n    const value = (event.target as HTMLInputElement).value\n    setValue(value)\n  }\n\n  return (\n    <div className=\"FormAdd\" onClick={ event => event.stopPropagation() }>\n      { showButton &&\n        <Button onClick={ onClick } type=\"ADD\" />\n      }\n      { showForm &&\n        <form onSubmit={ onSubmit }>\n          <input type=\"text\" onChange={ onChange } value={ value } autoFocus />\n          <Button type=\"ADD\" />\n        </form>\n      }\n    </div>\n  )\n}\n\nexport default FormAdd\n","import React from \"react\"\nimport DnDItem from \"./DnDItem\"\nimport FormAdd from \"./FormAdd\"\n\nimport \"../styles/Items.sass\"\n\ntype Props = {\n  parents: Ids\n  items: TreeItems\n}\n\nconst Items: React.FC<Props> = ({ parents, items }) => {\n\n  const showItems = items.length > 0\n\n  return (\n    <div className=\"Items\">\n      { showItems &&\n        <ul>\n          { items.map((item, index) => (\n              <li key={ item.name }>\n                <DnDItem parents={ parents } index={ index } item={ item } />\n              </li>\n            ))\n          }\n        </ul>\n      }\n      <FormAdd parents={ parents } />\n    </div>\n  )\n}\n\nexport default Items\n","import React from \"react\"\nimport Items from \"./Items\"\nimport { DndProvider } from \"react-dnd\"\nimport HTML5Backend from \"react-dnd-html5-backend\"\n\nimport \"../styles/Tree.sass\"\n\ntype Props = {\n  tree: TreeItem\n  treey: Treey\n}\n\nconst Tree: React.FC<Props> = ({ tree, treey }) => {\n\n  const items = tree && tree.relations\n  const id = tree && tree.state.ids && tree.state.ids[0]\n  const parents = [id]\n\n  return (\n    <div className=\"Tree\">\n      { id &&\n        <DndProvider backend={ HTML5Backend }>\n          <Items parents={ parents } items={ items } />\n        </DndProvider>\n      }\n    </div>\n  )\n}\n\nexport default Tree\n","import React, { useContext } from \"react\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport TreeyContext from \"../contexts/TreeyContext\"\nimport Spinner from \"../components/Spinner\"\nimport Tree from \"../components/Tree\"\n\nimport \"../styles/Home.sass\"\n\ntype Props = RouteComponentProps\n\nconst PageHome: React.FC<Props> = () => {\n\n  const { tree, treey } = useContext(TreeyContext)\n  const showSpinner = tree == null\n  const showTree = tree != null && treey != null\n  const name = tree != null ? tree.name : \"\"\n\n  return (\n    <div className=\"Page PageHome\">\n      { showSpinner &&\n        <Spinner/>\n      }\n      { showTree &&\n        <>\n          <h1 className=\"RootItem\">{ name }</h1>\n          <Tree tree={ tree! } treey={ treey! } />\n        </>\n      }\n    </div>\n  )\n}\n\nexport default PageHome\n","import React, { useState, useContext, useEffect } from \"react\"\nimport TreeyContext from \"../contexts/TreeyContext\"\nimport treey from \"treey\"\n\nimport \"../styles/ItemOverview.sass\"\n\nconst { utils: { parseFullName } } = treey\n\n\ntype Props = {\n  fullName: string\n}\n\nconst ItemOverview: React.FC<Props> = ({ fullName }) => {\n\n  const [item, setItem] = useState<TreeItem>()\n  const [notFound, setNotFound] = useState(false)\n  const [invalidFullName, setInvalidFullName] = useState(false)\n  const { treey } = useContext(TreeyContext)\n\n  useEffect(() => {\n    if (treey == null) return\n    const id = parseFullName(fullName)\n    if (id == null) {\n      setInvalidFullName(true)\n      return\n    }\n    (async () => {\n      const item = await treey.read(id)\n      item !== undefined ? setItem(item) : setNotFound(true)\n    })()\n  }, [treey, fullName])\n\n  const isLoading = notFound === false && invalidFullName === false && item == null\n  const showItem = item != null\n  const itemName = item && item.name\n  const state = item && JSON.stringify(item.state)\n\n  return (\n    <div className=\"ItemOverview\">\n      { isLoading &&\n        <p>is loading&hellip;</p>\n      }\n      { invalidFullName &&\n        <p>{ fullName } is not valid</p>\n      }\n      { notFound &&\n        <p>{ fullName } not found</p>\n      }\n      { showItem &&\n        <>\n          <h1>{ itemName }</h1>\n          <h2>state</h2>\n          <p className=\"small\">{ state }</p>\n          <h2>events</h2>\n          <ul>\n            { item && item.events.map((event: ItemEvent, index: number) => {\n                const payload = event.payload ? JSON.stringify(event.payload) : null\n                const showPayload = payload != null\n                const datetime = String(event.datetime)\n                return (\n                  <li key={ index }>\n                    <strong>{ event.type }</strong><br/>\n                    { showPayload && <><span className=\"small\">{ payload }</span><br/></> }\n                    { datetime }\n                  </li>\n                )\n              })\n            }\n          </ul>\n        </>\n      }\n    </div>\n  )\n}\n\nexport default ItemOverview\n","import React from \"react\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport ItemOverview from \"../components/ItemOverview\"\n\ntype Props = RouteComponentProps & {\n  fullName?: string\n}\n\nconst PageItem: React.SFC<Props> = ({ fullName }) => {\n  return (\n    <div className=\"Page PageItem\">\n      <ItemOverview fullName={ fullName || \"\" } />\n    </div>\n  )\n}\n\nexport default PageItem\n","import React from \"react\"\nimport { RouteComponentProps } from \"@reach/router\"\n\nimport \"../styles/Page404.sass\"\n\ntype Props = RouteComponentProps\n\nconst Page404: React.SFC<Props> = () => {\n  return (\n    <div className=\"Page Page404\">\n      <p>404</p>\n    </div>\n  )\n}\n\nexport default Page404\n","import React from \"react\"\nimport TreeyProvider from \"./components/TreeyProvider\"\nimport UIProvider from \"./components/UIProvider\"\nimport { Router } from \"@reach/router\"\nimport basepath from \"./utils/basepath\"\nimport Header from \"./components/Header\"\nimport PageHome from \"./pages/Home\"\nimport PageItem from \"./pages/Item\"\nimport Page404 from \"./pages/404\"\n\n\nconst App: React.FC = () => {\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <main>\n        <TreeyProvider>\n          <UIProvider>\n            <Router basepath={ basepath }>\n              <PageHome path=\"/\" />\n              <PageItem path=\"/item/:fullName\" />\n              <Page404 default />\n            </Router>\n          </UIProvider>\n        </TreeyProvider>\n      </main>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nimport \"./styles/screen.sass\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}