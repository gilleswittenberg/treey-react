{"version":3,"sources":["contexts/TreeyContext.ts","hooks/useTreey.ts","components/TreeyProvider.tsx","contexts/UIContext.ts","hooks/useEscListener.ts","components/UIProvider.tsx","utils/basepath.ts","components/Header.tsx","components/Spinner.tsx","components/Button.tsx","components/ItemData.tsx","utils/treeItemUtils.ts","utils/last.ts","components/Item.tsx","components/DnDItem.tsx","components/FormAdd.tsx","components/Items.tsx","components/Tree.tsx","pages/Home.tsx","components/ItemOverview.tsx","pages/Item.tsx","pages/404.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["TreeyContext","createContext","tree","treey","init","read","createAndAdd","update","remove","move","useTreey","_useState","useState","_useState2","Object","slicedToArray","setTree","useEffect","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","sent","stop","actions","_read2","_callee2","id","_context2","abrupt","_x","apply","this","arguments","_createAndAdd2","_callee3","data","parentId","_context3","_x2","_x3","_update2","_callee4","_context4","_x4","_x5","_remove2","_callee5","index","_context5","_x6","_x7","_x8","_move2","_callee6","oldParentId","oldIndex","_context6","_x9","_x10","_x11","_x12","_x13","TreeyProvider","_ref","children","_useTreey","_useTreey2","value","react_default","createElement","contexts_TreeyContext","Provider","unimplemented","Error","isShownForm","setShownForm","unsetShownForm","UIContext","useEscListener","action","handler","event","keyCode","preventDefault","window","addEventListener","removeEventListener","createFullName","utils","UIProvider","shownForm","set","createPath","parents","isAdd","length","undefined","arr","map","concat","join","contexts_UIContext","basepath","location","host","Header","className","es","to","src","process","width","height","alt","Spinner","Button","type","onClick","style","backgroundImage","typeToImageMap","title","ItemData","isUrl","test","href","stopPropagation","getId","item","state","ids","getPath","parseData","str","JSON","parse","err","last","Item","isDragging","path","getData","dataString","stringify","stringifyData","hasRelations","relations","setValue","_useState3","_useState4","isOpened","setIsOpened","useContext","_ref2","_useContext2","isEditing","showItem","showForm","showItems","showAddButton","linkTo","name","onClickDelete","onSubmit","_ref3","trimmedValue","newData","trim","isEqual","cs","isHidden","selection","getSelection","toString","components_ItemData","components_Button","onChange","target","ref","elem","focus","components_Items","items","DnDItem","getName","useRef","hoverRegion","setHoverRegion","_useDrag","useDrag","collect","monitor","_useDrag2","drag","_useDrop","useDrop","accept","canDrop","getItem","drop","_drop","draggableData","newIndex","didDrop","hover","clientOffset","getClientOffset","clientRect","current","getBoundingClientRect","y","top","h","isOver","shallow","_useDrop2","_useDrop2$","showPlaceholder","showPrePlaceholder","showPostPlaceholder","components_Item","FormAdd","showButton","autoFocus","Items","key","components_DnDItem","components_FormAdd","Tree","esm","backend","HTML5Backend","PageHome","_useContext","showSpinner","showTree","components_Spinner","Fragment","components_Tree","parseFullName","ItemOverview","fullName","setItem","notFound","setNotFound","_useState5","_useState6","invalidFullName","setInvalidFullName","isLoading","itemName","events","payload","showPayload","datetime","String","PageItem","components_ItemOverview","Page404","App","components_Header","components_TreeyProvider","components_UIProvider","pages_Home","pages_Item","_404","default","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c6b83c37.chunk.js","sourcesContent":["import { createContext } from \"react\"\n\ntype Value = {\n  tree: TreeItem | null\n  treey: Treey | null\n}\n\nconst value = {\n  tree: null,\n  treey: null\n} as Value\n\nconst TreeyContext = createContext(value)\n\nexport default TreeyContext\n","import { useState, useEffect } from \"react\"\nimport treey from \"treey\"\nconst { treey: { init, read, createAndAdd, update, remove, move } } = treey\n\nconst useTreey = () => {\n  const [tree, setTree] = useState()\n  useEffect(() => {\n    (async () => {\n      const tree = await init()\n      setTree(tree)\n    })()\n  }, [])\n  const actions: Treey = {\n    read: async (id: Id) => {\n      return await read(id)\n    },\n    createAndAdd: async (data: Data, parentId: Id) => {\n      const tree = await createAndAdd(data, parentId)\n      setTree(tree)\n    },\n    update: async (id: Id, data: Data) => {\n      const tree = await update(id, data)\n      setTree(tree)\n    },\n    remove: async (id: Id, parentId: Id, index: Index) => {\n      const tree = await remove(id, parentId, index)\n      setTree(tree)\n    },\n    move: async (id: Id, oldParentId: Id, parentId: Id, oldIndex: Index, index: Index) => {\n      const tree = await move(id, oldParentId, parentId, oldIndex, index)\n      setTree(tree)\n    }\n  }\n  return [tree, actions]\n}\n\nexport default useTreey\n","import React, { ReactNode } from \"react\"\nimport TreeyContext from '../contexts/TreeyContext'\nimport useTreey from \"../hooks/useTreey\"\n\ntype Props = {\n  children: ReactNode\n}\n\nconst TreeyProvider: React.FC<Props> = ({ children }) => {\n\n  const [tree, treey] = useTreey()\n  const value = { tree, treey }\n\n  return (\n    <TreeyContext.Provider value={ value }>\n      { children }\n    </TreeyContext.Provider>\n  )\n}\n\nexport default TreeyProvider\n","import { createContext } from \"react\"\n\ntype Value = {\n  isShownForm (parents: Ids, isAdd?: boolean) : boolean\n  setShownForm (parents: Ids, isAdd?: boolean) : void\n  unsetShownForm () : void\n}\n\nconst unimplemented = () => { throw new Error (\"UIContext not implemented\") }\n\nconst value = {\n  isShownForm: unimplemented,\n  setShownForm: unimplemented,\n  unsetShownForm: unimplemented\n} as Value\n\nconst UIContext = createContext(value)\n\nexport default UIContext\n","import { useEffect } from \"react\"\n\nconst useEscListener = (action: () => void) => {\n\n  useEffect(() => {\n    const handler = (event: KeyboardEvent) => {\n      if (event.keyCode === 27) {\n        event.preventDefault()\n        action()\n      }\n    }\n    window.addEventListener(\"keydown\", handler)\n    return () => window.removeEventListener(\"keydown\", handler)\n  }, [action])\n}\n\nexport default useEscListener\n","import React, { ReactNode, useState, useEffect } from \"react\"\nimport UIContext from '../contexts/UIContext'\nimport useEscListener from \"../hooks/useEscListener\"\nimport treey from \"treey\"\n\nconst { utils: { createFullName } } = treey\n\ntype Props = {\n  children: ReactNode\n}\n\nconst UIProvider: React.FC<Props> = ({ children }) => {\n\n  const [shownForm, set] = useState()\n  const createPath = (parents: Ids, isAdd = false) => {\n    const arr = parents.map(id => createFullName(id))\n    return (isAdd ? arr.concat(\"add\") : arr).join(\"/\")\n  }\n  const isShownForm = (parents: Ids, isAdd = false) => shownForm === createPath(parents, isAdd)\n  const setShownForm = (parents: Ids, isAdd = false) => set(createPath(parents, isAdd))\n  const unsetShownForm = () => set(undefined)\n\n  useEscListener(unsetShownForm)\n\n  useEffect(() => {\n    window.addEventListener(\"click\", unsetShownForm)\n    return () => window.removeEventListener(\"click\", unsetShownForm)\n  }, [])\n\n  const value = { isShownForm, setShownForm, unsetShownForm }\n\n  return (\n    <UIContext.Provider value={ value }>\n      { children }\n    </UIContext.Provider>\n  )\n}\n\nexport default UIProvider\n","const basepath = window.location.host === \"gilleswittenberg.github.io\" ? \"/treey-react/\" : \"/\"\nexport default basepath\n","import React from \"react\"\nimport { Link } from \"@reach/router\"\nimport basepath from \"../utils/basepath\"\n\nimport \"../styles/Header.sass\"\n\nconst Header: React.SFC = () => {\n  const src = process.env.PUBLIC_URL + \"/images/logo_64x64.png\"\n  return (\n    <header className=\"Header\">\n      <Link to={ basepath }>\n        <h1><img src={ src } width=\"32px\" height=\"32px\" alt=\"木\" /></h1>\n        <h2>treey</h2>\n      </Link>\n    </header>\n  )\n}\n\nexport default Header\n","import React from \"react\"\n\nimport \"../styles/Spinner.sass\"\n\nconst Spinner: React.FC = () => (<p className=\"Spinner\">is loading&hellip;</p>)\n\nexport default Spinner\n","import React from \"react\"\n\nimport \"../styles/Button.sass\"\n\ntype ButtonType = \"ADD\" | \"EDIT\" | \"DELETE\"\n\ntype Props = {\n  type: ButtonType\n  onClick?: () => void\n}\n\nconst typeToImageMap = (type: ButtonType) : string => {\n  switch (type) {\n  case \"ADD\": return \"add_64x64.png\"\n  case \"EDIT\": return \"submit_64x64.png\"\n  case \"DELETE\": return \"remove_64x64.png\"\n  }\n}\n\nconst Button: React.FC<Props> = ({ type, onClick }) => {\n  const className = \"Button \" + type\n  const backgroundImage = `url(\"${ process.env.PUBLIC_URL }/images/${ typeToImageMap(type) }\")`\n  const style = { backgroundImage }\n  return (\n    <button className={ className } style={ style } onClick={ onClick } title={ type }>{ type }</button>\n  )\n}\n\nexport default Button\n","import React from \"react\"\n\ntype Props = {\n  data: Data\n}\n\nconst ItemData: React.FC<Props> = ({ data }) => {\n  const isUrl = /^https?:\\/\\//.test(data)\n  return (\n    <span className=\"ItemData\">\n      { isUrl ? <a href={ data } onClick={ event => event.stopPropagation() }>{ data }</a> : data }\n    </span>\n  )\n}\n\nexport default ItemData\n","import treey from \"treey\"\nconst { utils: { createFullName } } = treey\n\nexport const getId = (item: TreeItem) : Id | undefined => item.state.ids && item.state.ids[0]\nexport const getData = (item: TreeItem) : Data => item.state && item.state.data\nexport const getPath = (id: Id | undefined, parents: Ids) : Ids => id ? parents.concat(id) : parents\nexport const getName = (id: Id | undefined, parents: Ids) : Name => getPath(id, parents).map(id => createFullName(id)).join(\"/\")\nexport const stringifyData = (data: Data) : string => {\n  if (typeof data === \"string\") return data\n  return JSON.stringify(data, undefined, 1)\n}\nexport const parseData = (str: string) : Data => {\n  try {\n    return JSON.parse(str)\n  } catch (err) {\n    return str\n  }\n}\n","const last = <T>(arr: T[]) => arr[arr.length - 1]\nexport default last\n","import React, { useState, useContext, FormEvent } from \"react\"\nimport { Link } from \"@reach/router\"\nimport TreeyContext from \"../contexts/TreeyContext\"\nimport UIContext from \"../contexts/UIContext\"\nimport Items from \"./Items\"\nimport Button from \"./Button\"\nimport ItemData from \"./ItemData\"\nimport { getId, getPath, getData, stringifyData, parseData } from \"../utils/treeItemUtils\"\nimport last from \"../utils/last\"\nimport basepath from \"../utils/basepath\"\nimport cs from \"classnames\"\nimport { isEqual } from \"lodash\"\n\nimport \"../styles/Item.sass\"\n\ntype Props = {\n  parents: Ids\n  index: Index\n  item: TreeItem\n  isDragging: boolean\n}\n\nconst Item: React.FC<Props> = ({ parents, index, item, isDragging }) => {\n\n\n  const id = getId(item)\n  const parentId = last(parents)\n  const path = getPath(id, parents)\n  const data = getData(item)\n  const dataString = stringifyData(data)\n  const hasRelations = item.relations.length > 0\n\n  const [value, setValue] = useState(dataString)\n  const [isOpened, setIsOpened] = useState(false)\n  const { treey } = useContext(TreeyContext)\n  const remove = async () => {\n    if (treey == null) return\n    if (id == null) return\n    await treey.remove(id, parentId, index)\n  }\n  const { isShownForm, setShownForm, unsetShownForm } = useContext(UIContext)\n\n  const isEditing = isShownForm(path)\n  const showItem = isDragging || !isEditing\n  const showForm = !isDragging && isEditing\n  const showItems = !isDragging && ((isOpened && hasRelations) || isShownForm(path, true))\n  const showAddButton = !hasRelations\n\n  const linkTo = `${ basepath }item/${ item.name }`\n\n  const onClick = () => {\n    if (isShownForm(path, true)) unsetShownForm()\n    const selection = window.getSelection()\n    if (selection && selection.toString() !== \"\") return\n    if (!hasRelations) return\n    setIsOpened(!isOpened)\n  }\n  const onClickAdd = () => {\n    setShownForm(path, true)\n    setIsOpened(true)\n  }\n  const onClickEdit = () => setShownForm(path)\n  const onClickDelete = remove\n  const onSubmit = async (event: FormEvent) => {\n    event.preventDefault()\n    unsetShownForm()\n    const trimmedValue = value.trim()\n    if (trimmedValue === \"\") return remove()\n    const newData = parseData(trimmedValue)\n    if (isEqual(data, newData)) return\n    if (treey == null) return\n    if (id == null) return\n    await treey.update(id, newData)\n  }\n  const onChange = (event: FormEvent) => {\n    const value = (event.target as HTMLInputElement).value\n    setValue(value)\n  }\n\n  return (\n    <div className=\"Item\" onClick={ event => event.stopPropagation() }>\n      <div className={ cs(\"ItemBody\", { isHidden: !showItem, showAddButton }) }>\n        <span onClick={ onClick }>\n          <ItemData data={ dataString } />\n          <Link to={ linkTo } className=\"info\">ⓘ</Link>\n        </span>\n        { showAddButton &&\n          <Button type=\"ADD\" onClick={ onClickAdd } />\n        }\n        <Button type=\"EDIT\" onClick={ onClickEdit } />\n        <Button type=\"DELETE\" onClick={ onClickDelete } />\n      </div>\n      <form onSubmit={ onSubmit } className={ cs({ isHidden: !showForm }) }>\n        <input type=\"text\" value={ value } onChange={ onChange } ref={ elem => elem && elem.focus() } />\n        <Button type=\"EDIT\" />\n      </form>\n      <div className={ cs({ isHidden: !showItems }) }>\n        <Items parents={ path } items={ item.relations } />\n      </div>\n    </div>\n  )\n}\n\nexport default Item\n","import React, { useContext, useRef, useState } from \"react\"\nimport { useDrag, useDrop } from 'react-dnd'\nimport TreeyContext from \"../contexts/TreeyContext\"\nimport Item from \"./Item\"\nimport { getId, getName } from \"../utils/treeItemUtils\"\nimport last from \"../utils/last\"\nimport cs from \"classnames\"\n\nimport \"../styles/DnDItem.sass\"\n\ntype Props = {\n  parents: Ids\n  index: Index\n  item: TreeItem\n}\n\ntype HoverRegion = \"top\" | \"bottom\"\n\ntype DraggableData = {\n  type: string,\n  parents: Ids,\n  index: Index,\n  id: Id\n}\n\nconst DnDItem: React.FC<Props> = ({ parents, index, item }) => {\n\n  const id = getId(item)\n  const name = getName(id, parents)\n\n  const { treey } = useContext(TreeyContext)\n  const ref = useRef<HTMLDivElement>(null)\n  const [hoverRegion, setHoverRegion] = useState<HoverRegion>()\n\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: \"item\", parents, index, id },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  })\n\n  const [{ canDrop, isOver }, drop] = useDrop({\n    accept: \"item\",\n    canDrop: (item, monitor) => monitor.getItem().name !== name,\n    drop: async (item, monitor) => {\n\n      // guard for nested drop targets\n      if (monitor.didDrop()) return\n\n      const draggableData = item as DraggableData\n      const id = draggableData.id\n      const oldParentId = last(draggableData.parents)\n      const oldIndex = draggableData.index\n      const parentId = last(parents)\n      // add one if hover over bottom\n      // substract one if draggable came from before droppable\n      const newIndex = index + (hoverRegion === \"bottom\" ? 1 : 0) - (oldParentId === parentId && oldIndex < index ? 1 : 0)\n      // guard for dropped on previous location\n      if (oldParentId === parentId && oldIndex === newIndex) return\n\n      // guard for null treey context\n      if (treey == null) return\n      await treey.move(id, oldParentId, parentId, oldIndex, newIndex)\n    },\n    hover: (item, monitor) => {\n      const clientOffset = monitor.getClientOffset()\n      const clientRect = ref && ref.current && ref.current.getBoundingClientRect()\n      if (clientRect && clientOffset) {\n        const h = 44 + 6 // height + bottom margin\n        const y = clientOffset.y - clientRect.top\n        const hoverRegion = y <= h / 2 ? \"top\" : \"bottom\"\n        setHoverRegion(hoverRegion)\n      }\n    },\n    collect: monitor => ({\n      isOver: monitor.isOver({ shallow: true }),\n      canDrop: monitor.canDrop()\n    })\n  })\n\n  const showPlaceholder = isOver && canDrop\n  const showPrePlaceholder = showPlaceholder && hoverRegion === \"top\"\n  const showPostPlaceholder = showPlaceholder && hoverRegion === \"bottom\"\n\n  return (\n    <div ref={ ref }>\n      <div ref={ drop }>\n        { showPrePlaceholder &&\n          <div className=\"dnd-placeholder\"></div>\n        }\n        <div ref={ drag } className={ cs({ isHidden: isDragging }) }>\n          <Item parents={ parents } index={ index } item={ item } isDragging={ isDragging } />\n        </div>\n        { showPostPlaceholder &&\n          <div className=\"dnd-placeholder\"></div>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default DnDItem\n","import React, { useState, useContext, FormEvent } from \"react\"\nimport TreeyContext from \"../contexts/TreeyContext\"\nimport UIContext from \"../contexts/UIContext\"\nimport Button from \"./Button\"\nimport last from \"../utils/last\"\nimport { parseData } from \"../utils/treeItemUtils\"\n\nimport \"../styles/FormAdd.sass\"\n\ntype Props = {\n  parents: Ids\n}\n\nconst FormAdd: React.FC<Props> = ({ parents }) => {\n\n  const [value, setValue] = useState(\"\")\n  const { treey } = useContext(TreeyContext)\n  const { isShownForm, setShownForm, unsetShownForm } = useContext(UIContext)\n\n  const showForm = isShownForm(parents, true)\n  const showButton = !showForm\n\n  const onClick = () => setShownForm(parents, true)\n  const onSubmit = async (event: FormEvent) => {\n    event.preventDefault()\n    const trimmedValue = value.trim()\n    if (trimmedValue === \"\") {\n      unsetShownForm()\n      return\n    }\n    if (treey == null) return\n    const parentId = last(parents)\n    if (parentId === undefined) return\n    const data = parseData(trimmedValue)\n    await treey.createAndAdd(data, parentId)\n    unsetShownForm()\n    setValue(\"\")\n  }\n  const onChange = (event: FormEvent) => {\n    const value = (event.target as HTMLInputElement).value\n    setValue(value)\n  }\n\n  return (\n    <div className=\"FormAdd\" onClick={ event => event.stopPropagation() }>\n      { showButton &&\n        <Button onClick={ onClick } type=\"ADD\" />\n      }\n      { showForm &&\n        <form onSubmit={ onSubmit }>\n          <input type=\"text\" onChange={ onChange } value={ value } autoFocus />\n          <Button type=\"ADD\" />\n        </form>\n      }\n    </div>\n  )\n}\n\nexport default FormAdd\n","import React from \"react\"\nimport DnDItem from \"./DnDItem\"\nimport FormAdd from \"./FormAdd\"\n\nimport \"../styles/Items.sass\"\n\ntype Props = {\n  parents: Ids\n  items: TreeItems\n}\n\nconst Items: React.FC<Props> = ({ parents, items }) => {\n\n  const showItems = items.length > 0\n\n  return (\n    <div className=\"Items\">\n      { showItems &&\n        <ul>\n          { items.map((item, index) => (\n              <li key={ item.name }>\n                <DnDItem parents={ parents } index={ index } item={ item } />\n              </li>\n            ))\n          }\n        </ul>\n      }\n      <FormAdd parents={ parents } />\n    </div>\n  )\n}\n\nexport default Items\n","import React from \"react\"\nimport Items from \"./Items\"\nimport { DndProvider } from \"react-dnd\"\nimport HTML5Backend from \"react-dnd-html5-backend\"\n\nimport \"../styles/Tree.sass\"\n\ntype Props = {\n  tree: TreeItem\n  treey: Treey\n}\n\nconst Tree: React.FC<Props> = ({ tree, treey }) => {\n\n  const items = tree && tree.relations\n  const id = tree && tree.state.ids && tree.state.ids[0]\n  const parents = [id]\n\n  return (\n    <div className=\"Tree\">\n      { id &&\n        <DndProvider backend={ HTML5Backend }>\n          <Items parents={ parents } items={ items } />\n        </DndProvider>\n      }\n    </div>\n  )\n}\n\nexport default Tree\n","import React, { useContext } from \"react\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport TreeyContext from \"../contexts/TreeyContext\"\nimport Spinner from \"../components/Spinner\"\nimport Tree from \"../components/Tree\"\n\nimport \"../styles/Home.sass\"\n\ntype Props = RouteComponentProps\n\nconst PageHome: React.FC<Props> = () => {\n\n  const { tree, treey } = useContext(TreeyContext)\n  const showSpinner = tree == null\n  const showTree = tree != null && treey != null\n  const name = tree != null ? tree.name : \"\"\n\n  return (\n    <div className=\"Page PageHome\">\n      { showSpinner &&\n        <Spinner/>\n      }\n      { showTree &&\n        <>\n          <h1 className=\"RootItem\">{ name }</h1>\n          <Tree tree={ tree! } treey={ treey! } />\n        </>\n      }\n    </div>\n  )\n}\n\nexport default PageHome\n","import React, { useState, useContext, useEffect } from \"react\"\nimport TreeyContext from \"../contexts/TreeyContext\"\nimport treey from \"treey\"\n\nimport \"../styles/ItemOverview.sass\"\n\nconst { utils: { parseFullName } } = treey\n\n\ntype Props = {\n  fullName: string\n}\n\nconst ItemOverview: React.FC<Props> = ({ fullName }) => {\n\n  const [item, setItem] = useState<TreeItem>()\n  const [notFound, setNotFound] = useState(false)\n  const [invalidFullName, setInvalidFullName] = useState(false)\n  const { treey } = useContext(TreeyContext)\n\n  useEffect(() => {\n    if (treey == null) return\n    const id = parseFullName(fullName)\n    if (id == null) {\n      setInvalidFullName(true)\n      return\n    }\n    (async () => {\n      const item = await treey.read(id)\n      item !== undefined ? setItem(item) : setNotFound(true)\n    })()\n  }, [treey, fullName])\n\n  const isLoading = notFound === false && invalidFullName === false && item == null\n  const showItem = item != null\n  const itemName = item && item.name\n  const state = item && JSON.stringify(item.state, undefined, 2)\n\n  return (\n    <div className=\"ItemOverview\">\n      { isLoading &&\n        <p>is loading&hellip;</p>\n      }\n      { invalidFullName &&\n        <p>{ fullName } is not valid</p>\n      }\n      { notFound &&\n        <p>{ fullName } not found</p>\n      }\n      { showItem &&\n        <>\n          <h1>{ itemName }</h1>\n          <h2>state</h2>\n          <p className=\"small pre\">{ state }</p>\n          <h2>events</h2>\n          <ul>\n            { item && item.events.map((event: ItemEvent, index: number) => {\n                const payload = event.payload ? JSON.stringify(event.payload, undefined, 1) : null\n                const showPayload = payload != null\n                const datetime = String(event.datetime)\n                return (\n                  <li key={ index }>\n                    <strong>{ event.type }</strong><br/>\n                    { showPayload && <><span className=\"small\">{ payload }</span><br/></> }\n                    { datetime }\n                  </li>\n                )\n              })\n            }\n          </ul>\n        </>\n      }\n    </div>\n  )\n}\n\nexport default ItemOverview\n","import React from \"react\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport ItemOverview from \"../components/ItemOverview\"\n\ntype Props = RouteComponentProps & {\n  fullName?: string\n}\n\nconst PageItem: React.SFC<Props> = ({ fullName }) => {\n  return (\n    <div className=\"Page PageItem\">\n      <ItemOverview fullName={ fullName || \"\" } />\n    </div>\n  )\n}\n\nexport default PageItem\n","import React from \"react\"\nimport { RouteComponentProps } from \"@reach/router\"\n\nimport \"../styles/Page404.sass\"\n\ntype Props = RouteComponentProps\n\nconst Page404: React.SFC<Props> = () => {\n  return (\n    <div className=\"Page Page404\">\n      <p>404</p>\n    </div>\n  )\n}\n\nexport default Page404\n","import React from \"react\"\nimport TreeyProvider from \"./components/TreeyProvider\"\nimport UIProvider from \"./components/UIProvider\"\nimport { Router } from \"@reach/router\"\nimport basepath from \"./utils/basepath\"\nimport Header from \"./components/Header\"\nimport PageHome from \"./pages/Home\"\nimport PageItem from \"./pages/Item\"\nimport Page404 from \"./pages/404\"\n\n\nconst App: React.FC = () => {\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <main>\n        <TreeyProvider>\n          <UIProvider>\n            <Router basepath={ basepath }>\n              <PageHome path=\"/\" />\n              <PageItem path=\"/item/:fullName\" />\n              <Page404 default />\n            </Router>\n          </UIProvider>\n        </TreeyProvider>\n      </main>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nimport \"./styles/screen.sass\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}