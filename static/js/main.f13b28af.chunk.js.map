{"version":3,"sources":["treey/src/types/Item.ts","treey/src/createEvent.ts","treey/src/database/IndexedDB.ts","treey/src/utils/toArray.ts","treey/src/createItem.ts","treey/src/database/MemoryDB.ts","treey/src/crypto/random.ts","treey/src/crypto/random_browser.ts","treey/src/crypto/createUUID.ts","treey/src/database/database.ts","treey/src/crud.ts","treey/src/tree/createTreeItem.ts","treey/src/treey.ts","hooks/useTreey.ts","components/Header.tsx","hooks/useEscListener.ts","components/Button.tsx","components/Item.tsx","components/FormAdd.tsx","components/Items.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ItemEventType","database","createEvent","type","payload","event","datetime","Date","validatedPayload","Create","IdentityAdd","IdentityRemove","id","Burn","SchemaSet","schema","DataSet","data","RelationAdd","RelationRemove","index","Prune","state","validateEventPayload","toArray","val","Array","isArray","reduceItem","item","Error","events","length","concat","ids","Object","objectSpread","newIds","filter","i","protocol","name","relations","splice","reduceState","updateItem","reduce","createItem","initIndexedDB","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","abrupt","Promise","resolve","reject","window","indexedDB","request","open","onerror","console","error","onsuccess","db","target","result","onupgradeneeded","oldVersion","createObjectStore","keyPath","stop","apply","this","arguments","_callee2","_context2","sent","getItem","_ref3","_callee3","_context3","transaction","objectStore","get","_x","getItems","_ref4","_callee4","_context4","getAll","items","IndexedDB","addItem","_ref5","_callee5","_context5","add","_x2","putItem","_ref6","_callee6","_context6","put","log","_x3","clear","_ref7","_callee7","_context7","store","create","read","_ref2","undefined","update","values","keys","forEach","key","MemoryDB","random","crypto","getRandomValues","Uint32Array","createUUID","replace","c","r","toString","isRoot","itemEventIdentityAdd","updatedItem","dbItem","_args","t0","treeyId","_x4","del","itemEventBurn","_x5","database_database","crud","itemEventCreate","t1","createTreeItem","treeItemRelations","map","relation","find","id0","findItem","init","rootItem","root","createAndAdd","parentId","eventDataSet","eventRelationAdd","remove","_x6","_x7","move","oldParentId","oldIndex","eventRelationRemove","_x8","_x9","_x10","_x11","_x12","useTreey","_useState","useState","_useState2","slicedToArray","tree","setTree","useEffect","actions","_createAndAdd2","_update2","_remove2","_move2","Header","react_default","createElement","className","src","process","width","height","alt","useEscListener","action","handler","keyCode","preventDefault","addEventListener","removeEventListener","Button","onClick","title","Item","treey","isEditing","setIsEditing","_useState3","_useState4","value","setValue","_useState5","_useState6","isOpened","setIsOpened","showItem","showForm","showItems","onClickDelete","onSubmit","components_Button","onChange","autoFocus","components_Items","FormAdd","isAdding","setIsAdding","showButton","Items","components_Item","components_FormAdd","App","_useTreey","_useTreey2","isLoading","hasTree","components_Header","Fragment","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f13b28af.chunk.js","sourcesContent":["import { Id, Ids, Index, Schema, Data /*, Hash, Hashes, */ } from \"./types\"\n\nexport interface ItemEventPayload {\n  state?: State,\n  id?: Id,\n  schema?: Schema,\n  data?: Data,\n  index?: Index\n}\n\nexport enum ItemEventType {\n  Create,\n  IdentityAdd,\n  IdentityRemove,\n  Burn,\n  SchemaSet,\n  DataSet,\n  RelationAdd,\n  RelationRemove,\n  Prune\n}\n\nexport interface ItemEvent {\n  type: ItemEventType,\n  datetime: Date,\n  payload?: ItemEventPayload\n}\nexport type ItemEvents = ItemEvent[]\n\nexport interface State {\n  ids?: Ids,\n  schema?: Schema,\n  data?: Data,\n  relations?: Ids\n}\n\nexport default interface Item {\n  events: ItemEvents,\n  state: State,\n  //hashes: Hashes,\n  //hash: Hash\n}\nexport type Items = Item[]\n","import { ItemEventType, ItemEventPayload, ItemEvent } from \"./types/Item\"\n\nconst validateEventPayload = (type: ItemEventType, payload?: ItemEventPayload) : ItemEventPayload | null => {\n\n  if (payload == null) return null\n\n  switch (type) {\n  case ItemEventType.Create:\n    return null\n  case ItemEventType.IdentityAdd:\n    return payload.id != null ? { id: payload.id } : null\n  case ItemEventType.IdentityRemove:\n    return payload.id != null ? { id: payload.id } : null\n  case ItemEventType.Burn:\n    return null\n  case ItemEventType.SchemaSet:\n    return payload.schema != null ? { schema: payload.schema } : null\n  case ItemEventType.DataSet:\n    return payload.data != null ? { data: payload.data } : null\n  case ItemEventType.RelationAdd:\n    return payload.id != null ? { id: payload.id, index: payload.index } : null\n  case ItemEventType.RelationRemove:\n    return payload.id != null ? { id: payload.id, index: payload.index } : null\n  case ItemEventType.Prune:\n    return payload.state != null ? { state: payload.state } : null\n  }\n\n  return null\n}\n\nconst createEvent = (type: ItemEventType, payload?: ItemEventPayload) : ItemEvent => {\n  const datetime = new Date()\n  const event: ItemEvent = { type, datetime }\n  const validatedPayload = validateEventPayload(type, payload)\n  if (validatedPayload != null) event.payload = validatedPayload\n  return event\n}\n\nexport default createEvent\n","import DBItem, { DBItems } from \"../types/DBItem\"\nimport { UUID } from \"../types/types\"\n\ntype IDBDatabaseEvent = Event & { target: { result: IDBDatabase } }\ntype IDBDatabaseEventItem = Event & { target: EventTarget | null }\ntype IDBDatabaseEventItems = Event & { target: EventTarget | null }\n\n// Initialization\n\nconst databaseName = \"Treey\"\n\nconst initIndexedDB = async () => {\n\n  return new Promise<IDBDatabase>((resolve, reject) => {\n\n    if (!window.indexedDB) reject(\"IndexedDB not supported\")\n\n    const request = window.indexedDB.open(databaseName, 1)\n\n    request.onerror = event => {\n      console.error(\"request.onerror\", event)\n      reject(event)\n    }\n    request.onsuccess = event => {\n      const request = event.target as IDBRequest\n      const db = request.result\n      db.onerror = (event: Event) => {\n        console.error(\"db.onerror\", event)\n        reject(event)\n      }\n      resolve(db)\n    }\n    request.onupgradeneeded = event => {\n\n      if (event.oldVersion < 1) {\n\n        const request = event.target as IDBRequest\n        const db = request.result\n\n        db.createObjectStore(\"items\", { keyPath: \"id\" })\n      }\n    }\n  })\n}\n\nlet database: IDBDatabase\n(async () => {\n  database = await initIndexedDB()\n})()\n\n\n// API\n\nconst getItem = async (id: UUID) => {\n  return new Promise<DBItem>((resolve, reject) => {\n\n    const objectStore = database.transaction(\"items\", \"readwrite\").objectStore(\"items\")\n    const request = objectStore.get(id)\n    request.onerror = event => {\n      console.error(event)\n      reject()\n    }\n    request.onsuccess = (event: IDBDatabaseEventItem) => {\n      if (event.target == null) return reject()\n      const item = (event.target as IDBRequest).result\n      if (item == null) return reject()\n      resolve(item)\n    }\n  })\n}\n\nconst getItems = async () => {\n  return new Promise<DBItems>((resolve, reject) => {\n\n    const objectStore = database.transaction(\"items\", \"readwrite\").objectStore(\"items\")\n    const request = objectStore.getAll()\n    request.onerror = event => {\n      console.error(event)\n      reject()\n    }\n    request.onsuccess = (event: IDBDatabaseEventItems) => {\n      if (event.target == null) return reject()\n      const items = (event.target as IDBRequest).result\n      resolve(items)\n    }\n  })\n}\n\nconst addItem = async (item: DBItem) => {\n  return new Promise<DBItem>((resolve, reject) => {\n\n    const objectStore = database.transaction(\"items\", \"readwrite\").objectStore(\"items\")\n    const request = objectStore.add(item)\n    request.onerror = event => {\n      console.error(event)\n      reject()\n    }\n    request.onsuccess = event => {\n      resolve(item)\n    }\n  })\n}\n\nconst putItem = async (item: DBItem) => {\n  return new Promise<DBItem>((resolve, reject) => {\n\n    const objectStore = database.transaction(\"items\", \"readwrite\").objectStore(\"items\")\n    const request = objectStore.put(item)\n    request.onerror = event => {\n      console.error(event)\n      reject()\n    }\n    request.onsuccess = event => {\n      console.log(event)\n      resolve(item)\n    }\n  })\n}\n\nconst clear = async () => {\n  return new Promise<DBItems>((resolve, reject) => {\n\n    const objectStore = database.transaction(\"items\", \"readwrite\").objectStore(\"items\")\n    const request = objectStore.clear()\n    request.onerror = event => {\n      console.error(event)\n      reject()\n    }\n    request.onsuccess = () => {\n      resolve([])\n    }\n  })\n}\n\nexport default {\n  addItem,\n  getItem,\n  getItems,\n  putItem,\n  clear\n}\n","const toArray = (val: any | any[]) => Array.isArray(val) ? val : [val]\nexport default toArray\n","import Item, { ItemEventType, ItemEvent, ItemEvents, State } from \"./types/Item\"\nimport toArray from \"./utils/toArray\"\n//import generateHash from \"./crypto/generateHash\"\n\nconst reduceState = (state: State, event: ItemEvent) : State => {\n\n  switch (event.type) {\n  case ItemEventType.Create: {\n    return {}\n  }\n  case ItemEventType.IdentityAdd: {\n    const id = event.payload ? event.payload.id : null\n    if (id == null) return state\n    const ids = state && state.ids ? state.ids.concat(id) : [id]\n    return { ...state, ids }\n  }\n  case ItemEventType.IdentityRemove: {\n    const id = event.payload ? event.payload.id : null\n    if (id == null) return state\n    const ids = (state && state.ids) || []\n    const newIds = ids.filter(i => i.protocol !== id.protocol && i.name !== id.name)\n    return { ...state, ids: newIds }\n  }\n  case ItemEventType.Burn: {\n    return state\n  }\n  case ItemEventType.SchemaSet: {\n    const schema = event.payload ? event.payload.schema : null\n    if (schema == null) return state\n    return { ...state, schema }\n  }\n  case ItemEventType.DataSet: {\n    const data = event.payload ? event.payload.data : null\n    return { ...state, data }\n  }\n  case ItemEventType.RelationAdd: {\n    const id = event.payload ? event.payload.id : null\n    if (id == null) return state\n    const index = event.payload && event.payload.index\n    const ids = state && state.relations != null ? state.relations : []\n    const shouldInsert = index != null && ids.length > index\n    const newIds = shouldInsert ? ids.splice(index as number, 0, id) : ids.concat(id)\n    return { ...state, relations: newIds }\n  }\n  case ItemEventType.RelationRemove: {\n    const id = event.payload ? event.payload.id : null\n    if (id == null) return state\n    const ids = (state && state.relations) || []\n    // @TODO: payload.index\n    const newIds = ids.filter(i => i.protocol !== id.protocol && i.name !== id.name)\n    return { ...state, ids: newIds }\n  }\n  case ItemEventType.Prune: {\n    return state\n  }\n  }\n\n  return {}\n}\n\nconst reduceItem = (item: Item | null, event: ItemEvent) : Item => {\n\n  if (item == null && event.type !== ItemEventType.Create) throw new Error (\"Item can not be null\")\n  if (item != null && event.type === ItemEventType.Create) throw new Error (\"First ItemEvent should be Create\")\n  if (item != null && item.events[item.events.length - 1].type === ItemEventType.Burn) throw new Error (\"Can not add additional event after Burn event\")\n\n  const currentEvents = item != null ? item.events : []\n  const events = currentEvents.concat(event)\n  const currentState = item != null ? item.state : {}\n  const state = reduceState(currentState, event) || {}\n  //const hash = generateHash(state)\n  //const currentHashes = is ? item.hashes : []\n  //const hashes = currentHashes.concat(hash)\n\n  return {\n    events,\n    state,\n    //hashes,\n    //hash\n  }\n}\n\nconst createItem = (events: ItemEvent | ItemEvents) : Item => {\n  const item = toArray(events).reduce(reduceItem, null)\n  if (item == null) throw new Error (\"Can not create item without events\")\n  return item\n}\nexport const updateItem = (item: Item, events: ItemEvent | ItemEvents) : Item => toArray(events).reduce(reduceItem, item)\nexport default createItem\n","import { UUID } from \"../types/types\"\nimport DBItem, { DBItems } from \"../types/DBItem\"\n\nconst store: Record<UUID, DBItem> = {}\n\nconst create = async (item: DBItem) : Promise<DBItem> => {\n  const id = item.id\n  store[id] = item\n  return item\n}\n\nconst read = async (id: UUID) : Promise<DBItem | undefined> => {\n  const item = store[id]\n  return item != null ? item : undefined\n}\n\nconst update = async (item: DBItem) : Promise<DBItem> => {\n  const id = item.id\n  store[id] = item\n  return item\n}\n\nconst index = async () : Promise<DBItems> =>  {\n  return Object.values(store)\n}\n\nconst clear = async () : Promise<DBItems> => {\n  Object.keys(store).forEach((key: UUID) => delete store[key])\n  return await index()\n}\n\nexport default {\n  create,\n  read,\n  update,\n  index,\n  clear\n}\n","import isBrowser from \"../utils/isBrowser\"\nimport randomBrowser from \"./random_browser\"\nimport randomNode from \"./random_node\"\n\nconst random = isBrowser ? randomBrowser : randomNode\nexport default random\n","// @LINK: https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nconst random = () =>\n  window.crypto.getRandomValues(new Uint32Array(1))[0] / 4294967295\n\nexport default random\n","import { UUID } from \"../types/types\"\nimport random from \"./random\"\n// @LINK: https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\nconst createUUID = () : UUID => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c: string) => {\n    const r = random() * 16 | 0\n    const v = c === 'x' ? r : ((r & 0x3) | 0x8)\n    return v.toString(16)\n  })\n}\nexport default createUUID\n","import isBrowser from \"../utils/isBrowser\"\nimport IndexedDB from \"./IndexedDB\"\nimport MemoryDB from \"./MemoryDB\"\nimport { Id } from \"../types/types\"\nimport createUUID from \"../crypto/createUUID\"\nimport createEvent from \"../createEvent\"\nimport { updateItem } from \"../createItem\"\nimport Item, { ItemEventType, ItemEvent, ItemEvents } from \"../types/Item\"\nimport toArray from \"../utils/toArray\"\n\nconst create = async (item: Item, isRoot = false) => {\n  const name = createUUID()\n  const id = { protocol: \"self\", name }\n  const itemEventIdentityAdd = createEvent(ItemEventType.IdentityAdd, { id })\n  const updatedItem = updateItem(item, [itemEventIdentityAdd])\n  const dbItem = { id: name, isRoot, ...updatedItem }\n  return isBrowser ? await IndexedDB.addItem(dbItem) : await MemoryDB.create(dbItem)\n}\n\nconst read = async (treeyId: Id) => {\n  const id = treeyId.name\n  if (id == null) return undefined\n  return isBrowser ? await IndexedDB.getItem(id) : await MemoryDB.read(id)\n}\n\nconst update = async (id: Id, events: ItemEvent | ItemEvents) => {\n  const item = await read(id)\n  if (item == null) return undefined\n  const updatedItem = updateItem(item, toArray(events))\n  const dbItem = { id: item.id, isRoot: item.isRoot, ...updatedItem }\n  return isBrowser ? await IndexedDB.putItem(dbItem) : await MemoryDB.update(dbItem)\n}\n\nconst del = async (id: Id) => {\n  const itemEventBurn = createEvent(ItemEventType.Burn)\n  return await update(id, [itemEventBurn])\n}\n\nconst index = async () => {\n  return isBrowser ? await IndexedDB.getItems() : await MemoryDB.index()\n}\n\nconst clear = async () => {\n  isBrowser ? await IndexedDB.clear() : await MemoryDB.clear()\n}\n\nexport default {\n  create,\n  read,\n  update,\n  del,\n  index,\n  clear\n}\n","import { Id } from \"./types/types\"\nimport Item, { Items, ItemEvent, ItemEvents, ItemEventType } from \"./types/Item\"\nimport createEvent from \"./createEvent\"\nimport createItem from \"./createItem\"\nimport database from \"./database/database\"\nimport toArray from \"./utils/toArray\"\n\nconst create = async (isRoot = false) : Promise<Item> => {\n  const itemEventCreate = createEvent(ItemEventType.Create)\n  const item = createItem([itemEventCreate])\n  return await database.create(item, isRoot)\n}\n\nconst read = async (id: Id) : Promise<Item | undefined> => {\n  return await database.read(id)\n}\n\nconst update = async (id: Id, events: ItemEvent | ItemEvents) : Promise<Item | undefined> => {\n  return await database.update(id, toArray(events))\n}\n\nconst del = async (id: Id) : Promise<Item | undefined> => {\n  return await database.del(id)\n}\n\nconst index = async () : Promise<Items> => {\n  return toArray(await database.index())\n}\n\nexport default {\n  create,\n  read,\n  update,\n  del,\n  index\n}\n","import { Id } from \"../types/types\"\nimport Item, { Items } from \"../types/Item\"\nimport TreeItem from \"../types/TreeItem\"\n\nconst findItem = (id: Id, items: Items) : Item | undefined => {\n  return items.find(item => {\n    const id0 = item.state.ids && item.state.ids[0]\n    if (id0 == null) return false\n    return id0.name === id.name\n  })\n}\n\nconst createTreeItem = (item: Item, items: Items) : TreeItem => {\n  const relations = item.state.relations || []\n  const itemRelations = relations.map(relation => findItem(relation, items)).filter(item => item !== undefined) as Items\n  const treeItemRelations = itemRelations.filter(item => item !== undefined).map(item => createTreeItem(item, items))\n  return { ...item, relations: treeItemRelations }\n}\n\nexport default createTreeItem\n","import { Data, Id, Index } from \"./types/types\"\nimport { ItemEventType } from \"./types/Item\"\nimport TreeItem from \"./types/TreeItem\"\nimport crud from \"./crud\"\nimport createEvent from \"./createEvent\"\nimport createTreeItem from \"./tree/createTreeItem\"\n\nexport const init = async () : Promise<TreeItem> => {\n  const items = await crud.index()\n  const rootItem = items.find(item => (item as TreeItem).isRoot === true)\n  const root = rootItem != null ? rootItem : await crud.create(true)\n  return createTreeItem(root, items)\n}\n\nexport const createAndAdd = async (data: Data, parentId: Id) => {\n\n  const item = await crud.create()\n  const id = item.state.ids && item.state.ids[0]\n  if (!id) return await init()\n\n  const eventDataSet = createEvent(ItemEventType.DataSet, { data })\n  await crud.update(id, eventDataSet)\n\n  const eventRelationAdd = createEvent(ItemEventType.RelationAdd, { id })\n  await crud.update(parentId, eventRelationAdd)\n\n  return await init()\n}\n\nexport const update = async (id: Id, data: Data) => {\n\n  const event = createEvent(ItemEventType.DataSet, { data })\n  await crud.update(id, event)\n\n  return await init()\n}\n\nexport const remove = async (id: Id, parentId: Id, index: Index) => {\n\n  const event = createEvent(ItemEventType.RelationRemove, { id, index })\n  await crud.update(parentId, event)\n\n  return await init()\n}\n\nexport const move = async (id: Id, oldParentId: Id, oldIndex: Index, parentId: Id, index: Index) => {\n\n  const eventRelationRemove = createEvent(ItemEventType.RelationRemove, { id, index: oldIndex })\n  await crud.update(oldParentId, eventRelationRemove)\n\n  const eventRelationAdd = createEvent(ItemEventType.RelationAdd, { id, index })\n  await crud.update(parentId, eventRelationAdd)\n\n  return await init()\n}\n","import { useState, useEffect } from \"react\"\nimport { Data, Id, Index } from \"../treey/src/types/types\"\nimport { init, createAndAdd, update, remove, move } from \"../treey/src/treey\"\n\nexport interface Treey {\n  createAndAdd (data: Data, parentId: Id) : void\n  update (id: Id, data: Data) : void\n  remove (id: Id, parentId: Id, index: Index) : void\n  move (id: Id, oldParentId: Id, oldIndex: Index, parentId: Id, index: Index) : void\n}\n\nconst useTreey = () => {\n  const [tree, setTree] = useState()\n  useEffect(() => {\n    (async () => {\n      const tree = await init()\n      setTree(tree)\n    })()\n  }, [])\n  const actions: Treey = {\n    createAndAdd: async (data: Data, parentId: Id) => {\n      const tree = await createAndAdd(data, parentId)\n      setTree(tree)\n    },\n    update: async (id: Id, data: Data) => {\n      const tree = await update(id, data)\n      setTree(tree)\n    },\n    remove: async (id: Id, parentId: Id, index: Index) => {\n      const tree = await remove(parentId, id, index)\n      setTree(tree)\n    },\n    move: async (id: Id, oldParentId: Id, oldIndex: Index, parentId: Id, index: Index) => {\n      const tree = await move(id, oldParentId, oldIndex, parentId, index)\n      setTree(tree)\n    }\n  }\n  return [tree, actions]\n}\n\nexport default useTreey\n","import React from \"react\"\n\nimport \"../styles/Header.sass\"\n\nconst Header: React.SFC = () => {\n  const src = process.env.PUBLIC_URL + \"/images/logo_64x64.png\"\n  return (\n    <header className=\"Header\">\n      <h1><img src={ src } width=\"32px\" height=\"32px\" alt=\"木\" /></h1>\n      <h2>treey</h2>\n    </header>\n  )\n}\n\nexport default Header\n","import { useEffect } from \"react\"\n\nconst useEscListener = (action: () => void) => {\n\n  useEffect(() => {\n    const handler = (event: KeyboardEvent) => {\n      if (event.keyCode === 27) {\n        event.preventDefault()\n        action()\n      }\n    }\n    window.addEventListener(\"keydown\", handler)\n    return () => window.removeEventListener(\"keydown\", handler)\n  }, [action])\n}\n\nexport default useEscListener\n","import React from \"react\"\n\nimport \"../styles/Button.sass\"\n\ninterface Props {\n  type: \"ADD\" | \"EDIT\" | \"DELETE\"\n  onClick?: () => void\n}\n\nconst Button: React.FC<Props> = ({ type, onClick }) => {\n  const className = \"Button \" + type\n  return (\n    <button className={ className } onClick={ onClick } title={ type }>{ type }</button>\n  )\n}\n\nexport default Button\n","import React, { useState, FormEvent } from \"react\"\nimport TreeItem from \"../treey/src/types/TreeItem\"\nimport { Id, Index } from \"../treey/src/types/types\"\nimport { Treey } from \"../hooks/useTreey\"\nimport useEscListener from \"../hooks/useEscListener\"\nimport Items from \"./Items\"\nimport Button from \"./Button\"\n\nimport \"../styles/Item.sass\"\n\ninterface Props {\n  parentId: Id\n  index: Index\n  item: TreeItem\n  treey: Treey\n}\n\nconst Item: React.FC<Props> = ({ parentId, index, item, treey }) => {\n\n  const data = item.state && item.state.data\n  const id = item.state.ids && item.state.ids[0]\n\n  const [isEditing, setIsEditing] = useState(false)\n  const [value, setValue] = useState(data)\n  const [isOpened, setIsOpened] = useState(false)\n\n  const showItem = !isEditing\n  const showForm = isEditing\n  const showItems = id && isOpened\n\n  const onClick= () => setIsOpened(!isOpened)\n  const onClickEdit = () => setIsEditing(true)\n  const onClickDelete = async () => {\n    const id = item.state.ids && item.state.ids[0]\n    if (id == null) return\n    await treey.remove(id, parentId, index)\n  }\n  const onSubmit = async (event: FormEvent) => {\n    event.preventDefault()\n    const id = item.state.ids && item.state.ids[0]\n    if (id == null) return\n    await treey.update(id, value)\n    setIsEditing(false)\n  }\n  const onChange = (event: FormEvent) => {\n    const value = (event.target as HTMLInputElement).value\n    setValue(value)\n  }\n\n  useEscListener(() => setIsEditing(false))\n\n  return (\n    <div className=\"Item\">\n      { showItem &&\n        <div className=\"ItemBody\">\n          <span onClick={ onClick }>{ data }</span>\n          <Button type=\"EDIT\" onClick={ onClickEdit } />\n          <Button type=\"DELETE\" onClick={ onClickDelete } />\n        </div>\n      }\n      { showForm &&\n        <form onSubmit={ onSubmit }>\n          <input type=\"text\" onChange={ onChange } value={ value } autoFocus />\n          <Button type=\"EDIT\" />\n        </form>\n      }\n      { id && showItems &&\n        <Items parentId={ id } items={ item.relations } treey={ treey } />\n      }\n    </div>\n  )\n}\n\nexport default Item\n","import React, { useState, FormEvent } from \"react\"\nimport { Id } from \"../treey/src/types/types\"\nimport { Treey } from \"../hooks/useTreey\"\nimport useEscListener from \"../hooks/useEscListener\"\nimport Button from \"./Button\"\n\nimport \"../styles/FormAdd.sass\"\n\ninterface Props {\n  parentId: Id\n  treey: Treey\n}\n\nconst FormAdd: React.FC<Props> = ({ parentId, treey }) => {\n\n  const [isAdding, setIsAdding] = useState(false)\n  const [value, setValue] = useState(\"\")\n\n  const showButton = isAdding === false\n  const showForm = !showButton\n\n  const onClick = () => setIsAdding(true)\n  const onSubmit = async (event: FormEvent) => {\n    event.preventDefault()\n    await treey.createAndAdd(value, parentId)\n    setIsAdding(false)\n    setValue(\"\")\n  }\n  const onChange = (event: FormEvent) => {\n    const value = (event.target as HTMLInputElement).value\n    setValue(value)\n  }\n\n  useEscListener(() => setIsAdding(false))\n\n  return (\n    <div className=\"FormAdd\">\n      { showButton &&\n        <Button onClick={ onClick } type=\"ADD\" />\n      }\n      { showForm &&\n        <form onSubmit={ onSubmit }>\n          <input type=\"text\" onChange={ onChange } value={ value } autoFocus />\n          <Button type=\"ADD\" />\n        </form>\n      }\n    </div>\n  )\n}\n\nexport default FormAdd\n","import React from \"react\"\nimport TreeItem, { TreeItems } from \"../treey/src/types/TreeItem\"\nimport { Id } from \"../treey/src/types/types\"\nimport Item from \"./Item\"\nimport FormAdd from \"./FormAdd\"\nimport { Treey } from \"../hooks/useTreey\"\n\nimport \"../styles/Items.sass\"\n\ninterface Props {\n  parentId: Id\n  items: TreeItems\n  treey: Treey\n}\n\nconst Items: React.FC<Props> = ({ parentId, items, treey }) => {\n\n  const showItems = items.length > 0\n\n  return (\n    <div className=\"Items\">\n      { showItems &&\n        <ul>\n          { items.map((item: TreeItem, index: number) => {\n              const name = item.state.ids && item.state.ids[0].name\n              return (\n                <li key={ name }>\n                  <Item parentId={ parentId } index={ index } item={ item } treey={ treey } />\n                </li>\n              )\n            })\n          }\n        </ul>\n      }\n      <FormAdd parentId={ parentId } treey={ treey }/>\n\n    </div>\n  )\n}\n\nexport default Items\n","import React from \"react\"\nimport useTreey from \"./hooks/useTreey\"\nimport Header from \"./components/Header\"\nimport Items from \"./components/Items\"\n\nimport \"./styles/App.sass\"\n\nconst App: React.FC = () => {\n\n  const [tree, treey] = useTreey()\n  const isLoading = tree === undefined\n  const hasTree = !isLoading\n\n  const name = tree && tree.id\n  const items = tree && tree.relations\n  const id = tree && tree.state.ids && tree.state.ids[0]\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <main>\n      { isLoading &&\n        <p>is loading&hellip;</p>\n      }\n      { hasTree &&\n        <>\n          <h1 className=\"RootItem\"><span>your Root UUID: </span>{ name }</h1>\n          <div className=\"ItemsWrap\">\n            <Items parentId={ id } items={ items } treey={ treey } />\n          </div>\n        </>\n      }\n      </main>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nimport \"./styles/screen.sass\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}