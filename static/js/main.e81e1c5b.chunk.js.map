{"version":3,"sources":["contexts/AlertsContext.ts","components/AlertsProvider.tsx","contexts/TreeyContext.ts","hooks/useTreey.ts","utils/treeItemUtils.ts","components/TreeyProvider.tsx","contexts/UIContext.ts","utils/tree/pruneTree.ts","utils/tree/flattenTree.ts","utils/tree/appendAddToSiblings.ts","hooks/usePathState.ts","hooks/usePathsState.ts","components/UIProvider.tsx","utils/basepath.ts","components/Header.tsx","components/Spinner.tsx","components/Alert.tsx","utils/last.ts","components/Alerts.tsx","components/ItemData.tsx","components/Button.tsx","utils/defer.ts","components/ItemBody.tsx","components/ItemDnD.tsx","components/ItemForm.tsx","components/Item.tsx","components/FormAdd.tsx","components/Items.tsx","components/KeyboardEvents.tsx","components/MouseEvents.tsx","components/Tree.tsx","pages/Home.tsx","components/ItemOverview.tsx","pages/Item.tsx","pages/404.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["value","alerts","show","Error","AlertsContext","createContext","AlertsProvider","children","useState","setAlerts","message","type","alert","concat","pushAlerts","Provider","tree","undefined","treey","TreeyContext","init","read","createAndAdd","update","remove","move","useTreey","setTree","useEffect","isUnmounted","a","initialize","actions","id","data","parentId","index","oldParentId","oldIndex","utils","createFullName","parseFullName","getId","item","state","ids","getData","stringifyData","JSON","stringify","parseData","str","parse","err","createPathAdd","path","parsePath","split","map","filter","isPathAdd","slice","abbr","createMessage","strs","join","TreeyProvider","useContext","unimplemented","isShownForm","setShownForm","unsetShownForm","isOpen","setOpen","unsetOpen","isDragging","setDragging","unsetDragging","active","isActive","setActive","changeActive","clear","UIContext","pruneTree","prunedTree","forEach","treeItem","treeItemIsOpen","includes","hasRelations","relations","length","newTreeItem","push","mapTreeItem","parents","createPath","relation","flat","Infinity","flattenTree","appendAddToSiblings","parentPath","newTree","basePath","treeItemAdd","events","name","isCyclic","isKnown","isDestroyed","usePathState","setPath","p","usePathsState","paths","setPaths","is","UIProvider","open","unsetActive","direction","treeWithAdd","rootPath","arr","flattenedArr","items","setFirstItemActive","findIndex","followingIndex","l","i","pathAdd","basepath","window","location","host","Header","className","to","src","process","width","height","alt","Spinner","Alert","classNames","isWarning","isError","cs","last","Alerts","shouldShowAlert","setShouldShowAlert","timer","useRef","clearTimer","clearTimeout","current","setTimeout","showAlert","ItemData","isUrl","test","href","onClick","event","stopPropagation","Button","onFocus","style","backgroundImage","typeToImageMap","title","defer","func","ItemBody","parent","isOver","onDoubleClick","onClickAdd","onClickEdit","onClickDelete","dropId","isDraggingGlobal","itemIsActive","isDraggingUIContext","isHovered","setIsHovered","useDrag","begin","end","collect","monitor","drag","showAddButton","showButtons","dataString","linkTo","useDrop","accept","drop","draggableData","shallow","canDrop","isOverDeep","isDisabled","showDrop","showDnDPlaceHolderChild","spanElement","focus","ref","onMouseEnter","onMouseLeave","tabIndex","isShown","ItemDnD","hoverRegion","setHoverRegion","getItem","hover","clientOffset","getClientOffset","clientRect","getBoundingClientRect","y","top","h","didDrop","newIndex","showPlaceholder","showPrePlaceholder","showPostPlaceholder","ItemForm","submit","initialValue","setValue","onSubmit","preventDefault","onChange","target","elem","Item","itemIsOpen","itemIsDragging","isEditing","showItem","showForm","showItems","previousPath","oldPath","trimmedValue","trim","newData","isEqual","isHidden","selection","getSelection","toString","FormAdd","Items","key","KeyboardEvents","canOpen","compareIds","id1","protocol","getRelationFromItemById","find","getItemFromPath","handler","keyCode","shiftKey","addEventListener","removeEventListener","MouseEvents","Tree","showTree","DndProvider","backend","HTML5Backend","PageHome","showSpinner","ItemOverview","fullName","setItem","notFound","setNotFound","invalidFullName","setInvalidFullName","isLoading","itemName","reverse","payload","showPayload","datetime","String","PageItem","Page404","App","default","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e81e1c5b.chunk.js","sourcesContent":["import { createContext } from \"react\"\n\ntype Value = {\n  alerts: Alerts\n  show (message: string, type?: AlertType) : void\n}\n\nconst unimplemented = () => { throw new Error (\"UIContext not implemented\") }\n\nconst value = {\n  alerts: [],\n  show: unimplemented,\n} as Value\n\nconst AlertsContext = createContext(value)\n\nexport default AlertsContext\n","import React, { ReactNode, useState } from \"react\"\nimport AlertsContext from '../contexts/AlertsContext'\n\ntype Props = {\n  children: ReactNode\n}\n\nconst AlertsProvider: React.FC<Props> = ({ children }) => {\n\n  const [alerts, setAlerts] = useState<Alerts>([])\n  const pushAlerts = (alert: Alert) => setAlerts(alerts.concat(alert))\n  const show = (message: string, type?: AlertType) => {\n    const alert = { message, type }\n    pushAlerts(alert)\n  }\n  const value = {\n    alerts,\n    show\n  }\n\n  return (\n    <AlertsContext.Provider value={ value }>\n      { children }\n    </AlertsContext.Provider>\n  )\n}\n\nexport default AlertsProvider\n","import { createContext } from \"react\"\n\ntype Value = {\n  tree?: TreeItem\n  treey?: Treey\n}\n\nconst value = {\n  tree: undefined,\n  treey: undefined\n} as Value\n\nconst TreeyContext = createContext(value)\n\nexport default TreeyContext\n","import { useState, useEffect } from \"react\"\nimport treey from \"treey\"\nconst { treey: { init, read, createAndAdd, update, remove, move } } = treey\n\nconst useTreey = () => {\n  const [tree, setTree] = useState()\n\n  useEffect(() => {\n\n    let isUnmounted = false\n\n    const initialize = async () => {\n      const tree = await init()\n      if (isUnmounted) return\n      setTree(tree)\n    }\n    initialize()\n\n    return () => {\n      isUnmounted = true\n    }\n  }, [])\n\n  const actions: Treey = {\n    read: async (id: Id) => {\n      return await read(id)\n    },\n    createAndAdd: async (data: Data, parentId: Id) => {\n      const tree = await createAndAdd(data, parentId)\n      setTree(tree)\n    },\n    update: async (id: Id, data: Data) => {\n      const tree = await update(id, data)\n      setTree(tree)\n    },\n    remove: async (id: Id, parentId: Id, index?: Index) => {\n      const tree = await remove(id, parentId, index)\n      setTree(tree)\n    },\n    move: async (id: Id, oldParentId: Id, parentId: Id, oldIndex?: Index, index?: Index) => {\n      const tree = await move(id, oldParentId, parentId, oldIndex, index)\n      setTree(tree)\n    }\n  }\n  return [tree, actions] as const\n}\n\nexport default useTreey\n","import treey from \"treey\"\nconst { utils: { createFullName, parseFullName } } = treey\n\nexport { createFullName }\nexport { parseFullName }\n\nexport const getId = (item: TreeItem) : Id | undefined => item.state.ids?.[0]\nexport const getData = (item: TreeItem) : Data => item.state?.data\n\nexport const stringifyData = (data: Data) : string => {\n  if (typeof data === \"string\") return data\n  return JSON.stringify(data, undefined, 1)\n}\nexport const parseData = (str: string) : Data => {\n  try {\n    return JSON.parse(str)\n  } catch (err) {\n    return str\n  }\n}\n\nexport const createPath = (ids: Ids) => ids.map(id => createFullName(id)).join(\"/\")\nexport const createPathAdd = (path: Path) => `${ path }/add`\nexport const parsePath = (path: Path) : Ids => {\n  const strs = path.split(\"/\")\n  const ids = strs.map(id => parseFullName(id))\n  return ids.filter((id: Id | undefined) : id is Id => id !== undefined)\n}\nexport const isPathAdd = (path: Path) : boolean => {\n  return path.slice(-4) === \"/add\"\n}\nexport const getPathFromPathAdd = (path: Path) : Path => {\n  return isPathAdd(path) ? path.slice(0, -4) : path\n}\nexport const getItemFromPath = (tree: TreeItem, path: Path) : TreeItem | undefined => {\n  const compareIds = (id: Id | undefined, id1: Id | undefined) => {\n    if (id === undefined || id1 === undefined) return false\n    return id.name === id1.name && id.protocol === id1.protocol\n  }\n  const getRelationFromItemById = (treeItem: TreeItem, id: Id) : TreeItem | undefined => {\n    return treeItem.relations.find(item => compareIds(getId(item), id))\n  }\n  let ids = parsePath(path)\n  if (compareIds(getId(tree), ids[0]) === false) return undefined\n  ids = ids.slice(1)\n  let item: TreeItem | undefined = tree\n  while (ids.length > 0) {\n    const id = ids[0]\n    ids = ids.slice(1)\n    item = getRelationFromItemById(item, id)\n    if (item === undefined) return undefined\n  }\n  return item\n}\n","import React, { ReactNode, useContext } from \"react\"\nimport AlertsContext from '../contexts/AlertsContext'\nimport TreeyContext from '../contexts/TreeyContext'\nimport useTreey from \"../hooks/useTreey\"\nimport { createFullName } from \"../utils/treeItemUtils\"\n\ntype Props = {\n  children: ReactNode\n}\n\nconst abbr = (id: Id) => createFullName(id).slice(0, 7)\nconst createMessage = (...strs: string[]) => strs.join(\" \")\n\nconst TreeyProvider: React.FC<Props> = ({ children }) => {\n\n  const [tree, { read, createAndAdd, update, remove, move }] = useTreey()\n  const { show } = useContext(AlertsContext)\n\n  const actions: Treey = {\n    read,\n    createAndAdd: async (data: Data, parentId: Id) => {\n      await createAndAdd(data, parentId)\n      show(createMessage(\"createAndAdd\", abbr(parentId)))\n    },\n    update: async (id: Id, data: Data) => {\n      await update(id, data)\n      show(createMessage(\"update\", abbr(id)))\n    },\n    remove: async (id: Id, parentId: Id, index?: Index) => {\n      await remove(id, parentId, index)\n      show(createMessage(\"remove\", abbr(id), abbr(parentId)))\n    },\n    move: async (id: Id, oldParentId: Id, parentId: Id, oldIndex?: Index, index?: Index) => {\n      await move(id, oldParentId, parentId, oldIndex, index)\n      show(createMessage(\"move\", abbr(id), abbr(oldParentId), abbr(parentId)))\n    }\n  }\n\n  const value = { tree, treey: actions }\n\n  return (\n    <TreeyContext.Provider value={ value }>\n      { children }\n    </TreeyContext.Provider>\n  )\n}\n\nexport default TreeyProvider\n","import { createContext } from \"react\"\n\ntype Value = {\n  isShownForm (path?: Path) : boolean\n  setShownForm (path: Path) : void\n  unsetShownForm () : void\n  isOpen (path: Path) : boolean\n  setOpen (path: Path) : void\n  unsetOpen (path: Path) : void\n  isDragging (path?: Path) : boolean\n  setDragging (path: Path) : void\n  unsetDragging () : void\n  active: Path | undefined\n  isActive (path?: Path) : boolean\n  setActive (path: Path) : void\n  changeActive (direction?: Direction) : void\n  clear (path: Path) : void\n}\n\nconst unimplemented = () => { throw new Error (\"UIContext not implemented\") }\n\nconst value = {\n  isShownForm: unimplemented,\n  setShownForm: unimplemented,\n  unsetShownForm: unimplemented,\n  isOpen: unimplemented,\n  setOpen: unimplemented,\n  unsetOpen: unimplemented,\n  isDragging: unimplemented,\n  setDragging: unimplemented,\n  unsetDragging: unimplemented,\n  active: undefined,\n  isActive: unimplemented,\n  setActive: unimplemented,\n  changeActive: unimplemented,\n  clear: unimplemented\n} as Value\n\nconst UIContext = createContext(value)\n\nexport default UIContext\n","const pruneTree = (tree: TreeItems, isOpen: Paths) : TreeItems => {\n  const prunedTree: TreeItems = []\n  tree.forEach(treeItem => {\n    const treeItemIsOpen = isOpen.includes(treeItem.path!)\n    const hasRelations = treeItem.relations.length > 1\n    const shouldPrune = treeItemIsOpen && hasRelations\n    const relations = shouldPrune ? pruneTree(treeItem.relations, isOpen) : []\n    const newTreeItem = { ...treeItem, relations }\n    prunedTree.push(newTreeItem)\n  })\n  return prunedTree\n}\nexport default pruneTree\n","import { getId, createPath } from \"../treeItemUtils\"\n\nconst mapTreeItem = (treeItem: TreeItem, parents: Ids) : TreeItems => {\n  const id = getId(treeItem)\n  const ids = id !== undefined ? parents.concat(id) : parents\n  const path = treeItem.path ? treeItem.path : createPath(ids)\n  const newTreeItem = { ...treeItem, path }\n  return [newTreeItem, newTreeItem.relations.map(relation => mapTreeItem(relation, ids))].flat(Infinity) as TreeItems\n}\nconst flattenTree = (tree: TreeItems) : TreeItems => {\n  return tree.map(treeItem => mapTreeItem(treeItem, [])).flat(Infinity) as TreeItems\n}\nexport default flattenTree\n","import { getId, createFullName, createPathAdd } from \"../treeItemUtils\"\n\nconst appendAddToSiblings = (tree: TreeItems, parentPath?: Path) : TreeItems => {\n  const newTree: TreeItems = []\n  tree.forEach((treeItem, index) => {\n    const basePath = parentPath ? `${ parentPath }/${ index }/` : \"\"\n    const path = `${ basePath }${ createFullName(getId(treeItem)!) }`\n    const relations = appendAddToSiblings(treeItem.relations, path)\n    const treeItemAdd: TreeItem = {\n      state: {},\n      events: [],\n      relations: [],\n      name: \"add\",\n      isCyclic: false,\n      isKnown: true,\n      isDestroyed: false,\n      path: createPathAdd(path)\n    }\n    relations.push(treeItemAdd)\n    const newTreeItem = { ...treeItem, relations, path }\n    newTree.push(newTreeItem)\n  })\n  return newTree\n}\nexport default appendAddToSiblings\n","import { useState } from \"react\"\n\ntype UsePathState = [\n  Path | undefined,\n  (p?: Path) => boolean,\n  (p: Path) => void,\n  () => void\n]\n\nconst usePathState = () : UsePathState => {\n  const [path, setPath] = useState<Path>()\n  const is = (p?: Path) => p === undefined ? path !== undefined : p === path\n  const set = (p: Path) => setPath(p)\n  const unset = () => setPath(undefined)\n  return [path, is, set, unset]\n}\nexport default usePathState\n","import { useState } from \"react\"\n\ntype UsePathsState = [\n  Paths,\n  (p: Path) => boolean,\n  (p: Path) => void,\n  (p: Path) => void\n]\n\nconst usePathsState = () : UsePathsState => {\n  const [paths, setPaths] = useState<Paths>([])\n  const is = (p: Path) => paths.includes(p)\n  const set = (p: Path) => {\n    if (is(p)) return\n    setPaths(paths.concat(p))\n  }\n  const unset = (p: Path) => {\n    setPaths(paths.filter(path => path !== p))\n  }\n  return [paths, is, set, unset]\n}\nexport default usePathsState\n","import React, { useContext, ReactNode } from \"react\"\nimport UIContext from '../contexts/UIContext'\nimport TreeyContext from '../contexts/TreeyContext'\nimport pruneTree from \"../utils/tree/pruneTree\"\nimport flattenTree from \"../utils/tree/flattenTree\"\nimport appendAddToSiblings from \"../utils/tree/appendAddToSiblings\"\nimport { getId, createFullName, createPathAdd } from \"../utils/treeItemUtils\"\nimport usePathState from \"../hooks/usePathState\"\nimport usePathsState from \"../hooks/usePathsState\"\n\ntype Props = {\n  children: ReactNode\n}\n\nconst UIProvider: React.FC<Props> = ({ children }) => {\n\n  // shown form\n  const [, isShownForm, setShownForm, unsetShownForm] = usePathState()\n\n  // is opened\n  const [open, isOpen, setOpen, unsetOpen] = usePathsState()\n\n  // is dragging\n  const [, isDragging, setDragging, unsetDragging] = usePathState()\n\n  // is active\n  const [active, isActive, setActive, unsetActive] = usePathState()\n\n  const { tree } = useContext(TreeyContext)\n  const changeActive = (direction: Direction = \"next\") => {\n\n    if (tree === undefined) return\n\n    const treeWithAdd = appendAddToSiblings([tree])\n    const rootPath = createFullName(getId(tree)!)\n    const arr = [rootPath].concat(open)\n\n    const prunedTree = pruneTree(treeWithAdd, arr)\n    const flattenedArr = flattenTree(prunedTree)\n    // remove root item\n    const items = flattenedArr.slice(1)\n\n    const setFirstItemActive = () => {\n      const path = items[0].path!\n      setActive(path)\n    }\n\n    if (isActive() === false) {\n      setFirstItemActive()\n    } else {\n      const index = items.findIndex(item => isActive(item.path))\n      if (index === -1) return setFirstItemActive()\n      const followingIndex = direction === \"next\" ? index + 1 : index - 1\n      const l = items.length - 1\n      const i =\n        followingIndex > l ? 0 :\n        followingIndex < 0 ? l :\n        followingIndex\n      const path = items[i].path!\n      setActive(path)\n    }\n  }\n\n  const clear = (path: Path) => {\n    const pathAdd = createPathAdd(path)\n    if (isShownForm(path) || isShownForm(pathAdd)) unsetShownForm()\n    if (isActive(path) || isShownForm(pathAdd)) unsetActive()\n    if (isDragging(path)) unsetDragging()\n    if (isOpen(path)) unsetOpen(path)\n  }\n\n  const value = {\n    isShownForm,\n    setShownForm,\n    unsetShownForm,\n    isOpen,\n    setOpen,\n    unsetOpen,\n    isDragging,\n    setDragging,\n    unsetDragging,\n    active,\n    isActive,\n    setActive,\n    changeActive,\n    clear\n  }\n\n  return (\n    <UIContext.Provider value={ value }>\n      { children }\n    </UIContext.Provider>\n  )\n}\n\nexport default UIProvider\n","const basepath = window.location.host === \"gilleswittenberg.github.io\" ? \"/treey-react/\" : \"/\"\nexport default basepath\n","import React from \"react\"\nimport { Link } from \"@reach/router\"\nimport basepath from \"../utils/basepath\"\n\nimport \"../styles/Header.sass\"\n\nconst Header: React.SFC = () => {\n  const src = process.env.PUBLIC_URL + \"/images/logo_64x64.png\"\n  return (\n    <header className=\"Header\">\n      <Link to={ basepath }>\n        <h1><img src={ src } width=\"32px\" height=\"32px\" alt=\"木\" /></h1>\n        <h2>treey</h2>\n      </Link>\n    </header>\n  )\n}\n\nexport default Header\n","import React from \"react\"\n\nimport \"../styles/Spinner.sass\"\n\nconst Spinner: React.FC = () => (<p className=\"Spinner\">is loading&hellip;</p>)\n\nexport default Spinner\n","import React from \"react\"\nimport cs from \"classnames\"\n\nimport \"../styles/Alert.sass\"\n\ntype Props = {\n  message: string\n  type?: AlertType\n}\n\nconst Alert: React.FC<Props> = ({ message, type = \"message\" }) => {\n\n  const classNames = {\n    Alert,\n    isWarning: type === \"warning\",\n    isError: type === \"error\"\n  }\n\n  return (\n    <div className={ cs(classNames) }>\n      <p>{ message }</p>\n    </div>\n  )\n}\n\nexport default Alert\n","const last = <T>(arr: T[]) => arr[arr.length - 1]\nexport default last\n","import React, { useContext, useState, useRef, useEffect } from \"react\"\nimport AlertsContext from \"../contexts/AlertsContext\"\nimport Alert from \"./Alert\"\nimport last from \"../utils/last\"\n\nimport \"../styles/Alerts.sass\"\n\ntype Timer = number\n\nconst Alerts: React.FC = () => {\n\n  const { alerts } = useContext(AlertsContext)\n  const alert = last(alerts)\n  const [shouldShowAlert, setShouldShowAlert] = useState(false)\n  const timer = useRef<Timer>()\n  const clearTimer = () => window.clearTimeout(timer.current)\n  const t = 3000\n\n  useEffect(() => {\n    setShouldShowAlert(true)\n    clearTimer()\n    timer.current = window.setTimeout(() => setShouldShowAlert(false), t)\n    return clearTimer\n  }, [alerts])\n\n  const showAlert = alert !== undefined && shouldShowAlert\n\n  return (\n    <div className=\"Alerts\">\n      { showAlert &&\n        <Alert message={ alert!.message } type={ alert!.type } />\n      }\n    </div>\n  )\n}\n\nexport default Alerts\n","import React from \"react\"\n\ntype Props = {\n  data: Data\n}\n\nconst ItemData: React.FC<Props> = ({ data }) => {\n  const isUrl = /^https?:\\/\\//.test(data)\n  return (\n    <span className=\"ItemData\">\n      { isUrl ? <a href={ data } onClick={ event => event.stopPropagation() }>{ data }</a> : data }\n    </span>\n  )\n}\n\nexport default ItemData\n","import React from \"react\"\n\nimport \"../styles/Button.sass\"\n\ntype ButtonType = \"ADD\" | \"EDIT\" | \"DELETE\"\n\ntype Props = {\n  type: ButtonType\n  onClick?: () => void\n  onFocus?: () => void\n}\n\nconst typeToImageMap = (type: ButtonType) : string => {\n  switch (type) {\n  case \"ADD\": return \"add_64x64.png\"\n  case \"EDIT\": return \"submit_64x64.png\"\n  case \"DELETE\": return \"remove_64x64.png\"\n  }\n}\n\nconst Button: React.FC<Props> = ({ type, onClick, onFocus }) => {\n  const className = \"Button \" + type\n  const backgroundImage = `url(\"${ process.env.PUBLIC_URL }/images/${ typeToImageMap(type) }\")`\n  const style = { backgroundImage }\n  return (\n    <button className={ className } style={ style } onClick={ onClick } onFocus={ onFocus } title={ type }>{ type }</button>\n  )\n}\n\nexport default Button\n","const defer = (func: () => unknown) => { \n    window.setTimeout(func, 1)\n}\nexport default defer","import React, { useContext, useState, useRef, useEffect } from \"react\"\nimport { useDrag, useDrop } from \"react-dnd\"\nimport { Link } from \"@reach/router\"\nimport cs from \"classnames\"\nimport TreeyContext from \"../contexts/TreeyContext\"\nimport UIContext from \"../contexts/UIContext\"\nimport ItemData from \"./ItemData\"\nimport Button from \"./Button\"\nimport basepath from \"../utils/basepath\"\nimport { getId, getData, stringifyData } from \"../utils/treeItemUtils\"\nimport defer from \"../utils/defer\"\n\ntype Props = {\n  path: Path\n  parent: Id\n  index: Index\n  item: TreeItem\n  isOver: boolean\n  onClick: () => void\n  onDoubleClick: () => void\n  onClickAdd: () => void\n  onClickEdit: () => void\n  onClickDelete: () => void\n}\n\nconst ItemBody: React.FC<Props> = ({ path, parent, index, item, isOver, onClick, onDoubleClick, onClickAdd, onClickEdit, onClickDelete }) => {\n\n  const id = getId(item)\n  const dropId = id\n  const { isDragging: isDraggingGlobal, setDragging, unsetDragging, setOpen, isActive: itemIsActive, setActive } = useContext(UIContext)\n  const { treey } = useContext(TreeyContext)\n  const isDraggingUIContext = isDraggingGlobal()\n  const isActive = itemIsActive(path)\n\n  const [isHovered, setIsHovered] = useState(false)\n  const onMouseEnter = () => setIsHovered(true)\n  const onMouseLeave = () => setIsHovered(false)\n\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: \"item\", parent, index, id, path },\n    begin: () => defer(() => setDragging(path)),\n    end: () => unsetDragging(),\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  })\n\n  const hasRelations = item.relations.length > 0\n  const showAddButton = !hasRelations\n  const showButtons = isHovered && !isDragging && !isDraggingUIContext\n  const data = getData(item)\n  const dataString = stringifyData(data)\n  const linkTo = `${ basepath }item/${ item.name }`\n\n  const [{ isOver: isOverDeep }, drop] = useDrop({\n    accept: \"item\",\n    drop: async (item, monitor) => {\n\n      const draggableData = item as DraggableData\n      const id = draggableData.id\n      const oldParentId = draggableData.parent\n      const oldIndex = draggableData.index\n      const parentId = dropId\n      if (parentId == null) return\n\n      // guard for null treey context\n      if (treey == null) return\n      await treey.move(id, oldParentId, parentId, oldIndex)\n      setOpen(path)\n    },\n    collect: monitor => ({\n      isOver: monitor.isOver({ shallow: true }),\n      canDrop: monitor.canDrop()\n    })\n  })\n\n  const isDisabled = isDragging\n  const showDrop = (isOver && !hasRelations) || isOverDeep\n  const showDnDPlaceHolderChild = isOverDeep\n\n  const spanElement = useRef<HTMLElement>(null)\n  useEffect(() => {\n    if (spanElement.current == null) return\n    if (isActive === false) return\n    spanElement.current.focus()\n  }, [isActive, spanElement])\n\n  const onFocus = () => {\n    setActive(path)\n  }\n\n  return (\n    <div className={ cs(\"ItemBodyWrap\", { isActive, isDisabled }) }>\n      <div\n        ref={ drag }\n        className={ cs(\"ItemBody\", { showAddButton, showButtons, showDrop }) }\n        onMouseEnter={ onMouseEnter }\n        onMouseLeave={ onMouseLeave }\n        >\n        <span\n          ref={ spanElement }\n          onClick={ onClick }\n          onDoubleClick={ onDoubleClick }\n          tabIndex={ 0 }\n          onFocus={ onFocus }\n          >\n          <ItemData data={ dataString } />\n          <Link to={ linkTo } className=\"info\">ⓘ</Link>\n        </span>\n        { showDrop &&\n          <div ref={ drop } className=\"ItemAddDrop\">\n            <Button type=\"ADD\" />\n          </div>\n        }\n        { showAddButton &&\n          <Button type=\"ADD\" onClick={ onClickAdd } />\n        }\n        <Button type=\"EDIT\" onClick={ onClickEdit } />\n        <Button type=\"DELETE\" onClick={ onClickDelete } />\n      </div>\n      <div className={ cs(\"DnDPlaceholder\", \"DnDPlaceholderChild\", { isShown: showDnDPlaceHolderChild }) }><div></div></div>\n    </div>\n  )\n}\n\nexport default ItemBody\n","import React, { useContext, useRef, useState } from \"react\"\nimport { useDrop } from 'react-dnd'\nimport TreeyContext from \"../contexts/TreeyContext\"\nimport ItemBody from \"./ItemBody\"\nimport cs from \"classnames\"\n\nimport \"../styles/ItemDnD.sass\"\n\ntype Props = {\n  parent: Id\n  path: Path\n  index: Index\n  item: TreeItem\n  onClick: () => void\n  onDoubleClick: () => void\n  onClickAdd: () => void\n  onClickEdit: () => void\n  onClickDelete: () => void\n}\n\ntype HoverRegion = \"top\" | \"bottom\"\n\nconst ItemDnD: React.FC<Props> = ({ parent, path, index, item, onClick, onDoubleClick, onClickAdd, onClickEdit, onClickDelete }) => {\n\n  const { treey } = useContext(TreeyContext)\n  const ref = useRef<HTMLDivElement>(null)\n  const [hoverRegion, setHoverRegion] = useState<HoverRegion>()\n\n  const [{ canDrop, isOver }, drop] = useDrop({\n    accept: \"item\",\n    canDrop: (item, monitor) => monitor.getItem().path !== path,\n    hover: (item, monitor) => {\n      const clientOffset = monitor.getClientOffset()\n      const clientRect = ref && ref.current && ref.current.getBoundingClientRect()\n      if (clientRect && clientOffset) {\n        const itemHeight = 44\n        const verticalSpacing = 6\n        const h = itemHeight + 2 * verticalSpacing\n        const y = clientOffset.y - clientRect.top\n        const newHoverRegion = y <= h / 2 ? \"top\" : \"bottom\"\n        setHoverRegion(newHoverRegion)\n      }\n    },\n    drop: async (item, monitor) => {\n\n      // guard for nested drop targets\n      if (monitor.didDrop()) return\n\n      const draggableData = item as DraggableData\n      const id = draggableData.id\n      const oldParentId = draggableData.parent\n      const oldIndex = draggableData.index\n      // add one if hover over bottom\n      // substract one if draggable came from before droppable\n      const newIndex = index + (hoverRegion === \"bottom\" ? 1 : 0) - (oldParentId === parent && oldIndex < index ? 1 : 0)\n      // guard for dropped on previous location\n      if (oldParentId === parent && oldIndex === newIndex) return\n\n      // guard for null treey context\n      if (treey == null) return\n      await treey.move(id, oldParentId, parent, oldIndex, newIndex)\n    },\n    collect: monitor => ({\n      isOver: monitor.isOver({ shallow: true }),\n      canDrop: monitor.canDrop()\n    })\n  })\n\n  const showPlaceholder = isOver && canDrop\n  const showPrePlaceholder = showPlaceholder && hoverRegion === \"top\"\n  const showPostPlaceholder = showPlaceholder && hoverRegion === \"bottom\"\n\n  return (\n    <div ref={ ref }>\n      <div ref={ drop }>\n        <div className={ cs(\"DnDPlaceholder\", { isShown: showPrePlaceholder }) }><div></div></div>\n        <ItemBody\n          path={ path }\n          parent={ parent }\n          index={ index }\n          item={ item }\n          isOver={ isOver }\n          onClick={ onClick }\n          onDoubleClick={ onDoubleClick }\n          onClickAdd={ onClickAdd }\n          onClickEdit={ onClickEdit }\n          onClickDelete={ onClickDelete }\n        />\n        <div className={ cs(\"DnDPlaceholder\", { isShown: showPostPlaceholder }) }><div></div></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ItemDnD\n","import React, { useState, FormEvent } from \"react\"\nimport Button from \"./Button\"\n\ntype Props = {\n  submit: (value: string) => Promise<void>\n  initialValue?: string\n}\n\nconst ItemForm: React.FC<Props> = ({ submit, initialValue = \"\" }) => {\n\n  const [value, setValue] = useState(initialValue)\n\n  const onSubmit = async (event: FormEvent) => {\n    event.preventDefault()\n    await submit(value)\n  }\n\n  const onChange = (event: FormEvent) => {\n    setValue((event.target as HTMLInputElement).value)\n  }\n\n  return (\n    <form onSubmit={ onSubmit }>\n      <input type=\"text\" value={ value } onChange={ onChange } ref={ elem => elem && elem.focus() } />\n      <Button type=\"EDIT\" />\n    </form>\n  )\n}\n\nexport default ItemForm\n","import React, { useContext, useRef, useEffect } from \"react\"\nimport TreeyContext from \"../contexts/TreeyContext\"\nimport UIContext from \"../contexts/UIContext\"\nimport ItemDnD from \"./ItemDnD\"\nimport ItemForm from \"./ItemForm\"\nimport Items from \"./Items\"\nimport cs from \"classnames\"\nimport { isEqual } from \"lodash\"\nimport { getId, getData, stringifyData, parseData, createPathAdd } from \"../utils/treeItemUtils\"\n\nimport \"../styles/Item.sass\"\n\ntype Props = {\n  path: Path\n  parent: Id\n  index: Index\n  item: TreeItem\n}\n\nconst Item: React.FC<Props> = ({ path: parentPath, parent, index, item }) => {\n\n  const id = getId(item)!\n  const path = `${ parentPath }/${ index }/${ item.name }`\n  const pathAdd = createPathAdd(path)\n  const data = getData(item)\n  const dataString = stringifyData(data)\n  const hasRelations = item.relations.length > 0\n\n  const { treey } = useContext(TreeyContext)\n  const remove = async () => {\n    if (treey == null) return\n    if (id == null) return\n    await treey.remove(id, parent, index)\n  }\n  const {\n    isShownForm,\n    setShownForm,\n    unsetShownForm,\n    isOpen: itemIsOpen,\n    setOpen,\n    unsetOpen,\n    isDragging: itemIsDragging,\n    setActive,\n    clear\n  } = useContext(UIContext)\n\n  const isOpen = itemIsOpen(path)\n  const isEditing = isShownForm(path)\n  const isDragging = itemIsDragging(path)\n  const showItem = isDragging || !isEditing\n  const showForm = !isDragging && isEditing\n  const showItems = !isDragging && ((isOpen && hasRelations) || isShownForm(pathAdd))\n\n  const previousPath = useRef(path)\n  useEffect(() => {\n    const oldPath = previousPath.current\n    if (oldPath === path) return\n    clear(oldPath)\n    const wasOpen = itemIsOpen(oldPath)\n    if (wasOpen) setOpen(path)\n    return () => clear(path)\n  }, [path, clear, id, itemIsOpen, setOpen])\n\n  const onClick = () => {\n    setActive(path)\n    if (isShownForm(path) === false) unsetShownForm()\n    const selection = window.getSelection()\n    if (selection && selection.toString() !== \"\") return\n    if (!hasRelations) return\n    if (!isOpen) return setOpen(path)\n    if (isOpen) return unsetOpen(path)\n  }\n  const onDoubleClick = () => {\n    setOpen(path)\n    setShownForm(pathAdd)\n  }\n  const onClickAdd = () => {\n    setShownForm(pathAdd)\n    setOpen(path)\n    setActive(pathAdd)\n  }\n  const onClickEdit = () => {\n    setShownForm(path)\n    setActive(path)\n  }\n  const onClickDelete = async () => {\n    await remove()\n    unsetOpen(path)\n    setActive(parentPath)\n  }\n  const submit = async (value: string) => {\n    unsetShownForm()\n    const trimmedValue = value.trim()\n    if (trimmedValue === \"\") return remove()\n    const newData = parseData(trimmedValue)\n    if (isEqual(data, newData)) return\n    if (treey == null) return\n    if (id == null) return\n    await treey.update(id, newData)\n  }\n\n  return (\n    <div className=\"Item\" onClick={ event => event.stopPropagation() }>\n      <div className={ cs({ isHidden: !showItem }) }>\n        <ItemDnD\n          parent={ parent }\n          path={ path }\n          index={ index }\n          item={ item }\n          onClick={ onClick }\n          onDoubleClick={ onDoubleClick }\n          onClickAdd={ onClickAdd }\n          onClickEdit={ onClickEdit }\n          onClickDelete={ onClickDelete }\n        />\n      </div>\n      <div className={ cs(\"ItemFormWrap\", { isHidden: !showForm }) }>\n        <ItemForm submit={ submit } initialValue={ dataString } />\n      </div>\n      <div className={ cs({ isHidden: !showItems }) }>\n        <Items parent={ id } path={ path } items={ item.relations } />\n      </div>\n    </div>\n  )\n}\n\nexport default Item\n","import React, { useContext } from \"react\"\nimport TreeyContext from \"../contexts/TreeyContext\"\nimport UIContext from \"../contexts/UIContext\"\nimport ItemForm from \"./ItemForm\"\nimport Button from \"./Button\"\nimport { parseData, createPathAdd } from \"../utils/treeItemUtils\"\nimport cs from \"classnames\"\n\nimport \"../styles/FormAdd.sass\"\n\ntype Props = {\n  path: Path\n  parent: Id\n  isDisabled: boolean\n}\n\nconst FormAdd: React.FC<Props> = ({ path: parentPath, parent, isDisabled }) => {\n\n  const path = createPathAdd(parentPath)\n  const { isShownForm, setShownForm, unsetShownForm, isActive: itemIsActive, setActive, setOpen } = useContext(UIContext)\n  const { treey } = useContext(TreeyContext)\n\n  const showForm = isShownForm(path)\n  const show = isDisabled || !showForm\n  const isActive = itemIsActive(path)\n\n  const onClick = () => {\n    setShownForm(path)\n    setActive(path)\n  }\n\n  const onFocus = () => {\n    setActive(path)\n  }\n\n  const submit = async (value: string) => {\n    unsetShownForm()\n    setOpen(parentPath)\n    const trimmedValue = value.trim()\n    if (trimmedValue === \"\") return\n    if (treey === undefined) return\n    const data = parseData(trimmedValue)\n    await treey.createAndAdd(data, parent)\n  }\n\n  return (\n    <div\n      className={ cs(\"FormAdd\", { isDisabled, isActive }) }\n      onClick={ event => event.stopPropagation() }\n      >\n      { show &&\n        <Button onClick={ onClick } onFocus={ onFocus } type=\"ADD\" />\n      }\n      { showForm &&\n        <ItemForm submit={ submit } />\n      }\n    </div>\n  )\n}\n\nexport default FormAdd\n","import React, { useContext } from \"react\"\nimport UIContext from \"../contexts/UIContext\"\nimport Item from \"./Item\"\nimport FormAdd from \"./FormAdd\"\n\nimport \"../styles/Items.sass\"\n\ntype Props = {\n  path: Path\n  parent: Id\n  items: TreeItems\n}\n\nconst Items: React.FC<Props> = ({ path, parent, items }) => {\n\n  const { isDragging } = useContext(UIContext)\n\n  const showItems = items.length > 0\n  const isDisabled = isDragging()\n\n  return (\n    <div className=\"Items\">\n      { showItems &&\n        <ul>\n          { items.map((item, index) => {\n              const key = `${ path }/${ index }/${ item.name }`\n              return (\n                <li key={ key }>\n                  <Item path={ path } parent={ parent } index={ index } item={ item } />\n                </li>\n              )\n            })\n          }\n        </ul>\n      }\n      <FormAdd path={ path } parent={ parent } isDisabled={ isDisabled } />\n    </div>\n  )\n}\n\nexport default Items\n","import React, { useContext, useEffect } from \"react\"\nimport UIContext from \"../contexts/UIContext\"\nimport TreeyContext from \"../contexts/TreeyContext\"\nimport { parsePath } from \"../utils/treeItemUtils\"\nimport last from \"../utils/last\"\nimport { createPathAdd, isPathAdd, getItemFromPath, getPathFromPathAdd } from \"../utils/treeItemUtils\"\n\nconst KeyboardEvents: React.FC = () => {\n\n  const {\n    isShownForm,\n    setShownForm,\n    unsetShownForm,\n    setOpen,\n    isOpen,\n    unsetOpen,\n    active,\n    setActive,\n    changeActive\n  } = useContext(UIContext)\n\n  const { tree, treey } = useContext(TreeyContext)\n\n  useEffect(() => {\n\n    const canOpen = (path: Path) => {\n      if (tree == null) return false\n      if (isPathAdd(path)) return false\n      const item = getItemFromPath(tree, path)\n      return item !== undefined && item.relations.length > 0\n    }\n\n    const handler = async (event: KeyboardEvent) => {\n      if (isShownForm() && event.keyCode !== 27) return\n      switch (event.keyCode) {\n        // down arrow\n        // k (VIM)\n        case 40:\n        case 75:\n          changeActive()\n          break\n        // up arrow\n        // i (VIM)\n        case 38:\n        case 73:\n          changeActive(\"prev\")\n          break\n        // right arrow\n        // l (VIM)\n        case 39:\n        case 76:\n          if (active === undefined) return\n          if (isOpen(active) || canOpen(active) === false) return changeActive()\n          setOpen(active)\n          break\n        // left arrow\n        // j (VIM)\n        case 37:\n        case 74:\n          if (active === undefined) return\n          if (isOpen(active) === false) return changeActive(\"prev\")\n          unsetOpen(active)\n          break\n        // enter\n        case 13:\n          event.preventDefault()\n          if (active === undefined) return\n          setShownForm(active)\n          break\n        // esc\n        case 27:\n          unsetShownForm()\n          if (active === undefined) return\n          if (isPathAdd(active)) setActive(getPathFromPathAdd(active))\n          break\n        // +\n        case 187:\n          if (event.shiftKey === false) return\n          if (active === undefined) return\n          event.preventDefault()\n          const pathAdd = isPathAdd(active) ? active : createPathAdd(active)\n          setShownForm(pathAdd)\n          setActive(pathAdd)\n          break\n        // backspace\n        case 8:\n          if (treey === undefined) return\n          if (active === undefined) return\n          const ids = parsePath(active)\n          const id = last(ids)\n          if (id === undefined) return\n          const parentId = last(ids.slice(0, -1))\n          if (parentId === undefined) return\n          changeActive(\"prev\")\n          unsetOpen(active)\n          await treey.remove(id, parentId)\n          break\n      }\n    }\n    window.addEventListener(\"keydown\", handler)\n    return () => window.removeEventListener(\"keydown\", handler)\n  }, [\n    isShownForm,\n    setShownForm,\n    unsetShownForm,\n    isOpen,\n    setOpen,\n    unsetOpen,\n    active,\n    setActive,\n    changeActive,\n    tree,\n    treey\n  ])\n\n  return null\n}\n\nexport default KeyboardEvents\n","import React, { useContext, useEffect } from \"react\"\nimport UIContext from \"../contexts/UIContext\"\n\nconst MouseEvents: React.FC = () => {\n\n  const {\n    unsetShownForm\n  } = useContext(UIContext)\n\n  useEffect(() => {\n    window.addEventListener(\"click\", unsetShownForm)\n    return () => window.removeEventListener(\"click\", unsetShownForm)\n  }, [unsetShownForm])\n\n  return null\n}\n\nexport default MouseEvents\n","import React, { useContext, useEffect } from \"react\"\nimport Items from \"./Items\"\nimport { DndProvider } from \"react-dnd\"\nimport HTML5Backend from \"react-dnd-html5-backend\"\nimport UIContext from \"../contexts/UIContext\"\nimport KeyboardEvents from \"../components/KeyboardEvents\"\nimport MouseEvents from \"../components/MouseEvents\"\nimport { getId, createFullName } from \"../utils/treeItemUtils\"\n\nimport \"../styles/Tree.sass\"\n\ntype Props = {\n  tree: TreeItem\n  treey: Treey\n}\n\nconst Tree: React.FC<Props> = ({ tree, treey }) => {\n\n  const items = tree.relations\n  const id = getId(tree)\n  const showTree = id !== undefined\n  const parent = id!\n  const path = createFullName(id!)\n\n  // set first item active on initialisation\n  const { isActive, changeActive } = useContext(UIContext)\n  useEffect(() => {\n    if (isActive() === false) changeActive()\n  }, [isActive, changeActive])\n\n  return (\n    <div className=\"Tree\">\n      { showTree &&\n        <>\n          <KeyboardEvents />\n          <MouseEvents />\n          <DndProvider backend={ HTML5Backend }>\n            <Items path={ path } parent={ parent } items={ items } />\n          </DndProvider>\n        </>\n      }\n    </div>\n  )\n}\n\nexport default Tree\n","import React, { FC, useContext } from \"react\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport TreeyContext from \"../contexts/TreeyContext\"\nimport Spinner from \"../components/Spinner\"\nimport Alerts from \"../components/Alerts\"\nimport Tree from \"../components/Tree\"\n\nimport \"../styles/Home.sass\"\n\ntype Props = RouteComponentProps\n\nconst PageHome: FC<Props> = () => {\n\n  const { tree, treey } = useContext(TreeyContext)\n  const showSpinner = tree === undefined\n  const showTree = tree !== undefined && treey !== undefined\n  const name = tree?.name ?? \"\"\n\n  return (\n    <div className=\"Page PageHome\">\n      { showSpinner &&\n        <Spinner/>\n      }\n      { showTree &&\n        <>\n          <h1 className=\"RootItem\">{ name }</h1>\n          <Alerts />\n          <Tree tree={ tree! } treey={ treey! } />\n        </>\n      }\n    </div>\n  )\n}\n\nexport default PageHome\n","import React, { useState, useContext, useEffect } from \"react\"\nimport TreeyContext from \"../contexts/TreeyContext\"\nimport treey from \"treey\"\n\nimport \"../styles/ItemOverview.sass\"\n\nconst { utils: { parseFullName } } = treey\n\ntype Props = {\n  fullName: string\n}\n\nconst ItemOverview: React.FC<Props> = ({ fullName }) => {\n\n  const [item, setItem] = useState<TreeItem>()\n  const [notFound, setNotFound] = useState(false)\n  const [invalidFullName, setInvalidFullName] = useState(false)\n  const { treey } = useContext(TreeyContext)\n\n  useEffect(() => {\n    if (treey == null) return\n    const id = parseFullName(fullName)\n    if (id == null) {\n      setInvalidFullName(true)\n      return\n    }\n    (async () => {\n      const item = await treey.read(id)\n      item !== undefined ? setItem(item) : setNotFound(true)\n    })()\n  }, [treey, fullName])\n\n  const isLoading = notFound === false && invalidFullName === false && item == null\n  const showItem = item != null\n  const itemName = item && item.name\n  const state = item && JSON.stringify(item.state, undefined, 2)\n\n  return (\n    <div className=\"ItemOverview\">\n      { isLoading &&\n        <p>is loading&hellip;</p>\n      }\n      { invalidFullName &&\n        <p>{ fullName } is not valid</p>\n      }\n      { notFound &&\n        <p>{ fullName } not found</p>\n      }\n      { showItem &&\n        <>\n          <h1>{ itemName }</h1>\n          <h2>state</h2>\n          <p className=\"small pre\">{ state }</p>\n          <h2>events</h2>\n          <ul>\n            { item && item.events.reverse().map((event: ItemEvent, index: number) => {\n                const payload = event.payload ? JSON.stringify(event.payload, undefined, 1) : null\n                const showPayload = payload != null\n                const datetime = String(event.datetime)\n                return (\n                  <li key={ index }>\n                    <strong>{ event.type }</strong><br/>\n                    { showPayload &&\n                      <><span className=\"small\">{ payload }</span><br/></>\n                    }\n                    { datetime }\n                  </li>\n                )\n              })\n            }\n          </ul>\n        </>\n      }\n    </div>\n  )\n}\n\nexport default ItemOverview\n","import React, { FC } from \"react\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport ItemOverview from \"../components/ItemOverview\"\n\ntype Props = RouteComponentProps & {\n  fullName?: string\n}\n\nconst PageItem: FC<Props> = ({ fullName }) => {\n  return (\n    <div className=\"Page PageItem\">\n      <ItemOverview fullName={ fullName || \"\" } />\n    </div>\n  )\n}\n\nexport default PageItem\n","import React, { FC } from \"react\"\nimport { RouteComponentProps } from \"@reach/router\"\n\nimport \"../styles/Page404.sass\"\n\ntype Props = RouteComponentProps\n\nconst Page404: FC<Props> = () => {\n  return (\n    <div className=\"Page Page404\">\n      <p>404</p>\n    </div>\n  )\n}\n\nexport default Page404\n","import React from \"react\"\nimport AlertsProvider from \"./components/AlertsProvider\"\nimport TreeyProvider from \"./components/TreeyProvider\"\nimport UIProvider from \"./components/UIProvider\"\nimport { Router } from \"@reach/router\"\nimport basepath from \"./utils/basepath\"\nimport Header from \"./components/Header\"\nimport PageHome from \"./pages/Home\"\nimport PageItem from \"./pages/Item\"\nimport Page404 from \"./pages/404\"\n\nconst App: React.FC = () => {\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <main>\n        <AlertsProvider>\n          <TreeyProvider>\n            <UIProvider>\n              <Router basepath={ basepath }>\n                <PageHome path=\"/\" />\n                <PageItem path=\"/item/:fullName\" />\n                <Page404 default />\n              </Router>\n            </UIProvider>\n          </TreeyProvider>\n        </AlertsProvider>\n      </main>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nimport \"./styles/screen.sass\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}