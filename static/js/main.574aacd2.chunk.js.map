{"version":3,"sources":["contexts/TreeyContext.ts","hooks/useTreey.ts","components/TreeyProvider.tsx","contexts/UIContext.ts","utils/treeItemUtils.ts","utils/tree/pruneTree.ts","utils/tree/flattenTree.ts","utils/tree/appendAddToSiblings.ts","hooks/usePathState.ts","hooks/usePathsState.ts","components/UIProvider.tsx","utils/basepath.ts","components/Header.tsx","components/Spinner.tsx","components/ItemData.tsx","components/Button.tsx","utils/defer.ts","components/ItemBody.tsx","components/ItemDnD.tsx","components/ItemForm.tsx","components/Item.tsx","components/FormAdd.tsx","components/Items.tsx","utils/last.ts","components/KeyboardEvents.tsx","components/MouseEvents.tsx","components/Tree.tsx","pages/Home.tsx","components/ItemOverview.tsx","pages/Item.tsx","pages/404.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["TreeyContext","createContext","tree","treey","init","read","createAndAdd","update","remove","move","useTreey","_useState","useState","_useState2","Object","slicedToArray","setTree","useEffect","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","sent","stop","actions","_read2","_callee2","id","_context2","abrupt","_x","apply","this","arguments","_createAndAdd2","_callee3","data","parentId","_context3","_x2","_x3","_update2","_callee4","_context4","_x4","_x5","_remove2","_callee5","index","_context5","_x6","_x7","_x8","_move2","_callee6","oldParentId","oldIndex","_context6","_x9","_x10","_x11","_x12","_x13","TreeyProvider","_ref","children","_useTreey","_useTreey2","value","react_default","createElement","contexts_TreeyContext","Provider","unimplemented","Error","isShownForm","setShownForm","unsetShownForm","isOpen","setOpen","unsetOpen","isDragging","setDragging","unsetDragging","active","undefined","isActive","setActive","changeActive","UIContext","utils","createFullName","parseFullName","getId","item","state","ids","getData","getName","parents","concat","getPath","map","join","stringifyData","JSON","stringify","parseData","str","parse","err","parsePath","path","split","filter","isPathAdd","slice","pruneTree","length","prunedTree","forEach","treeItem","treeItemName","treeItemIsOpen","includes","hasRelations","relations","newTreeItem","_objectSpread","push","mapTreeItem","flattenTree_objectSpread","relation","flat","Infinity","flattenTree","appendAddToSiblings","parentPath","newTree","treeItemAdd","events","name","isCyclic","isKnown","isDestroyed","appendAddToSiblings_objectSpread","usePathState","setPath","p","usePathsState","paths","setPaths","is","UIProvider","_usePathState","_usePathState2","_usePathsState","_usePathsState2","open","_usePathState3","_usePathState4","_usePathState5","_usePathState6","useContext","direction","treeWithAdd","rootPath","arr","items","setFirstItemActive","findIndex","followingIndex","l","contexts_UIContext","basepath","window","location","host","Header","className","es","to","src","process","width","height","alt","Spinner","ItemData","isUrl","test","href","onClick","event","stopPropagation","Button","type","style","backgroundImage","typeToImageMap","title","defer","func","setTimeout","ItemBody","parent","isOver","onClickAdd","onClickEdit","onClickDelete","dropId","_useContext","isDraggingGlobal","itemIsActive","isDraggingUIContext","isHovered","setIsHovered","_useDrag","useDrag","begin","end","collect","monitor","_useDrag2","drag","showAddButton","showButtons","dataString","linkTo","_useDrop","useDrop","accept","drop","_drop","draggableData","shallow","canDrop","_useDrop2","isOverDeep","isDisabled","showDrop","showDnDPlaceHolderChild","cs","ref","onMouseEnter","onMouseLeave","components_ItemData","components_Button","isShown","ItemDnD","useRef","hoverRegion","setHoverRegion","getItem","hover","clientOffset","getClientOffset","clientRect","current","getBoundingClientRect","y","top","h","newIndex","didDrop","console","log","_useDrop2$","showPlaceholder","showPrePlaceholder","showPostPlaceholder","components_ItemBody","ItemForm","submit","_ref$initialValue","initialValue","setValue","onSubmit","_ref2","preventDefault","onChange","target","elem","focus","Item","pathAdd","_useContext2","itemIsOpen","itemIsDragging","isEditing","showItem","showForm","showItems","_ref3","_ref4","trimmedValue","newData","trim","isEqual","isHidden","components_ItemDnD","selection","getSelection","toString","components_ItemForm","components_Items","FormAdd","show","Items","key","components_Item","components_FormAdd","last","KeyboardEvents","canOpen","compareIds","id1","protocol","getRelationFromItemById","find","getItemFromPath","handler","keyCode","t0","shiftKey","addEventListener","removeEventListener","MouseEvents","Tree","hasTree","Fragment","components_KeyboardEvents","components_MouseEvents","esm","backend","HTML5Backend","PageHome","showSpinner","showTree","components_Spinner","components_Tree","ItemOverview","fullName","setItem","_useState3","_useState4","notFound","setNotFound","_useState5","_useState6","invalidFullName","setInvalidFullName","isLoading","itemName","reverse","payload","showPayload","datetime","String","PageItem","components_ItemOverview","Page404","App","components_Header","components_TreeyProvider","components_UIProvider","pages_Home","pages_Item","_404","default","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4aAceA,EAFMC,wBALP,CACZC,KAAM,KACNC,MAAO,gDCP6DA,IAA9DA,MAASC,SAAMC,SAAMC,iBAAcC,WAAQC,WAAQC,SAkC5CC,EAhCE,WAAM,IAAAC,EACGC,qBADHC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACdT,EADcW,EAAA,GACRG,EADQH,EAAA,GAErBI,oBAAU,WACRH,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAC,SAAAC,IAAA,IAAApB,EAAA,OAAAiB,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACoBtB,IADpB,OACOF,EADPsB,EAAAG,KAECX,EAAQd,GAFT,wBAAAsB,EAAAI,SAAAN,KAADR,IAIC,IACH,IAAMe,EAAiB,CACrBxB,KAAI,eAAAyB,EAAAhB,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAE,SAAAU,EAAOC,GAAP,OAAAb,EAAAC,EAAAG,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,cAAAO,EAAAP,KAAA,EACSrB,EAAK2B,GADd,cAAAC,EAAAC,OAAA,SAAAD,EAAAN,MAAA,wBAAAM,EAAAL,SAAAG,MAAF,gBAAAI,GAAA,OAAAL,EAAAM,MAAAC,KAAAC,YAAA,GAGJhC,aAAY,eAAAiC,EAAAzB,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAE,SAAAmB,EAAOC,EAAYC,GAAnB,IAAAxC,EAAA,OAAAiB,EAAAC,EAAAG,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAAAiB,EAAAjB,KAAA,EACOpB,EAAamC,EAAMC,GAD1B,OACNxC,EADMyC,EAAAhB,KAEZX,EAAQd,GAFI,wBAAAyC,EAAAf,SAAAY,MAAF,gBAAAI,EAAAC,GAAA,OAAAN,EAAAH,MAAAC,KAAAC,YAAA,GAIZ/B,OAAM,eAAAuC,EAAAhC,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAE,SAAA0B,EAAOf,EAAQS,GAAf,IAAAvC,EAAA,OAAAiB,EAAAC,EAAAG,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAtB,KAAA,EACanB,EAAOyB,EAAIS,GADxB,OACAvC,EADA8C,EAAArB,KAENX,EAAQd,GAFF,wBAAA8C,EAAApB,SAAAmB,MAAF,gBAAAE,EAAAC,GAAA,OAAAJ,EAAAV,MAAAC,KAAAC,YAAA,GAIN9B,OAAM,eAAA2C,EAAArC,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAE,SAAA+B,EAAOpB,EAAQU,EAAcW,GAA7B,IAAAnD,EAAA,OAAAiB,EAAAC,EAAAG,KAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cAAA4B,EAAA5B,KAAA,EACalB,EAAOwB,EAAIU,EAAUW,GADlC,OACAnD,EADAoD,EAAA3B,KAENX,EAAQd,GAFF,wBAAAoD,EAAA1B,SAAAwB,MAAF,gBAAAG,EAAAC,EAAAC,GAAA,OAAAN,EAAAf,MAAAC,KAAAC,YAAA,GAIN7B,KAAI,eAAAiD,EAAA5C,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAE,SAAAsC,EAAO3B,EAAQ4B,EAAiBlB,EAAcmB,EAAiBR,GAA/D,IAAAnD,EAAA,OAAAiB,EAAAC,EAAAG,KAAA,SAAAuC,GAAA,cAAAA,EAAArC,KAAAqC,EAAApC,MAAA,cAAAoC,EAAApC,KAAA,EACejB,EAAKuB,EAAI4B,EAAalB,EAAUmB,EAAUR,GADzD,OACEnD,EADF4D,EAAAnC,KAEJX,EAAQd,GAFJ,wBAAA4D,EAAAlC,SAAA+B,MAAF,gBAAAI,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAT,EAAAtB,MAAAC,KAAAC,YAAA,IAKN,MAAO,CAACpC,EAAM2B,ICbDuC,EAZwB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SAAeC,EAEjC7D,IAFiC8D,EAAA1D,OAAAC,EAAA,EAAAD,CAAAyD,EAAA,GAGjDE,EAAQ,CAAEvE,KAHuCsE,EAAA,GAGjCrE,MAHiCqE,EAAA,IAKvD,OACEE,EAAAtD,EAAAuD,cAACC,EAAaC,SAAd,CAAuBJ,MAAQA,GAC3BH,ICGFQ,EAAgB,WAAQ,MAAM,IAAIC,MAAO,8BAEzCN,EAAQ,CACZO,YAAaF,EACbG,aAAcH,EACdI,eAAgBJ,EAChBK,OAAQL,EACRM,QAASN,EACTO,UAAWP,EACXQ,WAAYR,EACZS,YAAaT,EACbU,cAAeV,EACfW,YAAQC,EACRC,SAAUb,EACVc,UAAWd,EACXe,aAAcf,GAKDgB,EAFG7F,wBAAcwE,aCnCqBtE,IAA7C4F,MAASC,mBAAgBC,kBAKpBC,EAAQ,SAACC,GAAD,OAAqCA,EAAKC,MAAMC,KAAOF,EAAKC,MAAMC,IAAI,IAC9EC,EAAU,SAACH,GAAD,OAA2BA,EAAKC,OAASD,EAAKC,MAAM3D,MAG9D8D,EAAU,SAACvE,EAAoBwE,GAArB,OADA,SAACxE,EAAoBwE,GAArB,OAA4CxE,EAAKwE,EAAQC,OAAOzE,GAAMwE,EACzBE,CAAQ1E,EAAIwE,GAASG,IAAI,SAAA3E,GAAE,OAAIgE,EAAehE,KAAK4E,KAAK,MAC/GC,EAAgB,SAACpE,GAC5B,MAAoB,kBAATA,EAA0BA,EAC9BqE,KAAKC,UAAUtE,OAAMiD,EAAW,IAE5BsB,EAAY,SAACC,GACxB,IACE,OAAOH,KAAKI,MAAMD,GAClB,MAAOE,GACP,OAAOF,IAGEG,EAAY,SAACC,GAGxB,OAFaA,EAAKC,MAAM,KACPX,IAAI,SAAA3E,GAAE,OAAIiE,EAAcjE,KAC9BuF,OAAO,SAACvF,GAAD,YAA0C0D,IAAP1D,KAE1CwF,EAAY,SAACH,GACxB,MAA0B,SAAnBA,EAAKI,OAAO,gOC1BrB,IAceC,EAdG,SAAZA,EAAaxH,EAAiBiF,GAAiD,IAAlCqB,EAAkClE,UAAAqF,OAAA,QAAAjC,IAAApD,UAAA,GAAAA,UAAA,GAAnB,GAC1DsF,EAAwB,GAW9B,OAVA1H,EAAK2H,QAAQ,SAAAC,GACX,IAAM9F,EAAKkE,EAAM4B,GACXC,EAAexB,EAAQvE,EAAIwE,GAC3BwB,EAAiB7C,EAAO8C,SAASF,GACjCG,EAAeJ,EAASK,UAAUR,OAAS,EAG3CS,uVAAWC,CAAA,GAAQP,EAAR,CAAkBK,UAFfH,GAAkBE,EACNR,EAAUI,EAASK,UAAWhD,EAAQqB,EAAQC,OAAOzE,IAAO,KAE5F4F,EAAWU,KAAKF,KAEXR,+NCZT,IAAMW,EAAc,SAAdA,EAAeT,EAAoBtB,GACvC,IAAMxE,EAAKkE,EAAM4B,GAEXM,uVAAWI,CAAA,GAAQV,EAAR,CAAkBT,KADtBS,EAAST,KAAOS,EAAST,KAAOd,EAAQvE,EAAIwE,KAEzD,MAAO,CAAC4B,EAAaA,EAAYD,UAAUxB,IAAI,SAAA8B,GAAQ,OAAIF,EAAYE,EAAUjC,EAAQC,OAAOzE,OAAO0G,KAAKC,MAK/FC,EAHK,SAAC1I,GACnB,OAAOA,EAAKyG,IAAI,SAAAmB,GAAQ,OAAIS,EAAYT,EAAU,MAAKY,KAAKC,kOCP9D,IAqBeE,EArBa,SAAtBA,EAAuB3I,EAAiB4I,GAC5C,IAAMC,EAAqB,GAkB3B,OAjBA7I,EAAK2H,QAAQ,SAAAC,GACX,IAAMT,EAAI,GAAAZ,OAAOqC,EAAaA,EAAa,IAAM,IAAvCrC,OAA8CT,EAAeE,EAAM4B,KACvEK,EAAYU,EAAoBf,EAASK,UAAWd,GACpD2B,EAAwB,CAC5B5C,MAAO,GACP6C,OAAQ,GACRd,UAAW,GACXe,KAAM,MACNC,UAAU,EACVC,SAAS,EACTC,aAAa,EACbhC,KAAI,GAAAZ,OAAMY,EAAN,SAENc,EAAUG,KAAKU,GACf,IAAMZ,uVAAWkB,CAAA,GAAQxB,EAAR,CAAkBK,cACnCY,EAAQT,KAAKF,KAERW,GCLMQ,EAPM,WAAqB,IAAA5I,EAChBC,qBADgBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACjC0G,EADiCxG,EAAA,GAC3B2I,EAD2B3I,EAAA,GAKxC,MAAO,CAACwG,EAHG,SAACoC,GAAD,YAAoB/D,IAAN+D,OAA2B/D,IAAT2B,EAAqBoC,IAAMpC,GAC1D,SAACoC,GAAD,OAAaD,EAAQC,IACnB,kBAAMD,OAAQ9D,MCQfgE,EAZO,WAAsB,IAAA/I,EAChBC,mBAAgB,IADAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACnCgJ,EADmC9I,EAAA,GAC5B+I,EAD4B/I,EAAA,GAEpCgJ,EAAK,SAACJ,GAAD,OAAaE,EAAM1B,SAASwB,IAQvC,MAAO,CAACE,EAAOE,EAPH,SAACJ,GACPI,EAAGJ,IACPG,EAASD,EAAMlD,OAAOgD,KAEV,SAACA,GACbG,EAASD,EAAMpC,OAAO,SAAAF,GAAI,OAAIA,IAASoC,QCqE5BK,EAxEqB,SAAAzF,GAAkB,IAAfC,EAAeD,EAAfC,SAAeyF,EAGER,IAHFS,EAAAlJ,OAAAC,EAAA,EAAAD,CAAAiJ,EAAA,GAG3C/E,EAH2CgF,EAAA,GAG9B/E,EAH8B+E,EAAA,GAGhB9E,EAHgB8E,EAAA,GAAAC,EAMTP,IANSQ,EAAApJ,OAAAC,EAAA,EAAAD,CAAAmJ,EAAA,GAM7CE,EAN6CD,EAAA,GAMvC/E,EANuC+E,EAAA,GAM/B9E,EAN+B8E,EAAA,GAMtB7E,EANsB6E,EAAA,GAAAE,EASDb,IATCc,EAAAvJ,OAAAC,EAAA,EAAAD,CAAAsJ,EAAA,GAS3C9E,EAT2C+E,EAAA,GAS/B9E,EAT+B8E,EAAA,GASlB7E,EATkB6E,EAAA,GAAAC,EAYdf,IAZcgB,EAAAzJ,OAAAC,EAAA,EAAAD,CAAAwJ,EAAA,GAY7C7E,EAZ6C8E,EAAA,GAYrC5E,EAZqC4E,EAAA,GAY3B3E,EAZ2B2E,EAAA,GAc5CrK,EAASsK,qBAAWxK,GAApBE,KAmCFuE,EAAQ,CACZO,cACAC,eACAC,iBACAC,SACAC,UACAC,YACAC,aACAC,cACAC,gBACAC,SACAE,WACAC,YACAC,aA/CmB,WAAmC,IAAlC4E,EAAkCnI,UAAAqF,OAAA,QAAAjC,IAAApD,UAAA,GAAAA,UAAA,GAAX,OAE3C,GAAY,MAARpC,EAAJ,CAEA,IAAMwK,EAAc7B,EAAoB,CAAC3I,IACnCyK,EAAWpE,EAAQL,EAAMhG,GAAO,IAChC0K,EAAMT,EAAK1D,OAAOkE,GAElB/C,EAAaF,EAAUgD,EAAaE,GAGpCC,EAFejC,EAAYhB,GAENH,MAAM,GAE3BqD,EAAqB,WACzB,IAAMzD,EAAOwD,EAAM,GAAGxD,KACtBzB,EAAUyB,IAGZ,IAAmB,IAAf1B,IACFmF,QACK,CACL,IAAMzH,EAAQwH,EAAME,UAAU,SAAA5E,GAAI,OAAIR,EAASQ,EAAKkB,QACpD,IAAe,IAAXhE,EAAc,OAAOyH,IACzB,IAAME,EAA+B,SAAdP,EAAuBpH,EAAQ,EAAIA,EAAQ,EAC5D4H,EAAIJ,EAAMlD,OAAS,EAKnBN,EAAOwD,EAHXG,EAAiBC,EAAI,EACrBD,EAAiB,EAAIC,EACrBD,GACoB3D,KACtBzB,EAAUyB,OAoBd,OACE3C,EAAAtD,EAAAuD,cAACuG,EAAUrG,SAAX,CAAoBJ,MAAQA,GACxBH,YChFO6G,EAD2B,+BAAzBC,OAAOC,SAASC,KAAwC,gBAAkB,ICkB5EC,SAZW,WAExB,OACE7G,EAAAtD,EAAAuD,cAAA,UAAQ6G,UAAU,UAChB9G,EAAAtD,EAAAuD,cAAC8G,EAAA,EAAD,CAAMC,GAAKP,GACTzG,EAAAtD,EAAAuD,cAAA,UAAID,EAAAtD,EAAAuD,cAAA,OAAKgH,IAJHC,qCAIeC,MAAM,OAAOC,OAAO,OAAOC,IAAI,YACpDrH,EAAAtD,EAAAuD,cAAA,uBCNOqH,SAFW,kBAAOtH,EAAAtD,EAAAuD,cAAA,KAAG6G,UAAU,WAAb,6CCWlBS,GATmB,SAAA5H,GAAc,IAAX5B,EAAW4B,EAAX5B,KAC7ByJ,EAAQ,eAAeC,KAAK1J,GAClC,OACEiC,EAAAtD,EAAAuD,cAAA,QAAM6G,UAAU,YACZU,EAAQxH,EAAAtD,EAAAuD,cAAA,KAAGyH,KAAO3J,EAAO4J,QAAU,SAAAC,GAAK,OAAIA,EAAMC,oBAAsB9J,GAAaA,ICkB9E+J,UATiB,SAAAnI,GAAuB,IAApBoI,EAAoBpI,EAApBoI,KAAMJ,EAAchI,EAAdgI,QACjCb,EAAY,UAAYiB,EAExBC,EAAQ,CAAEC,gBADK,QAAAlG,OAAYmF,eAAZ,YAAAnF,OAVA,SAACgG,GACtB,OAAQA,GACR,IAAK,MAAO,MAAO,gBACnB,IAAK,OAAQ,MAAO,mBACpB,IAAK,SAAU,MAAO,oBAM8CG,CAAeH,GAA9D,OAErB,OACE/H,EAAAtD,EAAAuD,cAAA,UAAQ6G,UAAYA,EAAYkB,MAAQA,EAAQL,QAAUA,EAAUQ,MAAQJ,GAASA,KCrB1EK,GAHD,SAACC,GACX3B,OAAO4B,WAAWD,EAAM,IC0GbE,GAnFmB,SAAA5I,GAA4F,IAAzFgD,EAAyFhD,EAAzFgD,KAAM6F,EAAmF7I,EAAnF6I,OAAQ7J,EAA2EgB,EAA3EhB,MAAO8C,EAAoE9B,EAApE8B,KAAMgH,EAA8D9I,EAA9D8I,OAAQd,EAAsDhI,EAAtDgI,QAASe,EAA6C/I,EAA7C+I,WAAYC,EAAiChJ,EAAjCgJ,YAAaC,EAAoBjJ,EAApBiJ,cAElGtL,EAAKkE,EAAMC,GACXoH,EAASvL,EAH6GwL,EAItBhD,qBAAW1E,GAA7F2H,EAJwGD,EAIpHlI,WAA8BC,EAJsFiI,EAItFjI,YAAaC,EAJyEgI,EAIzEhI,cAAeJ,EAJ0DoI,EAI1DpI,QAAmBsI,EAJuCF,EAIjD7H,SACnExF,EAAUqK,qBAAWxK,GAArBG,MACFwN,EAAsBF,IACtB9H,EAAW+H,EAAarG,GAP8F1G,EAS1FC,oBAAS,GATiFC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GASrHiN,EATqH/M,EAAA,GAS1GgN,EAT0GhN,EAAA,GAAAiN,EAa7FC,YAAQ,CACrC5H,KAAM,CAAEsG,KAAM,OAAQS,SAAQ7J,QAAOrB,KAAIqF,QACzC2G,MAAO,kBAAMlB,GAAM,kBAAMvH,EAAY8B,MACrC4G,IAAK,kBAAMzI,KACX0I,QAAS,SAAAC,GAAO,MAAK,CACnB7I,WAAY6I,EAAQ7I,iBAlBoG8I,EAAAtN,OAAAC,EAAA,EAAAD,CAAAgN,EAAA,GAanHxI,EAbmH8I,EAAA,GAanH9I,WAAc+I,EAbqGD,EAAA,GAsBtHlG,EAAe/B,EAAKgC,UAAUR,OAAS,EACvC2G,GAAiBpG,EACjBqG,EAAcX,IAActI,IAAeqI,EAC3ClL,EAAO6D,EAAQH,GACfqI,EAAa3H,EAAcpE,GAC3BgM,EAAM,GAAAhI,OAAO0E,EAAP,SAAA1E,OAAyBN,EAAK+C,MA3BkFwF,EA6BrFC,YAAQ,CAC7CC,OAAQ,OACRC,KAAI,eAAAC,EAAAhO,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAE,SAAAC,EAAO6E,EAAMgI,GAAb,IAAAY,EAAA/M,EAAA4B,EAAAC,EAAAnB,EAAA,OAAAvB,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAGEM,GADA+M,EAAgB5I,GACGnE,GACnB4B,EAAcmL,EAAc7B,OAC5BrJ,EAAWkL,EAAc1L,MAEf,OADVX,EAAW6K,GANb,CAAA/L,EAAAE,KAAA,eAAAF,EAAAU,OAAA,oBAUS,MAAT/B,EAVA,CAAAqB,EAAAE,KAAA,eAAAF,EAAAU,OAAA,wBAAAV,EAAAE,KAAA,GAWEvB,EAAMM,KAAKuB,EAAI4B,EAAalB,EAAUmB,GAXxC,QAYJuB,EAAQiC,GAZJ,yBAAA7F,EAAAI,SAAAN,MAAF,gBAAAa,EAAAS,GAAA,OAAAkM,EAAA1M,MAAAC,KAAAC,YAAA,GAcJ4L,QAAS,SAAAC,GAAO,MAAK,CACnBhB,OAAQgB,EAAQhB,OAAO,CAAE6B,SAAS,IAClCC,QAASd,EAAQc,cA/CuGC,EAAApO,OAAAC,EAAA,EAAAD,CAAA4N,EAAA,GA6B3GS,EA7B2GD,EAAA,GA6BnH/B,OAAsB0B,EA7B6FK,EAAA,GAmDtHE,EAAa9J,EACb+J,GAAYlC,IAAWjF,GAAiBiH,EACxCG,GAA0BH,EAEhC,OACEzK,EAAAtD,EAAAuD,cAAA,OAAK6G,UAAY+D,IAAG,eAAgB,CAAE5J,WAAUyJ,gBAC9C1K,EAAAtD,EAAAuD,cAAA,OACE6K,IAAMnB,EACN7C,UAAY+D,IAAG,WAAY,CAAEjB,gBAAeC,cAAac,cACzDI,aAlDe,kBAAM5B,GAAa,IAmDlC6B,aAlDe,kBAAM7B,GAAa,KAoDlCnJ,EAAAtD,EAAAuD,cAAA,QAAM0H,QAAUA,GACd3H,EAAAtD,EAAAuD,cAACgL,GAAD,CAAUlN,KAAO+L,IACjB9J,EAAAtD,EAAAuD,cAAC8G,EAAA,EAAD,CAAMC,GAAK+C,EAASjD,UAAU,QAA9B,WAEA6D,IACA3K,EAAAtD,EAAAuD,cAAA,OAAK6K,IAAMX,EAAOrD,UAAU,eAC1B9G,EAAAtD,EAAAuD,cAACiL,GAAD,CAAQnD,KAAK,SAGf6B,GACA5J,EAAAtD,EAAAuD,cAACiL,GAAD,CAAQnD,KAAK,MAAMJ,QAAUe,IAE/B1I,EAAAtD,EAAAuD,cAACiL,GAAD,CAAQnD,KAAK,OAAOJ,QAAUgB,IAC9B3I,EAAAtD,EAAAuD,cAACiL,GAAD,CAAQnD,KAAK,SAASJ,QAAUiB,KAElC5I,EAAAtD,EAAAuD,cAAA,OAAK6G,UAAY+D,IAAG,kBAAmB,wBAAyB,CAAEM,QAASP,MAA6B5K,EAAAtD,EAAAuD,cAAA,eCT/FmL,UAxEkB,SAAAzL,GAAoF,IAAjF6I,EAAiF7I,EAAjF6I,OAAQ7F,EAAyEhD,EAAzEgD,KAAMhE,EAAmEgB,EAAnEhB,MAAO8C,EAA4D9B,EAA5D8B,KAAMkG,EAAsDhI,EAAtDgI,QAASe,EAA6C/I,EAA7C+I,WAAYC,EAAiChJ,EAAjCgJ,YAAaC,EAAoBjJ,EAApBiJ,cAEvFnN,EAAUqK,qBAAWxK,GAArBG,MACFqP,EAAMO,iBAAuB,MAHgFpP,EAI7EC,qBAJ6EC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAI5GqP,EAJ4GnP,EAAA,GAI/FoP,EAJ+FpP,EAAA,GAAA6N,EAM/EC,YAAQ,CAC1CC,OAAQ,OACRK,QAAS,SAAC9I,EAAMgI,GAAP,OAAmBA,EAAQ+B,UAAU7I,OAASA,GACvD8I,MAAO,SAAChK,EAAMgI,GACZ,IAAMiC,EAAejC,EAAQkC,kBACvBC,EAAad,GAAOA,EAAIe,SAAWf,EAAIe,QAAQC,wBACrD,GAAIF,GAAcF,EAAc,CAC9B,IAGMK,EAAIL,EAAaK,EAAIH,EAAWI,IAEtCT,EADuBQ,GAAKE,GAAQ,MAAQ,YAIhD9B,KAAI,eAAAC,EAAAhO,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAE,SAAAC,EAAO6E,EAAMgI,GAAb,IAAAY,EAAA/M,EAAA4B,EAAAC,EAAA+M,EAAA,OAAAzP,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAGAyM,EAAQ0C,UAHR,CAAArP,EAAAE,KAAA,eAAAF,EAAAU,OAAA,oBAMEF,GADA+M,EAAgB5I,GACGnE,GACnB4B,EAAcmL,EAAc7B,OAC5BrJ,EAAWkL,EAAc1L,MAGzBuN,EAAWvN,GAAyB,WAAhB2M,EAA2B,EAAI,IAAMpM,IAAgBsJ,GAAUrJ,EAAWR,EAAQ,EAAI,GAEhHyN,QAAQC,IAAI/O,EAAI4B,EAAasJ,EAAQrJ,EAAU+M,GAC3ChN,IAAgBsJ,GAAUrJ,IAAa+M,EAdvC,CAAApP,EAAAE,KAAA,gBAAAF,EAAAU,OAAA,qBAiBS,MAAT/B,EAjBA,CAAAqB,EAAAE,KAAA,gBAAAF,EAAAU,OAAA,yBAAAV,EAAAE,KAAA,GAkBEvB,EAAMM,KAAKuB,EAAI4B,EAAasJ,EAAQrJ,EAAU+M,GAlBhD,yBAAApP,EAAAI,SAAAN,MAAF,gBAAAa,EAAAS,GAAA,OAAAkM,EAAA1M,MAAAC,KAAAC,YAAA,GAoBJ4L,QAAS,SAAAC,GAAO,MAAK,CACnBhB,OAAQgB,EAAQhB,OAAO,CAAE6B,SAAS,IAClCC,QAASd,EAAQc,cA3C8FC,EAAApO,OAAAC,EAAA,EAAAD,CAAA4N,EAAA,GAAAsC,EAAA9B,EAAA,GAM1GD,EAN0G+B,EAM1G/B,QAAS9B,EANiG6D,EAMjG7D,OAAU0B,EANuFK,EAAA,GA+C7G+B,EAAkB9D,GAAU8B,EAC5BiC,EAAqBD,GAAmC,QAAhBjB,EACxCmB,EAAsBF,GAAmC,WAAhBjB,EAE/C,OACEtL,EAAAtD,EAAAuD,cAAA,OAAK6K,IAAMA,GACT9K,EAAAtD,EAAAuD,cAAA,OAAK6K,IAAMX,GACTnK,EAAAtD,EAAAuD,cAAA,OAAK6G,UAAY+D,IAAG,kBAAmB,CAAEM,QAASqB,KAAwBxM,EAAAtD,EAAAuD,cAAA,aAC1ED,EAAAtD,EAAAuD,cAACyM,GAAD,CACE/J,KAAOA,EACP6F,OAASA,EACT7J,MAAQA,EACR8C,KAAOA,EACPgH,OAASA,EACTd,QAAUA,EACVe,WAAaA,EACbC,YAAcA,EACdC,cAAgBA,IAElB5I,EAAAtD,EAAAuD,cAAA,OAAK6G,UAAY+D,IAAG,kBAAmB,CAAEM,QAASsB,KAAyBzM,EAAAtD,EAAAuD,cAAA,iBC1DpE0M,GArBmB,SAAAhN,GAAmC,IAAhCiN,EAAgCjN,EAAhCiN,OAAgCC,EAAAlN,EAAxBmN,oBAAwB,IAAAD,EAAT,GAASA,EAAA5Q,EAEzCC,mBAAS4Q,GAFgC3Q,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAE5D8D,EAF4D5D,EAAA,GAErD4Q,EAFqD5Q,EAAA,GAI7D6Q,EAAQ,eAAAC,EAAA7Q,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAG,SAAAC,EAAOgL,GAAP,OAAAnL,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACf4K,EAAMsF,iBADSpQ,EAAAE,KAAA,EAET4P,EAAO7M,GAFE,wBAAAjD,EAAAI,SAAAN,MAAH,gBAAAa,GAAA,OAAAwP,EAAAvP,MAAAC,KAAAC,YAAA,GASd,OACEoC,EAAAtD,EAAAuD,cAAA,QAAM+M,SAAWA,GACfhN,EAAAtD,EAAAuD,cAAA,SAAO8H,KAAK,OAAOhI,MAAQA,EAAQoN,SANtB,SAACvF,GAChBmF,EAAUnF,EAAMwF,OAA4BrN,QAKe+K,IAAM,SAAAuC,GAAI,OAAIA,GAAQA,EAAKC,WACpFtN,EAAAtD,EAAAuD,cAACiL,GAAD,CAAQnD,KAAK,oBCqFJwF,UA1Fe,SAAA5N,GAA+C,IAAtCyE,EAAsCzE,EAA5CgD,KAAkB6F,EAA0B7I,EAA1B6I,OAAQ7J,EAAkBgB,EAAlBhB,MAAO8C,EAAW9B,EAAX8B,KAE1DnE,EAAKkE,EAAMC,GACXkB,EAAI,GAAAZ,OAAOqC,EAAP,KAAArC,OAAuBT,EAAehE,IAC1CkQ,EAAO,GAAAzL,OAAOY,EAAP,QACP5E,EAAO6D,EAAQH,GACfqI,EAAa3H,EAAcpE,GAC3ByF,EAAe/B,EAAKgC,UAAUR,OAAS,EAErCxH,EAAUqK,qBAAWxK,GAArBG,MACFK,EAAM,eAAAmR,EAAA7Q,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAG,SAAAC,IAAA,OAAAH,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACA,MAATvB,EADS,CAAAqB,EAAAE,KAAA,eAAAF,EAAAU,OAAA,oBAEH,MAANF,EAFS,CAAAR,EAAAE,KAAA,eAAAF,EAAAU,OAAA,wBAAAV,EAAAE,KAAA,EAGPvB,EAAMK,OAAOwB,EAAIkL,EAAQ7J,GAHlB,wBAAA7B,EAAAI,SAAAN,MAAH,yBAAAqQ,EAAAvP,MAAAC,KAAAC,YAAA,GAV+D6P,EAwBvE3H,qBAAW1E,GARbd,EAhByEmN,EAgBzEnN,YACAC,EAjByEkN,EAiBzElN,aACAC,EAlByEiN,EAkBzEjN,eACQkN,EAnBiED,EAmBzEhN,OACAC,EApByE+M,EAoBzE/M,QACAC,EArByE8M,EAqBzE9M,UACYgN,EAtB6DF,EAsBzE7M,WACAM,EAvByEuM,EAuBzEvM,UAGIT,EAASiN,EAAW/K,GACpBiL,EAAYtN,EAAYqC,GACxB/B,EAAa+M,EAAehL,GAC5BkL,EAAWjN,IAAegN,EAC1BE,GAAYlN,GAAcgN,EAC1BG,GAAanN,IAAgBH,GAAU+C,GAAiBlD,EAAYkN,IAmBpE5E,EAAa,eAAAoF,EAAA5R,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAG,SAAAU,IAAA,OAAAZ,EAAAC,EAAAG,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,cAAAO,EAAAP,KAAA,EACdlB,IADc,OAEpB6E,EAAUgC,GACVzB,EAAUkD,GAHU,wBAAA7G,EAAAL,SAAAG,MAAH,yBAAA2Q,EAAAtQ,MAAAC,KAAAC,YAAA,GAKbgP,EAAM,eAAAqB,EAAA7R,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAG,SAAAmB,EAAOiC,GAAP,IAAAmO,EAAAC,EAAA,OAAA1R,EAAAC,EAAAG,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,UACbwD,IAEqB,MADf0N,EAAenO,EAAMqO,QAFd,CAAAnQ,EAAAjB,KAAA,eAAAiB,EAAAT,OAAA,SAGmB1B,KAHnB,UAIPqS,EAAU7L,EAAU4L,IACtBG,mBAAQtQ,EAAMoQ,GALL,CAAAlQ,EAAAjB,KAAA,eAAAiB,EAAAT,OAAA,oBAMA,MAAT/B,EANS,CAAAwC,EAAAjB,KAAA,eAAAiB,EAAAT,OAAA,oBAOH,MAANF,EAPS,CAAAW,EAAAjB,KAAA,gBAAAiB,EAAAT,OAAA,yBAAAS,EAAAjB,KAAA,GAQPvB,EAAMI,OAAOyB,EAAI6Q,GARV,yBAAAlQ,EAAAf,SAAAY,MAAH,gBAAAL,GAAA,OAAAwQ,EAAAvQ,MAAAC,KAAAC,YAAA,GAWZ,OACEoC,EAAAtD,EAAAuD,cAAA,OAAK6G,UAAY+D,IAAG,QAAUlD,QAAU,SAAAC,GAAK,OAAIA,EAAMC,oBACrD7H,EAAAtD,EAAAuD,cAAA,OAAK6G,UAAY+D,IAAG,CAAEyD,UAAWT,KAC/B7N,EAAAtD,EAAAuD,cAACsO,GAAD,CACE/F,OAASA,EACT7F,KAAOA,EACPhE,MAAQA,EACR8C,KAAOA,EACPkG,QAzCQ,WACVrH,EAAYkN,IAAUhN,IAC1B,IAAMgO,EAAY9H,OAAO+H,eACzB,KAAID,GAAsC,KAAzBA,EAAUE,aACtBlL,EACL,OAAK/C,EACDA,EAAeE,EAAUgC,QAA7B,EADoBjC,EAAQiC,IAqCtB+F,WAlCW,WACjBnI,EAAaiN,GACb9M,EAAQiC,GACRzB,EAAUsM,IAgCJ7E,YA9BY,WAClBpI,EAAaoC,GACbzB,EAAUyB,IA6BJiG,cAAgBA,KAGpB5I,EAAAtD,EAAAuD,cAAA,OAAK6G,UAAY+D,IAAG,eAAgB,CAAEyD,UAAWR,KAC/C9N,EAAAtD,EAAAuD,cAAC0O,GAAD,CAAU/B,OAASA,EAASE,aAAehD,KAE7C9J,EAAAtD,EAAAuD,cAAA,OAAK6G,UAAY+D,IAAG,CAAEyD,UAAWP,KAC/B/N,EAAAtD,EAAAuD,cAAC2O,GAAD,CAAOpG,OAASlL,EAAKqF,KAAOA,EAAOwD,MAAQ1E,EAAKgC,gBClDzCoL,UArCkB,SAAAlP,GAA8C,IAArCyE,EAAqCzE,EAA3CgD,KAAkB6F,EAAyB7I,EAAzB6I,OAAQkC,EAAiB/K,EAAjB+K,WAEtD/H,EAAI,GAAAZ,OAAOqC,EAAP,QAFmE0E,EAGqBhD,qBAAW1E,GAArGd,EAHqEwI,EAGrExI,YAAaC,EAHwDuI,EAGxDvI,aAAcC,EAH0CsI,EAG1CtI,eAA0BwI,EAHgBF,EAG1B7H,SAAwBC,EAHE4H,EAGF5H,UAAWR,EAHToI,EAGSpI,QAC9EjF,EAAUqK,qBAAWxK,GAArBG,MAEFqS,EAAWxN,EAAYqC,GACvBmM,EAAOpE,IAAeoD,EACtB7M,EAAW+H,EAAarG,GAOxBiK,EAAM,eAAAK,EAAA7Q,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAG,SAAAC,EAAOmD,GAAP,IAAAmO,EAAAnQ,EAAA,OAAAtB,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACbwD,IACAE,EAAQ0D,GAEa,MADf8J,EAAenO,EAAMqO,QAHd,CAAAtR,EAAAE,KAAA,eAAAF,EAAAU,OAAA,oBAKC,OAAV/B,EALS,CAAAqB,EAAAE,KAAA,eAAAF,EAAAU,OAAA,wBAMPO,EAAOuE,EAAU4L,GANVpR,EAAAE,KAAA,GAOPvB,EAAMG,aAAamC,EAAMyK,GAPlB,yBAAA1L,EAAAI,SAAAN,MAAH,gBAAAa,GAAA,OAAAwP,EAAAvP,MAAAC,KAAAC,YAAA,GAUZ,OACEoC,EAAAtD,EAAAuD,cAAA,OAAK6G,UAAY+D,IAAG,UAAW,CAAEH,aAAYzJ,aAAc0G,QAAU,SAAAC,GAAK,OAAIA,EAAMC,oBAChFiH,GACA9O,EAAAtD,EAAAuD,cAACiL,GAAD,CAAQvD,QAlBE,WACdpH,EAAaoC,GACbzB,EAAUyB,IAgBsBoF,KAAK,QAEjC+F,GACA9N,EAAAtD,EAAAuD,cAAC0O,GAAD,CAAU/B,OAASA,OCVZmC,UAxBgB,SAAApP,GAA6B,IAA1BgD,EAA0BhD,EAA1BgD,KAAM6F,EAAoB7I,EAApB6I,OAAQrC,EAAYxG,EAAZwG,MAEtCvF,EAAekF,qBAAW1E,GAA1BR,WAEFmN,EAAY5H,EAAMlD,OAAS,EAC3ByH,EAAa9J,IAEnB,OACEZ,EAAAtD,EAAAuD,cAAA,OAAK6G,UAAU,SACXiH,GACA/N,EAAAtD,EAAAuD,cAAA,UACIkG,EAAMlE,IAAI,SAACR,EAAM9C,GAAP,OACRqB,EAAAtD,EAAAuD,cAAA,MAAI+O,IAAMvN,EAAK+C,MACbxE,EAAAtD,EAAAuD,cAACgP,GAAD,CAAMtM,KAAOA,EAAO6F,OAASA,EAAS7J,MAAQA,EAAQ8C,KAAOA,QAMvEzB,EAAAtD,EAAAuD,cAACiP,GAAD,CAASvM,KAAOA,EAAO6F,OAASA,EAASkC,WAAaA,gBC/B7CyE,GADF,SAAIjJ,GAAJ,OAAiBA,EAAIA,EAAIjD,OAAS,ICoHhCmM,GA7GkB,WAAM,IAAAtG,EAYjChD,qBAAW1E,GATbd,EAHmCwI,EAGnCxI,YACAC,EAJmCuI,EAInCvI,aACAC,EALmCsI,EAKnCtI,eACAE,EANmCoI,EAMnCpI,QACAD,EAPmCqI,EAOnCrI,OACAE,EARmCmI,EAQnCnI,UACAI,EATmC+H,EASnC/H,OACAG,EAVmC4H,EAUnC5H,UACAC,EAXmC2H,EAWnC3H,aAXmCsM,EAcb3H,qBAAWxK,GAA3BE,EAd6BiS,EAc7BjS,KAAMC,EAduBgS,EAcvBhS,MA4Fd,OA1FAc,oBAAU,WAER,IAAM8S,EAAU,SAAC1M,GACf,GAAY,MAARnH,EAAc,OAAO,EACzB,GAAIsH,EAAUH,GAAO,OAAO,EAC5B,IAAMlB,EpBGmB,SAACjG,EAAgBmH,GAC9C,IAAM2M,EAAa,SAAChS,EAAoBiS,GACtC,YAAWvO,IAAP1D,QAA4B0D,IAARuO,GACjBjS,EAAGkH,OAAS+K,EAAI/K,MAAQlH,EAAGkS,WAAaD,EAAIC,UAE/CC,EAA0B,SAACrM,EAAoB9F,GACnD,OAAO8F,EAASK,UAAUiM,KAAK,SAAAjO,GAAI,OAAI6N,EAAW9N,EAAMC,GAAOnE,MAE7DqE,EAAMe,EAAUC,GACpB,IAAwC,IAApC2M,EAAW9N,EAAMhG,GAAOmG,EAAI,IAAhC,CACAA,EAAMA,EAAIoB,MAAM,GAEhB,IADA,IAAItB,EAA6BjG,EAC1BmG,EAAIsB,OAAS,GAAG,CACrB,IAAM3F,EAAKqE,EAAI,GAGf,GAFAA,EAAMA,EAAIoB,MAAM,QAEH/B,KADbS,EAAOgO,EAAwBhO,EAAMnE,IACb,OAE1B,OAAOmE,GoBrBUkO,CAAgBnU,EAAMmH,GACnC,OAAOlB,GAAQA,EAAKgC,UAAUR,OAAS,GAGnC2M,EAAO,eAAAjQ,EAAAvD,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAG,SAAAC,EAAOgL,GAAP,IAAA4F,EAAA7L,EAAArE,EAAAU,EAAA,OAAAvB,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACVsD,KAAmC,KAAlBsH,EAAMiI,QADb,CAAA/S,EAAAE,KAAA,eAAAF,EAAAU,OAAA,iBAAAV,EAAAgT,GAENlI,EAAMiI,QAFA/S,EAAAE,KAKP,KALOF,EAAAgT,GAAA,EAMP,KANOhT,EAAAgT,GAAA,EAWP,KAXOhT,EAAAgT,GAAA,EAYP,KAZOhT,EAAAgT,GAAA,EAiBP,KAjBOhT,EAAAgT,GAAA,EAkBP,KAlBOhT,EAAAgT,GAAA,EAyBP,KAzBOhT,EAAAgT,GAAA,GA0BP,KA1BOhT,EAAAgT,GAAA,GAgCP,KAhCOhT,EAAAgT,GAAA,GAsCP,KAtCOhT,EAAAgT,GAAA,GA0CP,MA1COhT,EAAAgT,GAAA,GAmDP,IAnDOhT,EAAAgT,GAAA,0BAOV3O,IAPUrE,EAAAU,OAAA,0BAaV2D,EAAa,QAbHrE,EAAAU,OAAA,2BAmBKwD,IAAXD,EAnBM,CAAAjE,EAAAE,KAAA,gBAAAF,EAAAU,OAAA,sBAoBNiD,EAAOM,KAA+B,IAApBsO,EAAQtO,GApBpB,CAAAjE,EAAAE,KAAA,gBAAAF,EAAAU,OAAA,SAoB8C2D,KApB9C,eAqBVT,EAAQK,GArBEjE,EAAAU,OAAA,4BA2BKwD,IAAXD,EA3BM,CAAAjE,EAAAE,KAAA,gBAAAF,EAAAU,OAAA,sBA4Ba,IAAnBiD,EAAOM,GA5BD,CAAAjE,EAAAE,KAAA,gBAAAF,EAAAU,OAAA,SA4B2B2D,EAAa,SA5BxC,eA6BVR,EAAUI,GA7BAjE,EAAAU,OAAA,uBAiCVoK,EAAMsF,sBACSlM,IAAXD,EAlCM,CAAAjE,EAAAE,KAAA,gBAAAF,EAAAU,OAAA,yBAmCV+C,EAAaQ,GAnCHjE,EAAAU,OAAA,2BAuCVgD,IAvCU1D,EAAAU,OAAA,wBA2Ca,IAAnBoK,EAAMmI,SA3CA,CAAAjT,EAAAE,KAAA,gBAAAF,EAAAU,OAAA,0BA4CKwD,IAAXD,EA5CM,CAAAjE,EAAAE,KAAA,gBAAAF,EAAAU,OAAA,yBA6CVoK,EAAMsF,iBACAM,EAAU1K,EAAU/B,GAAUA,EAApB,GAAAgB,OAAiChB,EAAjC,QAChBR,EAAaiN,GACbtM,EAAUsM,GAhDA1Q,EAAAU,OAAA,uBAoDI,OAAV/B,EApDM,CAAAqB,EAAAE,KAAA,gBAAAF,EAAAU,OAAA,0BAqDKwD,IAAXD,EArDM,CAAAjE,EAAAE,KAAA,gBAAAF,EAAAU,OAAA,qBAsDJmE,EAAMe,EAAU3B,QAEXC,KADL1D,EAAK6R,GAAKxN,IAvDN,CAAA7E,EAAAE,KAAA,gBAAAF,EAAAU,OAAA,0BA0DOwD,KADXhD,EAAWmR,GAAKxN,EAAIoB,MAAM,GAAI,KAzD1B,CAAAjG,EAAAE,KAAA,gBAAAF,EAAAU,OAAA,yBA2DV2D,EAAa,QACbR,EAAUI,GA5DAjE,EAAAE,KAAA,GA6DJvB,EAAMK,OAAOwB,EAAIU,GA7Db,eAAAlB,EAAAU,OAAA,qCAAAV,EAAAI,SAAAN,MAAH,gBAAAa,GAAA,OAAAkC,EAAAjC,MAAAC,KAAAC,YAAA,GAkEb,OADA8I,OAAOsJ,iBAAiB,UAAWJ,GAC5B,kBAAMlJ,OAAOuJ,oBAAoB,UAAWL,KAClD,CACDtP,EACAC,EACAC,EACAC,EACAC,EACAC,EACAI,EACAG,EACAC,EACA3F,EACAC,IAGK,MChGMyU,GAde,WAAM,IAGhC1P,EACEsF,qBAAW1E,GADbZ,eAQF,OALAjE,oBAAU,WAER,OADAmK,OAAOsJ,iBAAiB,QAASxP,GAC1B,kBAAMkG,OAAOuJ,oBAAoB,QAASzP,KAChD,CAACA,IAEG,MC6BM2P,UA3Be,SAAAxQ,GAAqB,IAAlBnE,EAAkBmE,EAAlBnE,KAEzB4U,GAF2CzQ,EAAZlE,WAEZuF,IAATxF,GACV2K,EAAQiK,EAAU5U,EAAKiI,eAAYzC,EACnC1D,EAAK8S,EAAU5O,EAAMhG,QAASwF,EAC9BwH,EAASlL,EACTqF,EAAOyN,EAAU9O,EAAehE,QAAO0D,EANI8H,EASdhD,qBAAW1E,GAAtCH,EATyC6H,EASzC7H,SAAUE,EAT+B2H,EAS/B3H,aAGlB,OAFIiP,IAA0B,IAAfnP,KAAsBE,IAGnCnB,EAAAtD,EAAAuD,cAAA,OAAK6G,UAAU,QACXsJ,GACApQ,EAAAtD,EAAAuD,cAAAD,EAAAtD,EAAA2T,SAAA,KACErQ,EAAAtD,EAAAuD,cAACqQ,GAAD,MACAtQ,EAAAtD,EAAAuD,cAACsQ,GAAD,MACAvQ,EAAAtD,EAAAuD,cAACuQ,EAAA,EAAD,CAAaC,QAAUC,MACrB1Q,EAAAtD,EAAAuD,cAAC2O,GAAD,CAAOjM,KAAOA,EAAQ6F,OAASA,EAAUrC,MAAQA,SCH9CwK,UAtBmB,WAAM,IAAA7H,EAEdhD,qBAAWxK,GAA3BE,EAF8BsN,EAE9BtN,KAAMC,EAFwBqN,EAExBrN,MACRmV,EAAsB,MAARpV,EACdqV,EAAmB,MAARrV,GAAyB,MAATC,EAC3B+I,EAAe,MAARhJ,EAAeA,EAAKgJ,KAAO,GAExC,OACExE,EAAAtD,EAAAuD,cAAA,OAAK6G,UAAU,iBACX8J,GACA5Q,EAAAtD,EAAAuD,cAAC6Q,EAAD,MAEAD,GACA7Q,EAAAtD,EAAAuD,cAAAD,EAAAtD,EAAA2T,SAAA,KACErQ,EAAAtD,EAAAuD,cAAA,MAAI6G,UAAU,YAAatC,GAC3BxE,EAAAtD,EAAAuD,cAAC8Q,GAAD,CAAMvV,KAAOA,EAAQC,MAAQA,QCnBtB8F,UAAoB9F,IAA7B4F,MAASE,eAuEFyP,GAjEuB,SAAArR,GAAkB,IAAfsR,EAAetR,EAAfsR,SAAehV,EAE9BC,qBAF8BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAE/CwF,EAF+CtF,EAAA,GAEzC+U,EAFyC/U,EAAA,GAAAgV,EAGtBjV,oBAAS,GAHakV,EAAAhV,OAAAC,EAAA,EAAAD,CAAA+U,EAAA,GAG/CE,EAH+CD,EAAA,GAGrCE,EAHqCF,EAAA,GAAAG,EAIRrV,oBAAS,GAJDsV,EAAApV,OAAAC,EAAA,EAAAD,CAAAmV,EAAA,GAI/CE,EAJ+CD,EAAA,GAI9BE,EAJ8BF,EAAA,GAK9C/V,EAAUqK,qBAAWxK,GAArBG,MAERc,oBAAU,WACR,GAAa,MAATd,EAAJ,CACA,IAAM6B,EAAKiE,GAAc0P,GACf,MAAN3T,EAIJlB,OAAAI,EAAA,EAAAJ,CAAAK,EAAAC,EAAAC,KAAC,SAAAC,IAAA,IAAA6E,EAAA,OAAAhF,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACoBvB,EAAME,KAAK2B,GAD/B,YAEU0D,KADHS,EADP3E,EAAAG,MAEsBiU,EAAQzP,GAAQ6P,GAAY,GAFlD,wBAAAxU,EAAAI,SAAAN,KAADR,GAHEsV,GAAmB,KAOpB,CAACjW,EAAOwV,IAEX,IAAMU,GAAyB,IAAbN,IAA0C,IAApBI,GAAqC,MAARhQ,EAC/DoM,EAAmB,MAARpM,EACXmQ,EAAWnQ,GAAQA,EAAK+C,KACxB9C,EAAQD,GAAQW,KAAKC,UAAUZ,EAAKC,WAAOV,EAAW,GAE5D,OACEhB,EAAAtD,EAAAuD,cAAA,OAAK6G,UAAU,gBACX6K,GACA3R,EAAAtD,EAAAuD,cAAA,6BAEAwR,GACAzR,EAAAtD,EAAAuD,cAAA,SAAKgR,EAAL,iBAEAI,GACArR,EAAAtD,EAAAuD,cAAA,SAAKgR,EAAL,cAEApD,GACA7N,EAAAtD,EAAAuD,cAAAD,EAAAtD,EAAA2T,SAAA,KACErQ,EAAAtD,EAAAuD,cAAA,UAAM2R,GACN5R,EAAAtD,EAAAuD,cAAA,mBACAD,EAAAtD,EAAAuD,cAAA,KAAG6G,UAAU,aAAcpF,GAC3B1B,EAAAtD,EAAAuD,cAAA,oBACAD,EAAAtD,EAAAuD,cAAA,UACIwB,GAAQA,EAAK8C,OAAOsN,UAAU5P,IAAI,SAAC2F,EAAkBjJ,GACnD,IAAMmT,EAAUlK,EAAMkK,QAAU1P,KAAKC,UAAUuF,EAAMkK,aAAS9Q,EAAW,GAAK,KACxE+Q,EAAyB,MAAXD,EACdE,EAAWC,OAAOrK,EAAMoK,UAC9B,OACEhS,EAAAtD,EAAAuD,cAAA,MAAI+O,IAAMrQ,GACRqB,EAAAtD,EAAAuD,cAAA,cAAU2H,EAAMG,MAAe/H,EAAAtD,EAAAuD,cAAA,WAC7B8R,GACA/R,EAAAtD,EAAAuD,cAAAD,EAAAtD,EAAA2T,SAAA,KAAErQ,EAAAtD,EAAAuD,cAAA,QAAM6G,UAAU,SAAUgL,GAAgB9R,EAAAtD,EAAAuD,cAAA,YAE5C+R,SCjDPE,GARoB,SAAAvS,GAAkB,IAAfsR,EAAetR,EAAfsR,SACpC,OACEjR,EAAAtD,EAAAuD,cAAA,OAAK6G,UAAU,iBACb9G,EAAAtD,EAAAuD,cAACkS,GAAD,CAAclB,SAAWA,GAAY,OCI5BmB,UARmB,WAChC,OACEpS,EAAAtD,EAAAuD,cAAA,OAAK6G,UAAU,gBACb9G,EAAAtD,EAAAuD,cAAA,mBCqBSoS,GApBO,WAEpB,OACErS,EAAAtD,EAAAuD,cAAA,OAAK6G,UAAU,OACb9G,EAAAtD,EAAAuD,cAACqS,EAAD,MACAtS,EAAAtD,EAAAuD,cAAA,YACED,EAAAtD,EAAAuD,cAACsS,EAAD,KACEvS,EAAAtD,EAAAuD,cAACuS,EAAD,KACExS,EAAAtD,EAAAuD,cAAC8G,EAAA,EAAD,CAAQN,SAAWA,GACjBzG,EAAAtD,EAAAuD,cAACwS,GAAD,CAAU9P,KAAK,MACf3C,EAAAtD,EAAAuD,cAACyS,GAAD,CAAU/P,KAAK,oBACf3C,EAAAtD,EAAAuD,cAAC0S,GAAD,CAASC,SAAO,UCVVC,QACW,cAA7BnM,OAAOC,SAASmM,UAEe,UAA7BpM,OAAOC,SAASmM,UAEhBpM,OAAOC,SAASmM,SAASC,MACvB,iECXNC,IAASC,OAAOjT,EAAAtD,EAAAuD,cAACiT,GAAD,MAASC,SAASC,eAAe,SDkI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.574aacd2.chunk.js","sourcesContent":["import { createContext } from \"react\"\n\ntype Value = {\n  tree: TreeItem | null\n  treey: Treey | null\n}\n\nconst value = {\n  tree: null,\n  treey: null\n} as Value\n\nconst TreeyContext = createContext(value)\n\nexport default TreeyContext\n","import { useState, useEffect } from \"react\"\nimport treey from \"treey\"\nconst { treey: { init, read, createAndAdd, update, remove, move } } = treey\n\nconst useTreey = () => {\n  const [tree, setTree] = useState()\n  useEffect(() => {\n    (async () => {\n      const tree = await init()\n      setTree(tree)\n    })()\n  }, [])\n  const actions: Treey = {\n    read: async (id: Id) => {\n      return await read(id)\n    },\n    createAndAdd: async (data: Data, parentId: Id) => {\n      const tree = await createAndAdd(data, parentId)\n      setTree(tree)\n    },\n    update: async (id: Id, data: Data) => {\n      const tree = await update(id, data)\n      setTree(tree)\n    },\n    remove: async (id: Id, parentId: Id, index: Index) => {\n      const tree = await remove(id, parentId, index)\n      setTree(tree)\n    },\n    move: async (id: Id, oldParentId: Id, parentId: Id, oldIndex: Index, index: Index) => {\n      const tree = await move(id, oldParentId, parentId, oldIndex, index)\n      setTree(tree)\n    }\n  }\n  return [tree, actions]\n}\n\nexport default useTreey\n","import React, { ReactNode } from \"react\"\nimport TreeyContext from '../contexts/TreeyContext'\nimport useTreey from \"../hooks/useTreey\"\n\ntype Props = {\n  children: ReactNode\n}\n\nconst TreeyProvider: React.FC<Props> = ({ children }) => {\n\n  const [tree, treey] = useTreey()\n  const value = { tree, treey }\n\n  return (\n    <TreeyContext.Provider value={ value }>\n      { children }\n    </TreeyContext.Provider>\n  )\n}\n\nexport default TreeyProvider\n","import { createContext } from \"react\"\n\ntype Value = {\n  isShownForm (path?: Path) : boolean\n  setShownForm (path: Path) : void\n  unsetShownForm () : void\n  isOpen (path: Path) : boolean\n  setOpen (path: Path) : void\n  unsetOpen (path: Path) : void\n  isDragging (path?: Path) : boolean\n  setDragging (path: Path) : void\n  unsetDragging () : void\n  active: Path | undefined\n  isActive (path?: Path) : boolean\n  setActive (path: Path) : void\n  changeActive (direction?: Direction) : void\n}\n\nconst unimplemented = () => { throw new Error (\"UIContext not implemented\") }\n\nconst value = {\n  isShownForm: unimplemented,\n  setShownForm: unimplemented,\n  unsetShownForm: unimplemented,\n  isOpen: unimplemented,\n  setOpen: unimplemented,\n  unsetOpen: unimplemented,\n  isDragging: unimplemented,\n  setDragging: unimplemented,\n  unsetDragging: unimplemented,\n  active: undefined,\n  isActive: unimplemented,\n  setActive: unimplemented,\n  changeActive: unimplemented\n} as Value\n\nconst UIContext = createContext(value)\n\nexport default UIContext\n","import treey from \"treey\"\nconst { utils: { createFullName, parseFullName } } = treey\n\nexport { createFullName }\nexport { parseFullName }\n\nexport const getId = (item: TreeItem) : Id | undefined => item.state.ids && item.state.ids[0]\nexport const getData = (item: TreeItem) : Data => item.state && item.state.data\n// @TODO: getPath should return Path not Ids\nexport const getPath = (id: Id | undefined, parents: Ids) : Ids => id ? parents.concat(id) : parents\nexport const getName = (id: Id | undefined, parents: Ids) : Name => getPath(id, parents).map(id => createFullName(id)).join(\"/\")\nexport const stringifyData = (data: Data) : string => {\n  if (typeof data === \"string\") return data\n  return JSON.stringify(data, undefined, 1)\n}\nexport const parseData = (str: string) : Data => {\n  try {\n    return JSON.parse(str)\n  } catch (err) {\n    return str\n  }\n}\nexport const parsePath = (path: Path) : Ids => {\n  const strs = path.split(\"/\")\n  const ids = strs.map(id => parseFullName(id))\n  return ids.filter((id: Id | undefined) : id is Id => id !== undefined)\n}\nexport const isPathAdd = (path: Path) : boolean => {\n  return path.slice(-4) === \"/add\"\n}\n\nexport const getItemFromPath = (tree: TreeItem, path: Path) : TreeItem | undefined => {\n  const compareIds = (id: Id | undefined, id1: Id | undefined) => {\n    if (id === undefined || id1 === undefined) return false\n    return id.name === id1.name && id.protocol === id1.protocol\n  }\n  const getRelationFromItemById = (treeItem: TreeItem, id: Id) : TreeItem | undefined => {\n    return treeItem.relations.find(item => compareIds(getId(item), id))\n  }\n  let ids = parsePath(path)\n  if (compareIds(getId(tree), ids[0]) === false) return undefined\n  ids = ids.slice(1)\n  let item: TreeItem | undefined = tree\n  while (ids.length > 0) {\n    const id = ids[0]\n    ids = ids.slice(1)\n    item = getRelationFromItemById(item, id)\n    if (item === undefined) return undefined\n  }\n  return item\n}\n","import { getId, getName } from \"../treeItemUtils\"\n\nconst pruneTree = (tree: TreeItems, isOpen: Paths, parents: Ids = []) : TreeItems => {\n  const prunedTree: TreeItems = []\n  tree.forEach(treeItem => {\n    const id = getId(treeItem)!\n    const treeItemName = getName(id, parents)\n    const treeItemIsOpen = isOpen.includes(treeItemName)\n    const hasRelations = treeItem.relations.length > 1\n    const shouldPrune = treeItemIsOpen && hasRelations\n    const relations = shouldPrune ? pruneTree(treeItem.relations, isOpen, parents.concat(id)) : []\n    const newTreeItem = { ...treeItem, relations }\n    prunedTree.push(newTreeItem)\n  })\n  return prunedTree\n}\nexport default pruneTree\n","import { getId, getName } from \"../treeItemUtils\"\n\nconst mapTreeItem = (treeItem: TreeItem, parents: Ids) : TreeItems => {\n  const id = getId(treeItem)!\n  const path = treeItem.path ? treeItem.path : getName(id, parents)\n  const newTreeItem = { ...treeItem, path }\n  return [newTreeItem, newTreeItem.relations.map(relation => mapTreeItem(relation, parents.concat(id)))].flat(Infinity) as TreeItems\n}\nconst flattenTree = (tree: TreeItems) : TreeItems => {\n  return tree.map(treeItem => mapTreeItem(treeItem, [])).flat(Infinity) as TreeItems\n}\nexport default flattenTree\n","import { getId, createFullName } from \"../treeItemUtils\"\n\nconst appendAddToSiblings = (tree: TreeItems, parentPath?: Path) : TreeItems => {\n  const newTree: TreeItems = []\n  tree.forEach(treeItem => {\n    const path = `${ parentPath ? parentPath + \"/\" : \"\" }${ createFullName(getId(treeItem)!) }`\n    const relations = appendAddToSiblings(treeItem.relations, path)\n    const treeItemAdd: TreeItem = {\n      state: {},\n      events: [],\n      relations: [],\n      name: \"add\",\n      isCyclic: false,\n      isKnown: true,\n      isDestroyed: false,\n      path: `${ path }/add`\n    }\n    relations.push(treeItemAdd)\n    const newTreeItem = { ...treeItem, relations }\n    newTree.push(newTreeItem)\n  })\n  return newTree\n}\nexport default appendAddToSiblings\n","import { useState } from \"react\"\n\ntype UsePathState = [\n  Path | undefined,\n  (p?: Path) => boolean,\n  (p: Path) => void,\n  () => void\n]\n\nconst usePathState = () : UsePathState => {\n  const [path, setPath] = useState<Path>()\n  const is = (p?: Path) => p === undefined ? path !== undefined : p === path\n  const set = (p: Path) => setPath(p)\n  const unset = () => setPath(undefined)\n  return [path, is, set, unset]\n}\nexport default usePathState\n","import { useState } from \"react\"\n\ntype UsePathsState = [\n  Paths,\n  (p: Path) => boolean,\n  (p: Path) => void,\n  (p: Path) => void\n]\n\nconst usePathsState = () : UsePathsState => {\n  const [paths, setPaths] = useState<Paths>([])\n  const is = (p: Path) => paths.includes(p)\n  const set = (p: Path) => {\n    if (is(p)) return\n    setPaths(paths.concat(p))\n  }\n  const unset = (p: Path) => {\n    setPaths(paths.filter(path => path !== p))\n  }\n  return [paths, is, set, unset]\n}\nexport default usePathsState\n","import React, { useContext, ReactNode } from \"react\"\nimport UIContext from '../contexts/UIContext'\nimport TreeyContext from '../contexts/TreeyContext'\nimport pruneTree from \"../utils/tree/pruneTree\"\nimport flattenTree from \"../utils/tree/flattenTree\"\nimport appendAddToSiblings from \"../utils/tree/appendAddToSiblings\"\nimport { getId, getName } from \"../utils/treeItemUtils\"\nimport usePathState from \"../hooks/usePathState\"\nimport usePathsState from \"../hooks/usePathsState\"\n\ntype Props = {\n  children: ReactNode\n}\n\nconst UIProvider: React.FC<Props> = ({ children }) => {\n\n  // shown form\n  const [, isShownForm, setShownForm, unsetShownForm] = usePathState()\n\n  // is opened\n  const [open, isOpen, setOpen, unsetOpen] = usePathsState()\n\n  // is dragging\n  const [, isDragging, setDragging, unsetDragging] = usePathState()\n\n  // is active\n  const [active, isActive, setActive] = usePathState()\n\n  const { tree } = useContext(TreeyContext)\n  const changeActive = (direction: Direction = \"next\") => {\n\n    if (tree == null) return\n\n    const treeWithAdd = appendAddToSiblings([tree])\n    const rootPath = getName(getId(tree), [])\n    const arr = open.concat(rootPath)\n\n    const prunedTree = pruneTree(treeWithAdd, arr)\n    const flattenedArr = flattenTree(prunedTree)\n    // remove root item\n    const items = flattenedArr.slice(1)\n\n    const setFirstItemActive = () => {\n      const path = items[0].path!\n      setActive(path)\n    }\n\n    if (isActive() === false) {\n      setFirstItemActive()\n    } else {\n      const index = items.findIndex(item => isActive(item.path))\n      if (index === -1) return setFirstItemActive()\n      const followingIndex = direction === \"next\" ? index + 1 : index - 1\n      const l = items.length - 1\n      const i =\n        followingIndex > l ? 0 :\n        followingIndex < 0 ? l :\n        followingIndex\n      const path = items[i].path!\n      setActive(path)\n    }\n  }\n\n  const value = {\n    isShownForm,\n    setShownForm,\n    unsetShownForm,\n    isOpen,\n    setOpen,\n    unsetOpen,\n    isDragging,\n    setDragging,\n    unsetDragging,\n    active,\n    isActive,\n    setActive,\n    changeActive\n  }\n\n  return (\n    <UIContext.Provider value={ value }>\n      { children }\n    </UIContext.Provider>\n  )\n}\n\nexport default UIProvider\n","const basepath = window.location.host === \"gilleswittenberg.github.io\" ? \"/treey-react/\" : \"/\"\nexport default basepath\n","import React from \"react\"\nimport { Link } from \"@reach/router\"\nimport basepath from \"../utils/basepath\"\n\nimport \"../styles/Header.sass\"\n\nconst Header: React.SFC = () => {\n  const src = process.env.PUBLIC_URL + \"/images/logo_64x64.png\"\n  return (\n    <header className=\"Header\">\n      <Link to={ basepath }>\n        <h1><img src={ src } width=\"32px\" height=\"32px\" alt=\"木\" /></h1>\n        <h2>treey</h2>\n      </Link>\n    </header>\n  )\n}\n\nexport default Header\n","import React from \"react\"\n\nimport \"../styles/Spinner.sass\"\n\nconst Spinner: React.FC = () => (<p className=\"Spinner\">is loading&hellip;</p>)\n\nexport default Spinner\n","import React from \"react\"\n\ntype Props = {\n  data: Data\n}\n\nconst ItemData: React.FC<Props> = ({ data }) => {\n  const isUrl = /^https?:\\/\\//.test(data)\n  return (\n    <span className=\"ItemData\">\n      { isUrl ? <a href={ data } onClick={ event => event.stopPropagation() }>{ data }</a> : data }\n    </span>\n  )\n}\n\nexport default ItemData\n","import React from \"react\"\n\nimport \"../styles/Button.sass\"\n\ntype ButtonType = \"ADD\" | \"EDIT\" | \"DELETE\"\n\ntype Props = {\n  type: ButtonType\n  onClick?: () => void\n}\n\nconst typeToImageMap = (type: ButtonType) : string => {\n  switch (type) {\n  case \"ADD\": return \"add_64x64.png\"\n  case \"EDIT\": return \"submit_64x64.png\"\n  case \"DELETE\": return \"remove_64x64.png\"\n  }\n}\n\nconst Button: React.FC<Props> = ({ type, onClick }) => {\n  const className = \"Button \" + type\n  const backgroundImage = `url(\"${ process.env.PUBLIC_URL }/images/${ typeToImageMap(type) }\")`\n  const style = { backgroundImage }\n  return (\n    <button className={ className } style={ style } onClick={ onClick } title={ type }>{ type }</button>\n  )\n}\n\nexport default Button\n","const defer = (func: () => unknown) => { \n    window.setTimeout(func, 1)\n}\nexport default defer","import React, { useContext, useState } from \"react\"\nimport { useDrag, useDrop } from \"react-dnd\"\nimport { Link } from \"@reach/router\"\nimport cs from \"classnames\"\nimport TreeyContext from \"../contexts/TreeyContext\"\nimport UIContext from \"../contexts/UIContext\"\nimport ItemData from \"./ItemData\"\nimport Button from \"./Button\"\nimport basepath from \"../utils/basepath\"\nimport { getId, getData, stringifyData } from \"../utils/treeItemUtils\"\nimport defer from \"../utils/defer\"\n\ntype Props = {\n  path: Path\n  parent: Id\n  index: Index\n  item: TreeItem\n  isOver: boolean\n  onClick: () => void\n  onClickAdd: () => void\n  onClickEdit: () => void\n  onClickDelete: () => void\n}\n\nconst ItemBody: React.FC<Props> = ({ path, parent, index, item, isOver, onClick, onClickAdd, onClickEdit, onClickDelete }) => {\n\n  const id = getId(item)\n  const dropId = id\n  const { isDragging: isDraggingGlobal, setDragging, unsetDragging, setOpen, isActive: itemIsActive } = useContext(UIContext)\n  const { treey } = useContext(TreeyContext)\n  const isDraggingUIContext = isDraggingGlobal()\n  const isActive = itemIsActive(path)\n\n  const [isHovered, setIsHovered] = useState(false)\n  const onMouseEnter = () => setIsHovered(true)\n  const onMouseLeave = () => setIsHovered(false)\n\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: \"item\", parent, index, id, path },\n    begin: () => defer(() => setDragging(path)),\n    end: () => unsetDragging(),\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  })\n\n  const hasRelations = item.relations.length > 0\n  const showAddButton = !hasRelations\n  const showButtons = isHovered && !isDragging && !isDraggingUIContext\n  const data = getData(item)\n  const dataString = stringifyData(data)\n  const linkTo = `${ basepath }item/${ item.name }`\n\n  const [{ isOver: isOverDeep }, drop] = useDrop({\n    accept: \"item\",\n    drop: async (item, monitor) => {\n\n      const draggableData = item as DraggableData\n      const id = draggableData.id\n      const oldParentId = draggableData.parent\n      const oldIndex = draggableData.index\n      const parentId = dropId\n      if (parentId == null) return\n\n      // guard for null treey context\n      if (treey == null) return\n      await treey.move(id, oldParentId, parentId, oldIndex)\n      setOpen(path)\n    },\n    collect: monitor => ({\n      isOver: monitor.isOver({ shallow: true }),\n      canDrop: monitor.canDrop()\n    })\n  })\n\n  const isDisabled = isDragging\n  const showDrop = (isOver && !hasRelations) || isOverDeep\n  const showDnDPlaceHolderChild = isOverDeep\n\n  return (\n    <div className={ cs(\"ItemBodyWrap\", { isActive, isDisabled }) }>\n      <div\n        ref={ drag }\n        className={ cs(\"ItemBody\", { showAddButton, showButtons, showDrop }) }\n        onMouseEnter={ onMouseEnter }\n        onMouseLeave={ onMouseLeave }\n        >\n        <span onClick={ onClick }>\n          <ItemData data={ dataString } />\n          <Link to={ linkTo } className=\"info\">ⓘ</Link>\n        </span>\n        { showDrop &&\n          <div ref={ drop } className=\"ItemAddDrop\">\n            <Button type=\"ADD\" />\n          </div>\n        }\n        { showAddButton &&\n          <Button type=\"ADD\" onClick={ onClickAdd } />\n        }\n        <Button type=\"EDIT\" onClick={ onClickEdit } />\n        <Button type=\"DELETE\" onClick={ onClickDelete } />\n      </div>\n      <div className={ cs(\"dnd-placeholder\", \"dnd-placeholder-child\", { isShown: showDnDPlaceHolderChild }) }><div></div></div>\n    </div>\n  )\n}\n\nexport default ItemBody\n","import React, { useContext, useRef, useState } from \"react\"\nimport { useDrop } from 'react-dnd'\nimport TreeyContext from \"../contexts/TreeyContext\"\nimport ItemBody from \"./ItemBody\"\nimport cs from \"classnames\"\n\nimport \"../styles/ItemDnD.sass\"\n\ntype Props = {\n  parent: Id\n  path: Path\n  index: Index\n  item: TreeItem\n  onClick: () => void\n  onClickAdd: () => void\n  onClickEdit: () => void\n  onClickDelete: () => void\n}\n\ntype HoverRegion = \"top\" | \"bottom\"\n\nconst ItemDnD: React.FC<Props> = ({ parent, path, index, item, onClick, onClickAdd, onClickEdit, onClickDelete }) => {\n\n  const { treey } = useContext(TreeyContext)\n  const ref = useRef<HTMLDivElement>(null)\n  const [hoverRegion, setHoverRegion] = useState<HoverRegion>()\n\n  const [{ canDrop, isOver }, drop] = useDrop({\n    accept: \"item\",\n    canDrop: (item, monitor) => monitor.getItem().path !== path,\n    hover: (item, monitor) => {\n      const clientOffset = monitor.getClientOffset()\n      const clientRect = ref && ref.current && ref.current.getBoundingClientRect()\n      if (clientRect && clientOffset) {\n        const itemHeight = 44\n        const verticalSpacing = 6\n        const h = itemHeight + 2 * verticalSpacing\n        const y = clientOffset.y - clientRect.top\n        const newHoverRegion = y <= h / 2 ? \"top\" : \"bottom\"\n        setHoverRegion(newHoverRegion)\n      }\n    },\n    drop: async (item, monitor) => {\n\n      // guard for nested drop targets\n      if (monitor.didDrop()) return\n\n      const draggableData = item as DraggableData\n      const id = draggableData.id\n      const oldParentId = draggableData.parent\n      const oldIndex = draggableData.index\n      // add one if hover over bottom\n      // substract one if draggable came from before droppable\n      const newIndex = index + (hoverRegion === \"bottom\" ? 1 : 0) - (oldParentId === parent && oldIndex < index ? 1 : 0)\n      // guard for dropped on previous location\n      console.log(id, oldParentId, parent, oldIndex, newIndex)\n      if (oldParentId === parent && oldIndex === newIndex) return\n\n      // guard for null treey context\n      if (treey == null) return\n      await treey.move(id, oldParentId, parent, oldIndex, newIndex)\n    },\n    collect: monitor => ({\n      isOver: monitor.isOver({ shallow: true }),\n      canDrop: monitor.canDrop()\n    })\n  })\n\n  const showPlaceholder = isOver && canDrop\n  const showPrePlaceholder = showPlaceholder && hoverRegion === \"top\"\n  const showPostPlaceholder = showPlaceholder && hoverRegion === \"bottom\"\n\n  return (\n    <div ref={ ref }>\n      <div ref={ drop }>\n        <div className={ cs(\"dnd-placeholder\", { isShown: showPrePlaceholder }) }><div></div></div>\n        <ItemBody\n          path={ path }\n          parent={ parent }\n          index={ index }\n          item={ item }\n          isOver={ isOver }\n          onClick={ onClick }\n          onClickAdd={ onClickAdd }\n          onClickEdit={ onClickEdit }\n          onClickDelete={ onClickDelete }\n        />\n        <div className={ cs(\"dnd-placeholder\", { isShown: showPostPlaceholder }) }><div></div></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ItemDnD\n","import React, { useState, FormEvent } from \"react\"\nimport Button from \"./Button\"\n\ntype Props = {\n  submit: (value: string) => Promise<void>\n  initialValue?: string\n}\n\nconst ItemForm: React.FC<Props> = ({ submit, initialValue = \"\" }) => {\n\n  const [value, setValue] = useState(initialValue)\n\n  const onSubmit = async (event: FormEvent) => {\n    event.preventDefault()\n    await submit(value)\n  }\n\n  const onChange = (event: FormEvent) => {\n    setValue((event.target as HTMLInputElement).value)\n  }\n\n  return (\n    <form onSubmit={ onSubmit }>\n      <input type=\"text\" value={ value } onChange={ onChange } ref={ elem => elem && elem.focus() } />\n      <Button type=\"EDIT\" />\n    </form>\n  )\n}\n\nexport default ItemForm\n","import React, { useContext } from \"react\"\nimport TreeyContext from \"../contexts/TreeyContext\"\nimport UIContext from \"../contexts/UIContext\"\nimport ItemDnD from \"./ItemDnD\"\nimport ItemForm from \"./ItemForm\"\nimport Items from \"./Items\"\nimport { getId, getData, stringifyData, parseData, createFullName } from \"../utils/treeItemUtils\"\nimport cs from \"classnames\"\nimport { isEqual } from \"lodash\"\n\nimport \"../styles/Item.sass\"\n\ntype Props = {\n  path: Path\n  parent: Id\n  index: Index\n  item: TreeItem\n}\n\nconst Item: React.FC<Props> = ({ path: parentPath, parent, index, item }) => {\n\n  const id = getId(item)!\n  const path = `${ parentPath }/${ createFullName(id) }`\n  const pathAdd = `${ path }/add`\n  const data = getData(item)\n  const dataString = stringifyData(data)\n  const hasRelations = item.relations.length > 0\n\n  const { treey } = useContext(TreeyContext)\n  const remove = async () => {\n    if (treey == null) return\n    if (id == null) return\n    await treey.remove(id, parent, index)\n  }\n  const {\n    isShownForm,\n    setShownForm,\n    unsetShownForm,\n    isOpen: itemIsOpen,\n    setOpen,\n    unsetOpen,\n    isDragging: itemIsDragging,\n    setActive\n  } = useContext(UIContext)\n\n  const isOpen = itemIsOpen(path)\n  const isEditing = isShownForm(path)\n  const isDragging = itemIsDragging(path)\n  const showItem = isDragging || !isEditing\n  const showForm = !isDragging && isEditing\n  const showItems = !isDragging && ((isOpen && hasRelations) || isShownForm(pathAdd))\n\n  const onClick = () => {\n    if (isShownForm(pathAdd)) unsetShownForm()\n    const selection = window.getSelection()\n    if (selection && selection.toString() !== \"\") return\n    if (!hasRelations) return\n    if (!isOpen) return setOpen(path)\n    if (isOpen) return unsetOpen(path)\n  }\n  const onClickAdd = () => {\n    setShownForm(pathAdd)\n    setOpen(path)\n    setActive(pathAdd)\n  }\n  const onClickEdit = () => {\n    setShownForm(path)\n    setActive(path)\n  }\n  const onClickDelete = async () => {\n    await remove()\n    unsetOpen(path)\n    setActive(parentPath)\n  }\n  const submit = async (value: string) => {\n    unsetShownForm()\n    const trimmedValue = value.trim()\n    if (trimmedValue === \"\") return remove()\n    const newData = parseData(trimmedValue)\n    if (isEqual(data, newData)) return\n    if (treey == null) return\n    if (id == null) return\n    await treey.update(id, newData)\n  }\n\n  return (\n    <div className={ cs(\"Item\") } onClick={ event => event.stopPropagation() }>\n      <div className={ cs({ isHidden: !showItem }) }>\n        <ItemDnD\n          parent={ parent }\n          path={ path }\n          index={ index }\n          item={ item }\n          onClick={ onClick }\n          onClickAdd={ onClickAdd }\n          onClickEdit={ onClickEdit }\n          onClickDelete={ onClickDelete }\n        />\n      </div>\n      <div className={ cs(\"ItemFormWrap\", { isHidden: !showForm }) }>\n        <ItemForm submit={ submit } initialValue={ dataString } />\n      </div>\n      <div className={ cs({ isHidden: !showItems }) }>\n        <Items parent={ id } path={ path } items={ item.relations } />\n      </div>\n    </div>\n  )\n}\n\nexport default Item\n","import React, { useContext } from \"react\"\nimport TreeyContext from \"../contexts/TreeyContext\"\nimport UIContext from \"../contexts/UIContext\"\nimport ItemForm from \"./ItemForm\"\nimport Button from \"./Button\"\nimport { parseData } from \"../utils/treeItemUtils\"\nimport cs from \"classnames\"\n\nimport \"../styles/FormAdd.sass\"\n\ntype Props = {\n  path: Path\n  parent: Id\n  isDisabled: boolean\n}\n\nconst FormAdd: React.FC<Props> = ({ path: parentPath, parent, isDisabled }) => {\n\n  const path = `${ parentPath }/add`\n  const { isShownForm, setShownForm, unsetShownForm, isActive: itemIsActive, setActive, setOpen } = useContext(UIContext)\n  const { treey } = useContext(TreeyContext)\n\n  const showForm = isShownForm(path)\n  const show = isDisabled || !showForm\n  const isActive = itemIsActive(path)\n\n  const onClick = () => {\n    setShownForm(path)\n    setActive(path)\n  }\n\n  const submit = async (value: string) => {\n    unsetShownForm()\n    setOpen(parentPath)\n    const trimmedValue = value.trim()\n    if (trimmedValue === \"\") return\n    if (treey === null) return\n    const data = parseData(trimmedValue)\n    await treey.createAndAdd(data, parent)\n  }\n\n  return (\n    <div className={ cs(\"FormAdd\", { isDisabled, isActive }) } onClick={ event => event.stopPropagation() }>\n      { show &&\n        <Button onClick={ onClick } type=\"ADD\" />\n      }\n      { showForm &&\n        <ItemForm submit={ submit } />\n      }\n    </div>\n  )\n}\n\nexport default FormAdd\n","import React, { useContext } from \"react\"\nimport UIContext from \"../contexts/UIContext\"\nimport Item from \"./Item\"\nimport FormAdd from \"./FormAdd\"\n\nimport \"../styles/Items.sass\"\n\ntype Props = {\n  path: Path\n  parent: Id\n  items: TreeItems\n}\n\nconst Items: React.FC<Props> = ({ path, parent, items }) => {\n\n  const { isDragging } = useContext(UIContext)\n\n  const showItems = items.length > 0\n  const isDisabled = isDragging()\n\n  return (\n    <div className=\"Items\">\n      { showItems &&\n        <ul>\n          { items.map((item, index) =>\n              <li key={ item.name }>\n                <Item path={ path } parent={ parent } index={ index } item={ item } />\n              </li>\n            )\n          }\n        </ul>\n      }\n      <FormAdd path={ path } parent={ parent } isDisabled={ isDisabled } />\n    </div>\n  )\n}\n\nexport default Items\n","const last = <T>(arr: T[]) => arr[arr.length - 1]\nexport default last\n","import React, { useContext, useEffect } from \"react\"\nimport UIContext from \"../contexts/UIContext\"\nimport TreeyContext from \"../contexts/TreeyContext\"\nimport { parsePath } from \"../utils/treeItemUtils\"\nimport last from \"../utils/last\"\nimport { isPathAdd, getItemFromPath } from \"../utils/treeItemUtils\"\n\nconst KeyboardEvents: React.FC = () => {\n\n  const {\n    isShownForm,\n    setShownForm,\n    unsetShownForm,\n    setOpen,\n    isOpen,\n    unsetOpen,\n    active,\n    setActive,\n    changeActive\n  } = useContext(UIContext)\n\n  const { tree, treey } = useContext(TreeyContext)\n\n  useEffect(() => {\n\n    const canOpen = (path: Path) => {\n      if (tree == null) return false\n      if (isPathAdd(path)) return false\n      const item = getItemFromPath(tree, path)\n      return item && item.relations.length > 0\n    }\n\n    const handler = async (event: KeyboardEvent) => {\n      if (isShownForm() && event.keyCode !== 27) return\n      switch (event.keyCode) {\n        // down arrow\n        // k (VIM)\n        case 40:\n        case 75:\n          changeActive()\n          break\n        // up arrow\n        // i (VIM)\n        case 38:\n        case 73:\n          changeActive(\"prev\")\n          break\n        // right arrow\n        // l (VIM)\n        case 39:\n        case 76:\n          if (active === undefined) return\n          if (isOpen(active) || canOpen(active) === false) return changeActive()\n          setOpen(active)\n          break\n        // left arrow\n        // j (VIM)\n        case 37:\n        case 74:\n          if (active === undefined) return\n          if (isOpen(active) === false) return changeActive(\"prev\")\n          unsetOpen(active)\n          break\n        // enter\n        case 13:\n          event.preventDefault()\n          if (active === undefined) return\n          setShownForm(active)\n          break\n        // esc\n        case 27:\n          unsetShownForm()\n          break\n        // +\n        case 187:\n          if (event.shiftKey === false) return\n          if (active === undefined) return\n          event.preventDefault()\n          const pathAdd = isPathAdd(active) ? active : `${ active }/add`\n          setShownForm(pathAdd)\n          setActive(pathAdd)\n          break\n        // backspace\n        case 8:\n          if (treey === null) return\n          if (active === undefined) return\n          const ids = parsePath(active)\n          const id = last(ids)\n          if (id === undefined) return\n          const parentId = last(ids.slice(0, -1))\n          if (parentId === undefined) return\n          changeActive(\"prev\")\n          unsetOpen(active)\n          await treey.remove(id, parentId)\n          break\n      }\n    }\n    window.addEventListener(\"keydown\", handler)\n    return () => window.removeEventListener(\"keydown\", handler)\n  }, [\n    isShownForm,\n    setShownForm,\n    unsetShownForm,\n    isOpen,\n    setOpen,\n    unsetOpen,\n    active,\n    setActive,\n    changeActive,\n    tree,\n    treey\n  ])\n\n  return null\n}\n\nexport default KeyboardEvents\n","import React, { useContext, useEffect } from \"react\"\nimport UIContext from \"../contexts/UIContext\"\n\nconst MouseEvents: React.FC = () => {\n\n  const {\n    unsetShownForm\n  } = useContext(UIContext)\n\n  useEffect(() => {\n    window.addEventListener(\"click\", unsetShownForm)\n    return () => window.removeEventListener(\"click\", unsetShownForm)\n  }, [unsetShownForm])\n\n  return null\n}\n\nexport default MouseEvents\n","import React, { useContext } from \"react\"\nimport Items from \"./Items\"\nimport { DndProvider } from \"react-dnd\"\nimport HTML5Backend from \"react-dnd-html5-backend\"\nimport UIContext from \"../contexts/UIContext\"\nimport KeyboardEvents from \"../components/KeyboardEvents\"\nimport MouseEvents from \"../components/MouseEvents\"\nimport { getId, createFullName } from \"../utils/treeItemUtils\"\n\nimport \"../styles/Tree.sass\"\n\ntype Props = {\n  tree: TreeItem\n  treey: Treey\n}\n\nconst Tree: React.FC<Props> = ({ tree, treey }) => {\n\n  const hasTree = tree !== undefined\n  const items = hasTree ? tree.relations : undefined\n  const id = hasTree ? getId(tree)! : undefined\n  const parent = id\n  const path = hasTree ? createFullName(id!) : undefined\n\n  // set first item active\n  const { isActive, changeActive } = useContext(UIContext)\n  if (hasTree && isActive() === false) changeActive()\n\n  return (\n    <div className=\"Tree\">\n      { hasTree &&\n        <>\n          <KeyboardEvents />\n          <MouseEvents />\n          <DndProvider backend={ HTML5Backend }>\n            <Items path={ path! } parent={ parent! } items={ items! } />\n          </DndProvider>\n        </>\n      }\n    </div>\n  )\n}\n\nexport default Tree\n","import React, { useContext } from \"react\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport TreeyContext from \"../contexts/TreeyContext\"\nimport Spinner from \"../components/Spinner\"\nimport Tree from \"../components/Tree\"\n\nimport \"../styles/Home.sass\"\n\ntype Props = RouteComponentProps\n\nconst PageHome: React.FC<Props> = () => {\n\n  const { tree, treey } = useContext(TreeyContext)\n  const showSpinner = tree == null\n  const showTree = tree != null && treey != null\n  const name = tree != null ? tree.name : \"\"\n\n  return (\n    <div className=\"Page PageHome\">\n      { showSpinner &&\n        <Spinner/>\n      }\n      { showTree &&\n        <>\n          <h1 className=\"RootItem\">{ name }</h1>\n          <Tree tree={ tree! } treey={ treey! } />\n        </>\n      }\n    </div>\n  )\n}\n\nexport default PageHome\n","import React, { useState, useContext, useEffect } from \"react\"\nimport TreeyContext from \"../contexts/TreeyContext\"\nimport treey from \"treey\"\n\nimport \"../styles/ItemOverview.sass\"\n\nconst { utils: { parseFullName } } = treey\n\ntype Props = {\n  fullName: string\n}\n\nconst ItemOverview: React.FC<Props> = ({ fullName }) => {\n\n  const [item, setItem] = useState<TreeItem>()\n  const [notFound, setNotFound] = useState(false)\n  const [invalidFullName, setInvalidFullName] = useState(false)\n  const { treey } = useContext(TreeyContext)\n\n  useEffect(() => {\n    if (treey == null) return\n    const id = parseFullName(fullName)\n    if (id == null) {\n      setInvalidFullName(true)\n      return\n    }\n    (async () => {\n      const item = await treey.read(id)\n      item !== undefined ? setItem(item) : setNotFound(true)\n    })()\n  }, [treey, fullName])\n\n  const isLoading = notFound === false && invalidFullName === false && item == null\n  const showItem = item != null\n  const itemName = item && item.name\n  const state = item && JSON.stringify(item.state, undefined, 2)\n\n  return (\n    <div className=\"ItemOverview\">\n      { isLoading &&\n        <p>is loading&hellip;</p>\n      }\n      { invalidFullName &&\n        <p>{ fullName } is not valid</p>\n      }\n      { notFound &&\n        <p>{ fullName } not found</p>\n      }\n      { showItem &&\n        <>\n          <h1>{ itemName }</h1>\n          <h2>state</h2>\n          <p className=\"small pre\">{ state }</p>\n          <h2>events</h2>\n          <ul>\n            { item && item.events.reverse().map((event: ItemEvent, index: number) => {\n                const payload = event.payload ? JSON.stringify(event.payload, undefined, 1) : null\n                const showPayload = payload != null\n                const datetime = String(event.datetime)\n                return (\n                  <li key={ index }>\n                    <strong>{ event.type }</strong><br/>\n                    { showPayload &&\n                      <><span className=\"small\">{ payload }</span><br/></>\n                    }\n                    { datetime }\n                  </li>\n                )\n              })\n            }\n          </ul>\n        </>\n      }\n    </div>\n  )\n}\n\nexport default ItemOverview\n","import React from \"react\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport ItemOverview from \"../components/ItemOverview\"\n\ntype Props = RouteComponentProps & {\n  fullName?: string\n}\n\nconst PageItem: React.SFC<Props> = ({ fullName }) => {\n  return (\n    <div className=\"Page PageItem\">\n      <ItemOverview fullName={ fullName || \"\" } />\n    </div>\n  )\n}\n\nexport default PageItem\n","import React from \"react\"\nimport { RouteComponentProps } from \"@reach/router\"\n\nimport \"../styles/Page404.sass\"\n\ntype Props = RouteComponentProps\n\nconst Page404: React.SFC<Props> = () => {\n  return (\n    <div className=\"Page Page404\">\n      <p>404</p>\n    </div>\n  )\n}\n\nexport default Page404\n","import React from \"react\"\nimport TreeyProvider from \"./components/TreeyProvider\"\nimport UIProvider from \"./components/UIProvider\"\nimport { Router } from \"@reach/router\"\nimport basepath from \"./utils/basepath\"\nimport Header from \"./components/Header\"\nimport PageHome from \"./pages/Home\"\nimport PageItem from \"./pages/Item\"\nimport Page404 from \"./pages/404\"\n\n\nconst App: React.FC = () => {\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <main>\n        <TreeyProvider>\n          <UIProvider>\n            <Router basepath={ basepath }>\n              <PageHome path=\"/\" />\n              <PageItem path=\"/item/:fullName\" />\n              <Page404 default />\n            </Router>\n          </UIProvider>\n        </TreeyProvider>\n      </main>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nimport \"./styles/screen.sass\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}